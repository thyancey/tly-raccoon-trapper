{"version":3,"sources":["services/game/metrics-slice.ts","phaser/trapper/utils/values.js","phaser/trapper/entities/raccoon.js","phaser/trapper/spawn.js","phaser/trapper/entities/player.js","phaser/trapper/entities/stat-bar.js","phaser/event-emitter.js","phaser/trapper/entities/bowl.js","phaser/trapper/index.js","services/ui/ui-slice.ts","services/game/reducer.ts","services/store.ts","phaser/trapper/level.js","components/game/game-interface.tsx","themes/index.ts","services/hooks.ts","components/game/rules-checker.tsx","components/game/brain.tsx","components/game/phaser-container.tsx","components/button.tsx","components/ui/splash.tsx","components/ui/components/controls.tsx","components/ui/components/debugstats.tsx","components/ui/sidebar.tsx","components/ui/components/modals.tsx","components/ui/modals.tsx","components/ui/components/music.tsx","app/index.tsx","services/serviceWorker.ts","index.tsx","services/game/status-slice.ts"],"names":["initialState","bowls","hugs","bites","captures","escapes","activeEnemies","scoreModifiers","metricsSlice","createSlice","name","reducers","setMetric","state","action","key","payload","undefined","value","console","error","extraReducers","builder","addCase","exitGame","actions","selectMetrics","Object","keys","game","metrics","filter","sKey","map","k","isGood","selectMetricsMap","selectGoodMetrics","s","selectBadMetrics","selectScore","total","forEach","getScore","selectActiveEnemies","Values","zindex","BACKGROUND","LANE_1","LANE_2","LANE_3","LANE_4","FOREGROUND","getDepthOfLane","laneIdx","offset","idx","isNaN","e","sceneRef","STATUS","ROAMING","EATING","ROAMING_TAME","DEAD","HUGGING","IDLE","CAPTURED","ESCAPED","BITING","spriteKey","velocityRanges","LIL_PUNT","min","x","y","max","diff","BIG_PUNT","exportMap","Entity","scene","physicsGroup","spawnData","deathTimer","destroyTimer","punted","type","particleDeath","stats","status","isFull","eatOffset","curPhysState","curAnimState","puntKillThreshold","misc","feedable","depth","setDepth","add","existing","physics","global","poo","setBounce","setCollideWorldBounds","allowGravity","body","setSize","setStatus","setInteractive","tint","setTint","this","kill","isAlive","touching","down","velocity","force","vRange","puntedTimer","time","delayedCall","setDrag","setVelocity","quickKill","destroy","flipX","animKey","getAnimationForState","curAnim","playAnimationForKey","adjustMovementForState","given","isMovingStatus","moveStop","bowlBody","anims","play","statusKey","modifier","speed","moveNormal","resumeStatus","delayedDestroy","Phaser","Physics","Arcade","Sprite","initSprites","sceneContext","create","frames","frame","frameRate","repeat","generateFrameNumbers","start","end","initSpritesheet","load","spritesheet","frameWidth","frameHeight","player","lastSentActiveEnemies","spawnFrequency","curTicker","spawnPositions","defGlobalEntities","defEnemyEntities","defLaneSpawns","groups","entityTypes","Raccoon","rollForSpawns","laneSpawnData","spawnCommands","enemies","lane","enemy","Math","random","rate","push","getSpawnCommands","spawnCount","sData","eData","spawnIt","throttledUpdate","throttle","gameActive","updateSpawnCount","children","each","entity","EntityRef","entityData","statsObj","pos","Between","jumpRate","randomScale","scaleRange","setScale","spawnPlayer","laneData","Player","countActive","Events","emit","external_setSpawnFrequency","newValue","sliderPosition","minV","log","scale","round","exp","formatSliderValue","setContext","context","preload","Bowl","globalEntities","levelData","sceneData","lanes","pO","parseInt","l","spawns","group","staticGroup","update","spawn","anim","item","spawnBowl","bowl","spawnSpeed","slingBowl","statBar","OFFSET","progress","setPosition","cellIdx","floor","FEED","KICK_PREP","KICK","ATTACKED","animationStatus","gameState","recoveryTimer","hpRange","hp","laneValues","parseLaneData","posOffset","spriteOffset","lastIntent","kickCharge","setOrigin","refreshBody","updatePlayerPosition","cursors","input","keyboard","createCursorKeys","StatBar","changeLane","width","maxIdx","length","realPos","setOffsetPosition","cancelKick","setLaneDepth","statusKeys","indexOf","setProgress","checkStatuses","getModifiedKickCharge","checkStatus","intent","getIntentFromStateAndKeys","startKick","kick","startHug","cancelHug","up","isDown","right","left","chargeKick","playStatusAnimation","playAnimationForStatus","eventEmitter","EventEmitter","drainRate","drainStart","drainTimer","feeding","canBeEaten","startDrainTimer","onDrainTimer","Date","drainAmount","emptyBowl","enemyEntity","addToDrainRate","feeder","bowlEmpty","levelGroups","INITIAL_STATE_POINTS","points","gameData","curLevel","particleDefs","blood","image","emitter","quantity","visible","blendMode","angle","lifespan","gravityY","raccoon","atlas","sound","cycle","frequency","raccoon_mean","particles","createGame","config","AUTO","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","height","zoom","autoRound","default","arcade","gravity","debug","Game","LevelController","SpawnController","audioSprite","getScene","level","levels","scenes","sceneKey","on","onInterface","spawnGroups","entities","collider","platforms","collider_enemyAndPlatform","overlap","trigger_enemyAndBowl","leftTrigger","trigger_itemAtStart","rightTrigger","trigger_enemyAtEnd","trigger_enemyAndPlayer","onObjectClicked","onKeyDown","event","data","gameInterface","trigger","STATUS_ENEMY","setPoints","captured","escaped","canEat","eatAtBowl","eatenBy","platform","STATUS_PLAYER","getKickStrength","kickStrength","punt","willKill","showParticle","thudVolume","playAudioSprite","volume","kickEnemy","hug","onHugEnemy","hugEnemy","bite","onAttackedByEnemy","bitePlayer","pointer","gameObject","clicked","worldX","worldY","pDef","pEmitter","createEmitter","explode","stopGame","stop","startGame","setLevel","levelIdx","code","change","updateScoreboard","pauseGame","pause","resumeGame","resume","killGame","fetchThing","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","uiSlice","increment","decrement","incrementByAmount","pending","fulfilled","combineReducers","metricsReducer","statusReducer","store","configureStore","reducer","ui","uiReducer","gameReducer","TRIGGER_DIMS","triggerY","platformWidth","setDisplaySize","setAlpha","createGameInterface","dispatch","createGlobalStyle","getColor","colorId","colors","black","white","grey","grey_light","grey_dark","pink","brown","brown_light","brown_dark","tan","red","green","green_light","shadows","z1","z2","z3","breakpoints","mobile_tiny","mobile_medium","mobile_large","tablet","desktop","useAppSelector","useSelector","checkMetricRule","metricRule","stateValue","condition","criteria","evaluateExpression","evaluateGameCondition","gameCondition","results","i","some","gc","when","Brain","useDispatch","playStatus","selectPlayStatus","useEffect","rules","RulesJson","TRAPPER","metricRules","stateMetrics","m","metric","result","gameConditions","resultObjs","passedCondition","then","reason","halt","evaluateGameConditions","conditions","resultAction","loseRound","winRound","ScPhaserContainer","styled","div","ScWrapper","PhaserContainer","id","ScButton","Button","onClick","text","ScSplash","ScBg","ScBody","ScButtons","h1","ScLogo","Splash","navigate","useNavigate","title","onGameClick","ScControls","ScEnemies","Controls","useState","setSpawnSpeed","className","onChange","target","ScStats","ScStatGroup","p","statType","css","ScStat","ScDebug","DebugStats","goodStats","badStats","score","ScSidebar","ScBottom","ScTop","ScLink","Link","ScHelp","ScSideImage","HelpList","Sidebar","collapsed","setCollapsed","to","ScModal","WonModal","LostModal","PausedModal","MultiModal","playStatusObj","ScModals","Modals","ReselectModalFromGameStatus","ScMusic","Music","playing","setPlaying","useSound","ScStage","RouteReader","location","useLocation","pathname","App","gameStatus","selectGameStatus","pages","route","element","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","statusSlice","playStatusReason","getModalFromGameStatus","createSelector"],"mappings":"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","file":"static/js/main.2f895869.chunk.js","sourcesContent":["// slightly evolving from create-react-app example\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { RootState } from '../store';\r\nimport { exitGame } from './status-slice';\r\n\r\n\r\nexport interface StatsState {\r\n  bowls: number,\r\n  hugs: number,\r\n  bites: number,\r\n  captures: number,\r\n  escapes: number,\r\n  activeEnemies: number\r\n}\r\n\r\nconst initialState: StatsState = {\r\n  bowls: 0,\r\n  hugs: 0,\r\n  bites: 0,\r\n  captures: 0,\r\n  escapes: 0,\r\n  activeEnemies: 0\r\n};\r\n\r\nconst scoreModifiers: GameMetrics = {\r\n  bowls: -.25,\r\n  hugs: 5,\r\n  bites: -10,\r\n  captures: 10,\r\n  escapes: -5,\r\n  activeEnemies: 0\r\n};\r\n\r\nexport const metricsSlice = createSlice({\r\n  name: 'metrics',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setMetric: (state: StatsState, action: PayloadAction<any>) => {\r\n      const key = action.payload?.key as GameMetricKey;\r\n      if(state[key] !== undefined){\r\n        state[key] = action.payload?.value;\r\n      }else{\r\n        console.error('invalid stat called in reducer:', action.payload.key)\r\n      }\r\n\r\n      // state.score = getScore(state);\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(exitGame, (state) => {\r\n        return initialState;\r\n      })\r\n  },\r\n});\r\n\r\nexport const getScore = (metrics: GameMetrics) => {\r\n  let total = 0;\r\n  Object.keys(metrics).forEach(k => {\r\n    // ignore 'score' or other unwanted values\r\n    if(scoreModifiers[k as GameMetricKey]){\r\n      total += metrics[k as GameMetricKey] * scoreModifiers[k as GameMetricKey];\r\n    }\r\n  })\r\n\r\n  return total;\r\n}\r\n\r\n\r\n\r\nexport const { setMetric } = metricsSlice.actions;\r\nexport const selectMetrics = (state: RootState): Array<GameMetric> => {\r\n  return Object.keys(state.game.metrics)\r\n  .filter(sKey => scoreModifiers[sKey as GameMetricKey] !== undefined)\r\n  .map(k => ({\r\n    key: k,\r\n    value: state.game.metrics[k as GameMetricKey],\r\n    isGood: scoreModifiers[k as GameMetricKey] > 0\r\n  }));\r\n};\r\n\r\nexport const selectMetricsMap = (state: RootState): GameMetrics => {\r\n  return state.game.metrics;\r\n};\r\n\r\nexport const selectGoodMetrics = (state: RootState) => {\r\n  return selectMetrics(state).filter(s => s.isGood);\r\n};\r\nexport const selectBadMetrics = (state: RootState) => {\r\n  return selectMetrics(state).filter(s => !s.isGood);\r\n};\r\nexport const selectScore = (state: RootState) => getScore(state.game.metrics);\r\nexport const selectActiveEnemies = (state: RootState) => state.game.metrics.activeEnemies;\r\nexport default metricsSlice.reducer;\r\n","\r\nexport const Values = {\r\n  zindex:{\r\n    BACKGROUND: 0,\r\n    LANE_1: 10,\r\n    LANE_2: 20,\r\n    LANE_3: 30,\r\n    LANE_4: 40,\r\n    FOREGROUND: 50\r\n  }\r\n}\r\n\r\n\r\nexport const getDepthOfLane = (laneIdx, offset = 0) => {\r\n  try{\r\n    const idx = Values.zindex[`LANE_${laneIdx + 1}`] + offset;\r\n    if(!isNaN(idx)) return idx;\r\n  }catch(e){\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport default Values;","import Phaser from 'phaser';\r\n\r\nconst KILL_TIMEOUT = 3000;\r\nconst DESTROY_TIMEOUT = 1000;\r\nconst PUNT_TIMEOUT = 1000;\r\nlet sceneRef;\r\n\r\nexport const STATUS = {\r\n  ROAMING: 0,\r\n  EATING: 1,\r\n  ROAMING_TAME: 3,\r\n  DEAD: 4,\r\n  HUGGING: 5,\r\n  IDLE: 6,\r\n  CAPTURED: 12,\r\n  ESCAPED: 13,\r\n  BITING: 14,\r\n}\r\n\r\nconst spriteKey = 'raccoon';\r\nconst velocityRanges = {\r\n  LIL_PUNT: {\r\n    min: { x: -75, y: -50 },\r\n    max: { x: -200, y: -200 },\r\n    diff: { x: 0, y: 0 }\r\n  },\r\n  BIG_PUNT: {\r\n    min: { x: -500, y: -300 },\r\n    max: { x: -700, y: -500 },\r\n    diff: { x: 0, y: 0 }\r\n  }\r\n}\r\n\r\nvelocityRanges.LIL_PUNT.diff = {\r\n  x: velocityRanges.LIL_PUNT.max.x - velocityRanges.LIL_PUNT.min.x,\r\n  y: velocityRanges.LIL_PUNT.max.y - velocityRanges.LIL_PUNT.min.y\r\n};\r\nvelocityRanges.BIG_PUNT.diff = {\r\n  x: velocityRanges.BIG_PUNT.max.x - velocityRanges.BIG_PUNT.min.x,\r\n  y: velocityRanges.BIG_PUNT.max.y - velocityRanges.BIG_PUNT.min.y\r\n};\r\n\r\n/*\r\nstats = {\r\n  speed: [ minSpeedX, maxSpeedX ]\r\n}\r\n*/\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, physicsGroup, spawnData) {\r\n    super(scene, spawnData.x, spawnData.y, 'raccoon');\r\n    sceneRef = scene;\r\n    this.deathTimer = null;\r\n    this.destroyTimer = null;\r\n    this.punted = null;\r\n    this.type = 'raccoon';\r\n    this.particleDeath = spawnData.particleDeath;\r\n\r\n    // this.status = STATUS.ROAMING;\r\n    // this.love = 0;\r\n    // this.maxLove = 100;\r\n    this.stats = spawnData.stats || {};\r\n    this.status = null;\r\n    this.isFull = false;\r\n\r\n    // move bowl to the right, relative to entity\r\n    this.eatOffset = 11;\r\n\r\n    this.curPhysState = null;\r\n    this.curAnimState = null;\r\n\r\n    this.puntKillThreshold = 1;\r\n    if(spawnData.misc?.puntKillThreshold || spawnData.misc?.puntKillThreshold === 0){\r\n      this.puntKillThreshold = spawnData.misc.puntKillThreshold;\r\n    }\r\n\r\n    this.feedable = true;\r\n    if(spawnData.misc?.feedable === false){\r\n      this.feedable = false;\r\n    }\r\n\r\n    //- parent stuff\r\n    if(!isNaN(spawnData.depth)) {\r\n      this.setDepth(spawnData.depth);\r\n    }\r\n    scene.add.existing(this);\r\n    if(physicsGroup){\r\n      physicsGroup.add(this);\r\n    }else{\r\n      scene.physics.add.existing(this);\r\n    }\r\n    global.poo = this;\r\n    //- physics\r\n    this.setBounce(0);\r\n    this.setCollideWorldBounds(false);\r\n    this.allowGravity = false;\r\n\r\n    //- squeeze in hit box from edge of sprite\r\n    this.body.setSize(30,20);\r\n    this.body.offset.x = 15;\r\n    this.body.offset.y = 25;\r\n    this.setStatus(STATUS.ROAMING, true);\r\n\r\n    //- interaction listeners\r\n    this.setInteractive();\r\n    if(spawnData.misc?.tint){\r\n      this.setTint(spawnData.misc.tint);\r\n    }\r\n  }\r\n\r\n  clicked(){\r\n    this.kill(true);\r\n  }\r\n\r\n  canEat(){\r\n    if(this.isAlive() && this.feedable && !this.isFull){\r\n      switch(this.status){\r\n        case STATUS.EATING: return false;\r\n        default: return true;\r\n      }\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  canIdle(){\r\n    if(this.isAlive() && this.body.touching.down && this.body.velocity.x === 0){\r\n      switch(this.status){\r\n        case STATUS.ROAMING: return true;\r\n        case STATUS.IDLE: return true;\r\n        default: return false;\r\n      }\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // right now, its a %, later should be actual power\r\n  punt(force){\r\n    this.punted = true;\r\n    this.puntedTimer = sceneRef.time.delayedCall(PUNT_TIMEOUT, () => {\r\n      this.punted = false;\r\n    });\r\n    \r\n    // console.log('force', force)\r\n    this.body.setDrag(0);\r\n\r\n    let vRange;\r\n    if(force < .5){\r\n      vRange = velocityRanges.LIL_PUNT;\r\n    }else{\r\n      vRange = velocityRanges.BIG_PUNT;\r\n    }\r\n\r\n    // console.log('vRange', vRange.min.x + vRange.diff.x * force)\r\n    this.setVelocity(\r\n      vRange.min.x + vRange.diff.x * force,\r\n      vRange.min.y + vRange.diff.y * force,\r\n    );\r\n  }\r\n\r\n  kill(quickKill){\r\n    this.setStatus(STATUS.DEAD);\r\n\r\n    if(quickKill){\r\n      this.destroy();\r\n    }\r\n    else{\r\n      this.deathTimer = sceneRef.time.delayedCall(KILL_TIMEOUT, () => {\r\n        this.destroy();\r\n      });\r\n    }\r\n  }\r\n\r\n  update(){\r\n    //- turn if facing left\r\n    if(this.isAlive() && this.flipX){\r\n      if(this.body.velocity.x >= 0) this.flipX = false;\r\n    }else{\r\n      if(this.body.velocity.x < 0) this.flipX = true;\r\n    }\r\n\r\n    const animKey = this.getAnimationForState();\r\n    if(animKey !== this.curAnim){\r\n      this.curAnim = animKey;\r\n      this.playAnimationForKey(animKey);\r\n    }\r\n    \r\n    this.adjustMovementForState();\r\n  }\r\n\r\n  isAlive(){\r\n    return this.status !== STATUS.DEAD;\r\n  }\r\n\r\n  isMovingStatus(given){\r\n    switch (given || this.status){\r\n      case STATUS.ROAMING: return true;\r\n      case STATUS.ROAMING_TAME: return true;\r\n      default: break;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  adjustMovementForState(){\r\n    if(this.body.velocity.x < 1 && this.body.velocity.x > -1){\r\n      //- if still, but in a moving status (most likely after falling), force it again to get movin!\r\n      if(this.isMovingStatus(this.status)){\r\n        this.setStatus(this.status, true);\r\n      };\r\n    }\r\n\r\n    //- attempt to readjust after landing from a punt\r\n    if(this.body.touching.down && this.body.velocity.x < 0){\r\n      this.moveStop();\r\n    }\r\n  }\r\n\r\n  getAnimationForState(){\r\n    if(this.status === STATUS.DEAD){\r\n      return 'raccoon_dead';\r\n    } else {\r\n      if (this.body.velocity.y < -50) {\r\n        return 'raccoon_hop_up';\r\n      } else if (this.body.velocity.y > 50) {\r\n        return 'raccoon_hop_down';\r\n      } else if (this.status === STATUS.EATING){\r\n        return 'raccoon_eat';\r\n      } else if (this.status === STATUS.ROAMING_TAME){\r\n        return 'raccoon_loveWalk';\r\n      } else if (this.status === STATUS.ROAMING){\r\n        return 'raccoon_angryWalk';\r\n      } else if (this.status === STATUS.HUGGING){\r\n        return 'raccoon_hug';\r\n      } else if (this.status === STATUS.BITING){\r\n        return 'raccoon_bite';\r\n      } else if (this.status === STATUS.ESCAPED){\r\n        return 'raccoon_bite';\r\n      } else if (this.status === STATUS.CAPTURED){\r\n        return 'raccoon_hug';\r\n      } \r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  setPhysState(){\r\n    const physState = null;\r\n\r\n\r\n    if(physState && physState !== this.curPhysState){\r\n\r\n    }\r\n  }\r\n\r\n  throttledUpdate(){\r\n\r\n  }\r\n  \r\n  eatAtBowl(bowlBody){\r\n    // align with the food bowl\r\n    this.body.x = bowlBody.x - this.eatOffset;\r\n\r\n    this.setStatus(STATUS.EATING);\r\n  }\r\n\r\n  bowlEmpty(){\r\n    if(this.isAlive()){\r\n      this.isFull = true;\r\n      this.setStatus(STATUS.ROAMING_TAME);\r\n    }\r\n  }\r\n\r\n  playAnimationForKey(animKey){\r\n    if(animKey){\r\n      this.anims.play(animKey);\r\n    }\r\n  }\r\n\r\n  checkStatus(statusKey){\r\n    return this.status === statusKey;\r\n  }\r\n\r\n  moveNormal(modifier = 1){\r\n    this.body.setDrag(0);\r\n    // this.body.velocity.x = 10; \r\n    this.body.velocity.x = this.stats.speed * modifier;\r\n  }\r\n\r\n  moveStop(){\r\n    this.body.setDrag(500);\r\n  }\r\n\r\n\r\n  setStatus(status, force, playStatusAnimation = true){\r\n    if(force || this.status !== status){\r\n      this.status = status;\r\n\r\n      switch(this.status){\r\n        case STATUS.ROAMING: \r\n          this.moveNormal();\r\n          break;\r\n        case STATUS.ROAMING_TAME: \r\n          this.moveNormal(3);\r\n          break;\r\n        case STATUS.EATING: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.DEAD:\r\n          this.moveStop();\r\n          break;\r\n        case STATUS.HUGGING: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.BITING: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.CAPTURED: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.ESCAPED: \r\n          this.moveStop();\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // assumeStatus(){\r\n  //   if(this.isAlive()){\r\n  //     if(this.isFull){\r\n  //       return STATUS.ROAMING_TAME;\r\n  //     }else{\r\n  //       if(this.canIdle()){\r\n  //         return STATUS.IDLE;\r\n  //       }else{\r\n  //         return STATUS.ROAMING;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  resumeStatus(){\r\n    const statusKey = this.resumeStatus;\r\n    this.setStatus(statusKey)\r\n  }\r\n\r\n  escaped(){\r\n    this.setStatus(STATUS.ESCAPED);\r\n    this.delayedDestroy();\r\n  }\r\n\r\n  captured(){\r\n    this.setStatus(STATUS.CAPTURED);\r\n    this.delayedDestroy();\r\n  }\r\n  \r\n  hug(){    \r\n    this.setStatus(STATUS.HUGGING);\r\n    this.delayedDestroy();\r\n  }\r\n  \r\n  bite(){\r\n    this.setStatus(STATUS.BITING);\r\n    this.delayedDestroy();\r\n  }\r\n\r\n  delayedDestroy(){\r\n    this.destroyTimer = sceneRef.time.delayedCall(DESTROY_TIMEOUT, () => {\r\n      this.destroy();\r\n    });\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_idle',\r\n    frames: [ \r\n      { key: spriteKey, frame: 0 },  \r\n      { key: spriteKey, frame: 1 } \r\n    ],\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_walk',\r\n    frames: [ \r\n      { key: spriteKey, frame: 2 },  \r\n      { key: spriteKey, frame: 3 } \r\n    ],\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_start',\r\n    frames: [ { key: spriteKey, frame: 4 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_up',\r\n    frames: [ { key: spriteKey, frame: 5 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_down',\r\n    frames: [ { key: spriteKey, frame: 6 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_end',\r\n    frames: [ { key: spriteKey, frame: 7 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_angryWalk',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 2, end: 3 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_loveWalk',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 10, end: 11 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_dead',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 16, end: 17 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_eat',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 8, end: 9 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hug',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 12, end: 13 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_bite',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 14, end: 15 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_punted',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 2, end: 3 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('raccoon', './assets/sprites/raccoon2.png', { frameWidth: 56, frameHeight: 56 });\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\n\r\nimport Raccoon from './entities/raccoon.js';\r\nimport Player from './entities/player.js';\r\nimport Bowl from './entities/bowl.js';\r\nimport { getDepthOfLane } from './utils/values';\r\nimport { throttle } from 'throttle-debounce';\r\nimport Events from '../event-emitter';\r\n\r\nconst THROTTLE_SPEED = 150;\r\nconst SPAWN_MIN = 1000;\r\nconst SPAWN_MAX = 1;\r\nconst SPAWN_LIMIT = -1;\r\n\r\nlet spawnCount = 0;\r\nlet lastSentActiveEnemies = 0;\r\nlet spawnFrequency = null; // how often to roll dice for spawns\r\nlet curTicker = 0;\r\nlet spawnPositions = [];\r\nlet defGlobalEntities = {};\r\nlet defEnemyEntities = [];\r\nlet defLaneSpawns = [];\r\n\r\nconst groups = {};\r\nlet player;\r\nlet sceneContext;\r\n\r\nconst entityTypes = {\r\n  'raccoon': Raccoon.Entity\r\n}\r\n\r\n\r\nexport const setContext = (context) => {\r\n  sceneContext = context;\r\n}\r\n\r\nexport const preload = () => {\r\n  Raccoon.initSpritesheet(sceneContext);\r\n  Player.initSpritesheet(sceneContext);\r\n  Bowl.initSpritesheet(sceneContext);\r\n}\r\n\r\nexport const create = (globalEntities, levelData, sceneData) => {\r\n  spawnPositions = sceneData.lanes.map(pO => ({\r\n    x: parseInt(pO.x),\r\n    y: parseInt(pO.y) - 50\r\n  }));\r\n  defGlobalEntities = globalEntities.misc;\r\n  defEnemyEntities = globalEntities.enemies;\r\n  defLaneSpawns = levelData.lanes.map(l => l.spawns);\r\n\r\n  //- container for bad boyz\r\n  groups.enemies = sceneContext.physics.add.group();\r\n  groups.bowls = sceneContext.physics.add.group();\r\n  groups.player = sceneContext.physics.add.staticGroup();\r\n\r\n  Player.initSprites(sceneContext);\r\n  Bowl.initSprites(sceneContext);\r\n  Raccoon.initSprites(sceneContext);\r\n\r\n  spawnPlayer(sceneData.lanes);\r\n  return groups;\r\n}\r\n\r\n// from the supplied data and random rolls, get a list of entites to spawn, and the lanes they should spawn in\r\nexport const getSpawnCommands = laneSpawnData => {\r\n  let enemies = [];\r\n  laneSpawnData.forEach((lane, idx) => {\r\n    lane.forEach(enemy => {\r\n      if(Math.random() < enemy.rate){\r\n        enemies.push({ \r\n          type: enemy.type, \r\n          laneIdx: idx \r\n        });\r\n      }\r\n    })\r\n  });\r\n\r\n  return enemies;\r\n}\r\n\r\nexport const rollForSpawns = laneSpawnData => {\r\n  const spawnCommands = getSpawnCommands(laneSpawnData);\r\n  let spawnCount = 0;\r\n  spawnCommands.forEach(sData => {\r\n    const eData = defEnemyEntities[sData.type];\r\n    if(entityTypes[eData.type]){\r\n      spawnIt(entityTypes[eData.type], eData, sData.laneIdx);\r\n      spawnCount++;\r\n    }else{\r\n      console.error('unknown entity type:', eData.type);\r\n    }\r\n  })\r\n\r\n  return spawnCount;\r\n}\r\n\r\nexport const update = () => {\r\n  groups.enemies.children.each(entity => {\r\n    entity.update();\r\n  });\r\n  \r\n  groups.player.children.each(entity => {\r\n    entity.update();\r\n  });\r\n\r\n  //- hack that stops spawning when slider at lowest value\r\n  if(SPAWN_LIMIT === -1 || spawnCount < SPAWN_LIMIT){\r\n    if(spawnFrequency !== SPAWN_MIN){\r\n      if(curTicker > spawnFrequency){\r\n        curTicker = 0;\r\n        spawnCount += rollForSpawns(defLaneSpawns);\r\n      }else{\r\n        curTicker++;\r\n      }\r\n    }\r\n  }\r\n\r\n  throttledUpdate();\r\n}\r\n\r\nexport const onThrottledUpdate = () => {\r\n  if(global.gameActive){\r\n    updateSpawnCount();\r\n    groups.enemies.children?.each(entity => {\r\n      entity.throttledUpdate();\r\n    });\r\n    \r\n    groups.player.children?.each(entity => {\r\n      entity.throttledUpdate();\r\n    });\r\n  }\r\n}\r\n\r\nconst throttledUpdate = throttle(THROTTLE_SPEED, false, onThrottledUpdate);\r\nexport const spawn = (group, key, anim, x, y) => {\r\n  // console.log(`spawn ${key} at (${x}, ${y})`)\r\n\r\n  let item = groups[group].create(x, y, key);\r\n  item.anims.play(anim);\r\n  return item;\r\n}\r\n\r\n/* Internal spawn methods */\r\nconst randomizeStats = statsObj => {\r\n  return {\r\n    speed: Phaser.Math.Between(statsObj.speed[0], statsObj.speed[1]),\r\n    jumpRate: Phaser.Math.Between(statsObj.jumpRate[0], statsObj.jumpRate[1]),\r\n  }\r\n}\r\n\r\nconst spawnIt = (EntityRef, entityData, laneIdx) => {\r\n  const pos = spawnPositions[laneIdx];\r\n  const stats = randomizeStats(entityData.stats);\r\n  \r\n  let entity = new EntityRef(sceneContext, groups.enemies, {\r\n    x: pos.x,\r\n    y: pos.y,\r\n    stats: stats,\r\n    depth: getDepthOfLane(laneIdx),\r\n    misc: entityData.misc,\r\n    type: entityData.type,\r\n    particleDeath: entityData.particleDeath\r\n  });\r\n  const randomScale = Phaser.Math.Between(entityData.scaleRange[0], entityData.scaleRange[1]) / 100;\r\n  entity.setScale(randomScale);\r\n}\r\n\r\nexport const spawnBowl = (x, y) => {\r\n  let bowl = new Bowl.Entity(sceneContext, groups.bowls, {\r\n    x: x,\r\n    y: y\r\n  });\r\n\r\n  bowl.setVelocity(defGlobalEntities.bowl.spawnSpeed, 20);\r\n}\r\n\r\nexport const slingBowl = () => {\r\n  let bowl = new Bowl.Entity(sceneContext, groups.bowls, {\r\n    x: player.x + 20,\r\n    y: player.y + 90,\r\n    depth: getDepthOfLane(player.laneIdx, 1)\r\n  });\r\n\r\n  bowl.setVelocity(defGlobalEntities.bowl.spawnSpeed, -100);\r\n}\r\n\r\nconst spawnPlayer = (laneData) => {\r\n  player = new Player.Entity(sceneContext, 800, 300, groups.player, laneData);\r\n}\r\n\r\nconst updateSpawnCount = () => {\r\n  const activeEnemies = groups.enemies.countActive();\r\n  if(lastSentActiveEnemies !== activeEnemies){\r\n    lastSentActiveEnemies = activeEnemies;\r\n    Events.emit('interface', 'setMetric', { 'key': 'activeEnemies', 'value': activeEnemies });\r\n  }\r\n}\r\n\r\nconst formatSliderValue = sliderPosition => {\r\n  var minPerc = 0;\r\n  var maxPerc = 100;\r\n\r\n  var minV = Math.log(SPAWN_MIN);\r\n  var maxV = Math.log(SPAWN_MAX);\r\n  \r\n  var scale = (maxV-minV) / (maxPerc-minPerc);\r\n  \r\n  return Math.round(Math.exp(minV + scale*(sliderPosition-minPerc)));\r\n}\r\n\r\n\r\n/*\r\n//- this approach seems to perform a lot better, however cannot extend gameobject class correctly\r\nconst basicSpawn = () => {\r\n  let enemy = enemies.create(0, 50, 'raccoon_walk');\r\n  // console.log('instance:', enemy)\r\n\r\n  //- physics\r\n  enemy.setBounce(.4);\r\n  enemy.setCollideWorldBounds(true);\r\n  enemy.allowGravity = false;\r\n  \r\n  //- squeeze in hit box from edge of sprite\r\n  enemy.body.setSize(60,70);\r\n  enemy.body.offset.x = 35;\r\n  enemy.body.offset.y = 30;\r\n  enemy.anims.play('raccoon_walk');\r\n\r\n  enemy.setVelocity(Phaser.Math.Between(200, 800), 20);\r\n}\r\n */\r\n\r\nexport const external_setSpawnFrequency = (newValue) => {\r\n  spawnFrequency = formatSliderValue(newValue);\r\n}\r\n\r\nconst exportMap = {\r\n  setContext,\r\n  preload,\r\n  create,\r\n  update,\r\n  spawn,\r\n  spawnBowl,\r\n  slingBowl,\r\n  external_setSpawnFrequency\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\nimport { getDepthOfLane } from '../utils/values';\r\nimport StatBar from './stat-bar';\r\n\r\nconst STARTING_LANE = 2;\r\nconst KICK_DURATION = 500; // becomes variable based on kick power\r\nconst ATTACKED_DURATION = 1000;\r\nconst DESTROY_TIMEOUT = 5000;\r\nconst MIN_KICK_FORCE = .3;\r\nlet statBar;\r\nlet sceneRef;\r\n\r\nexport const STATUS = {\r\n  IDLE: 0,\r\n  FEED: 1,\r\n  HUGGING: 2,\r\n  KICK_PREP: 3,\r\n  KICK: 4,\r\n  ATTACKED: 5,\r\n  DEAD: 6\r\n}\r\n\r\nconst animationStatus = {\r\n  [STATUS.IDLE]: 'player_idle',\r\n  [STATUS.FEED]: 'player_idle',\r\n  [STATUS.HUGGING]: 'player_hug',\r\n  [STATUS.KICK_PREP]: 'player_kick_prep',\r\n  [STATUS.KICK]: 'player_kick',\r\n  [STATUS.ATTACKED]: 'player_hurt',\r\n  [STATUS.DEAD]: 'player_idle'\r\n}\r\n\r\nconst gameState = {};\r\n\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, x, y, physicsGroup, laneData) {\r\n    super(scene, x, y, 'player');\r\n    sceneRef = scene;\r\n    this.recoveryTimer = null;\r\n    this.destroyTimer = null;\r\n\r\n    this.hpRange = [ 0, 100 ];\r\n    this.hp = this.hpRange[1];\r\n    this.laneIdx = 0;\r\n    this.laneValues = this.parseLaneData(laneData);\r\n    this.posOffset = [];\r\n    this.spriteOffset = [];\r\n    this.lastIntent = null;\r\n\r\n    this.isAlive = true;\r\n    this.kickCharge = 0;\r\n\r\n    //- parent stuff\r\n    scene.add.existing(this);\r\n    if(physicsGroup){\r\n      physicsGroup.add(this);\r\n    }else{\r\n      scene.physics.add.existing(this);\r\n    }\r\n\r\n    /* tweak settings here when sprite changes size */\r\n    this.setOrigin(0, 0).refreshBody();\r\n    // this.body.setSize(50, 75);\r\n    // this.posOffset = [ 0, 20 ];\r\n    /* normal phaser way isnt working, so pass this along to offset the sprite a lil */\r\n    // this.spriteOffset = [ 12, 6 ];\r\n\r\n    this.body.setSize(60, 100);\r\n    this.posOffset = [ -120, 4 ];\r\n    this.spriteOffset = [ 12, 6 ];\r\n    this.setScale(1.3);\r\n\r\n    this.updatePlayerPosition();\r\n    this.setStatus(STATUS.IDLE, true);\r\n    \r\n    gameState.cursors = scene.input.keyboard.createCursorKeys();\r\n    \r\n    statBar = new StatBar.Entity(scene, 150, 150);\r\n    this.changeLane(STARTING_LANE);\r\n  }\r\n\r\n  setLaneDepth(){\r\n    this.setDepth(getDepthOfLane(this.laneIdx) - 1);\r\n  }\r\n\r\n  parseLaneData(laneData){\r\n    return laneData.map(lane => ({\r\n      x: parseInt(lane.x) + parseInt(lane.width) - 10,\r\n      y: parseInt(lane.y) - 110\r\n    }));\r\n  }\r\n  \r\n  changeLane(diff){\r\n    this.laneIdx += diff;\r\n    const maxIdx = this.laneValues.length - 1;\r\n    if(this.laneIdx > maxIdx){\r\n      this.laneIdx = 0;\r\n    }else if(this.laneIdx < 0){\r\n      this.laneIdx = maxIdx;\r\n    }\r\n\r\n\r\n    this.updatePlayerPosition();\r\n  }\r\n\r\n  updatePlayerPosition(){\r\n    const pos = this.laneValues[this.laneIdx];\r\n    const realPos = {\r\n      x: pos.x + this.posOffset[0],\r\n      y: pos.y + this.posOffset[1],\r\n    }\r\n    this.body.x = realPos.x + this.spriteOffset[0];\r\n    this.body.y = realPos.y + this.spriteOffset[1];\r\n    this.setPosition(realPos.x, realPos.y);\r\n    statBar && statBar.setOffsetPosition(realPos.x, realPos.y);\r\n\r\n    // OK to cancel a kick animation, not OK to cancel a charge\r\n    if(this.status === STATUS.KICK){\r\n      this.cancelKick();\r\n    }\r\n    \r\n    this.setLaneDepth();\r\n  }\r\n\r\n  checkStatus(statusKey){\r\n    // console.log('check', statusKey, this.status, STATUS[statusKey])\r\n    return this.status === statusKey;\r\n  }\r\n  checkStatuses(statusKeys){\r\n    return statusKeys.indexOf(this.status) > -1;\r\n  }\r\n  \r\n  onAttackedByEnemy(enemy){\r\n    // console.log('hurt')\r\n    this.setStatus(STATUS.ATTACKED);\r\n    this.recoveryTimer = sceneRef.time.delayedCall(ATTACKED_DURATION, () => {\r\n      this.setStatus(STATUS.IDLE);\r\n    });\r\n  }\r\n  \r\n  kill(){\r\n    this.setStatus(STATUS.DEAD);\r\n    this.delayedDestroy();\r\n  }\r\n\r\n  delayedDestroy(){\r\n    this.destroyTimer = sceneRef.time.delayedCall(DESTROY_TIMEOUT, () => {\r\n      this.destroy();\r\n    });\r\n  }\r\n\r\n  chargeKick(){\r\n    this.kickCharge += .1;\r\n    if(this.kickCharge > 1){\r\n      this.kickCharge = 1;\r\n    }\r\n\r\n    statBar.setProgress(this.kickCharge);\r\n  }\r\n\r\n  startKick(){\r\n    if(!this.checkStatuses([STATUS.KICK, STATUS.KICK_PREP])){\r\n      this.setStatus(STATUS.KICK_PREP);\r\n    }\r\n  }\r\n\r\n  // helps to give a minimum kick strength, helps for tapping kick and not getting 0 strength\r\n  // normalizes 0-1 between [ MIN_KICK_FORCE, 1 ]\r\n  getModifiedKickCharge(){\r\n    return MIN_KICK_FORCE + (this.kickCharge * (1 - MIN_KICK_FORCE));\r\n  }\r\n\r\n  kick(){\r\n    this.setStatus(STATUS.KICK);\r\n\r\n    this.recoveryTimer = sceneRef.time.delayedCall(this.getModifiedKickCharge() * KICK_DURATION, () => {\r\n      this.cancelKick();\r\n    });\r\n  }\r\n\r\n  cancelKick(){\r\n    this.kickCharge = 0;\r\n    statBar.setProgress(this.kickCharge);\r\n    this.setStatus(STATUS.IDLE);\r\n  }\r\n\r\n  //- eventually this should be % charge * stats\r\n  getKickStrength(){\r\n    return this.getModifiedKickCharge();\r\n  }\r\n\r\n\r\n  startHug(){\r\n    if(!this.checkStatus(STATUS.HUGGING)){\r\n      this.setStatus(STATUS.HUGGING);\r\n    }\r\n  }\r\n  cancelHug(){\r\n    if(this.checkStatus(STATUS.HUGGING)){\r\n      this.setStatus(STATUS.IDLE);\r\n    }\r\n  }\r\n\r\n\r\n  onHugEnemy(enemy){\r\n    // if(this.isAlive){\r\n      // this.setStatus(STATUS.HUG);\r\n      \r\n      // this.startRecoveryTimer(() => {\r\n      //   this.setStatus(STATUS.IDLE);\r\n      // }, 500);\r\n    // }\r\n  }\r\n\r\n  update(){\r\n    const intent = this.getIntentFromStateAndKeys();\r\n    if(intent !== this.lastIntent){\r\n      this.lastIntent = intent;\r\n      switch(intent){\r\n        case 'attacked': break; //too bad, youre being attacked\r\n        case 'moveUp': this.changeLane(-1); break;\r\n        case 'moveDown': this.changeLane(1); break;\r\n        case 'startKick': this.startKick(); break;\r\n        case 'releaseKick': this.kick(); break;\r\n        case 'startHug': this.startHug(); break;\r\n        case 'cancelHug': this.cancelHug(); break;\r\n        default: break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getIntentFromStateAndKeys(){\r\n    if(this.isAlive){\r\n      if(this.checkStatus(STATUS.ATTACKED)){\r\n        return 'attacked';\r\n      }\r\n      // moving up and down cancel most other events\r\n      if(gameState.cursors.up.isDown){\r\n        return 'moveUp';\r\n      }\r\n      if(gameState.cursors.down.isDown){\r\n        return 'moveDown';\r\n      }\r\n\r\n\r\n      // if chargin a kick, see if you let it go\r\n      if(this.checkStatus(STATUS.KICK_PREP)){\r\n        if(!gameState.cursors.right.isDown){\r\n          return 'releaseKick';\r\n        }\r\n      } else if(gameState.cursors.right.isDown){\r\n        return 'startKick';\r\n      }\r\n\r\n      // now hugggs\r\n      if(this.checkStatus(STATUS.HUGGING)){\r\n        if(!gameState.cursors.left.isDown){\r\n          return 'cancelHug';\r\n        }\r\n      } else if(gameState.cursors.left.isDown){\r\n        return 'startHug';\r\n      }\r\n\r\n      // no other keys mattered so..?\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  throttledUpdate(){\r\n    if(this.checkStatus(STATUS.KICK_PREP)){\r\n      this.chargeKick();\r\n    }\r\n  }\r\n\r\n\r\n  playAnimationForStatus(){\r\n    const animKey = animationStatus[this.status];\r\n    if(animKey){\r\n      this.anims.play(animKey);\r\n    }\r\n  }\r\n\r\n  setStatus(status, force, playStatusAnimation = true){\r\n    // console.log('setStatus', status);\r\n    if(force || this.status !== status){\r\n      if(this.status === STATUS.ATTACKED){\r\n        //- youre not attacked anymore, reset tint\r\n        this.setTint(0xffffff);\r\n      }\r\n      this.status = status;\r\n\r\n      switch(this.status){\r\n        case STATUS.IDLE: \r\n          break;\r\n        case STATUS.FEED: \r\n          break;\r\n        case STATUS.KICK_PREP: \r\n          break;\r\n        case STATUS.KICK: \r\n          break;\r\n        case STATUS.ATTACKED: \r\n          this.setTint(0xff0000);\r\n          break;\r\n        case STATUS.DEAD: \r\n          this.isAlive = false;\r\n          break;\r\n        default: break;\r\n      }\r\n      // console.log('status:', this.status)\r\n      const animKey = animationStatus[this.status];\r\n      if(animKey){\r\n        // console.log('animKey:', animKey)\r\n        this.anims.play(animKey);\r\n      }\r\n\r\n      if(playStatusAnimation) this.playAnimationForStatus();\r\n    }\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  sceneContext.anims.create({\r\n    key: 'player_idle',\r\n    frames: sceneContext.anims.generateFrameNumbers('player', { start: 0, end: 1 }),\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_hug',\r\n    frames: [ { key: 'player', frame: 2 }, { key: 'player', frame: 3 } ],\r\n    frameRate: 4,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_kick_prep',\r\n    frames: [ { key: 'player', frame: 6 } ],\r\n    frameRate: 5,\r\n    repeat: 0\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_kick',\r\n    frames: [ { key: 'player', frame: 7 } ],\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_hurt',\r\n    frames: sceneContext.anims.generateFrameNumbers('player', { start: 4, end: 5 }),\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n\r\n  \r\n  StatBar.initSprites(sceneContext);\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('player', './assets/entity-oldlady.png', { frameWidth: 64, frameHeight: 88 });\r\n\r\n  StatBar.initSpritesheet(sceneContext);\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\n\r\nconst NUM_CELLS = 7;\r\n\r\nconst OFFSET = {\r\n  x: 30,\r\n  y: -10\r\n};\r\n\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, x, y) {\r\n    super(scene, x, y, 'statBar');\r\n\r\n    this.progress = 0;\r\n    scene.add.existing(this);\r\n  }\r\n\r\n  update(){\r\n  }\r\n\r\n  setOffsetPosition(x, y){\r\n    this.setPosition(x + OFFSET.x, y + OFFSET.y);\r\n  }\r\n\r\n  playAnimationForProgress(){\r\n    const cellIdx = Math.floor(NUM_CELLS * this.progress);\r\n    this.anims.play(`statBar_${cellIdx}`);\r\n  }\r\n\r\n  setProgress(progress, force){\r\n    // console.log('setStatus', status);\r\n    if(force || this.progress !== progress){\r\n      this.progress = progress;\r\n\r\n      const cellIdx = Math.floor(7 * this.progress);\r\n      this.anims.play(`statBar_${cellIdx}`);\r\n    }\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  sceneContext.anims.create({\r\n    key: 'statBar_0',\r\n    frames: [ { key: 'statBar', frame: 0 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'statBar_1',\r\n    frames: [ { key: 'statBar', frame: 1 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'statBar_2',\r\n    frames: [ { key: 'statBar', frame: 2 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'statBar_3',\r\n    frames: [ { key: 'statBar', frame: 3 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'statBar_4',\r\n    frames: [ { key: 'statBar', frame: 4 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'statBar_5',\r\n    frames: [ { key: 'statBar', frame: 5 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'statBar_6',\r\n    frames: [ { key: 'statBar', frame: 6 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'statBar_7',\r\n    frames: [ { key: 'statBar', frame: 7 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'statBar_8',\r\n    frames: [ { key: 'statBar', frame: 8 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('statBar', './assets/statbar.png', { frameWidth: 45, frameHeight: 10 } )\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser'\r\nconst eventEmitter = new Phaser.Events.EventEmitter()\r\nexport default eventEmitter","import Phaser from \"phaser\";\r\n\r\nconst DESTROY_TIMEOUT = 1000;\r\nconst DRAIN_TIMER_INTERVAL = 500;\r\nconst MAX_FEEDING = 1;\r\nlet sceneRef;\r\n\r\nexport const STATUS = {\r\n  FULL: 0,\r\n  EATING: 1,\r\n  EMPTY: 2\r\n}\r\n\r\nconst animationStatus = {\r\n  [STATUS.FULL]: 'foodBowl_full',\r\n  [STATUS.EATING]: 'foodBowl_full',\r\n  [STATUS.EMPTY]: 'foodBowl_empty'\r\n}\r\n\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n    constructor (scene, physicsGroup, spawnData) {\r\n    super(scene, spawnData.x, spawnData.y, 'foodBowl');\r\n    sceneRef = scene;\r\n\r\n    this.drainRate = 0;\r\n    this.drainStart = null;\r\n    this.drainTimer = null;\r\n    this.destroyTimer = null;\r\n\r\n    this.hpRange = [ 0, 100 ];\r\n    this.hp = this.hpRange[1];\r\n\r\n    this.feeding = [];\r\n    this.canBeEaten = true;\r\n\r\n    //- parent stuff\r\n    scene.add.existing(this);\r\n    if(!isNaN(spawnData.depth)) {\r\n      this.setDepth(spawnData.depth);\r\n    }\r\n    if(physicsGroup){\r\n      physicsGroup.add(this);\r\n    }else{\r\n      scene.physics.add.existing(this);\r\n    }\r\n\r\n    //- physics\r\n    this.setBounce(.4);\r\n    this.setCollideWorldBounds(true);\r\n    // this.allowGravity = false;\r\n    \r\n    this.body.setSize(36,15);\r\n    this.body.offset.y = -2;\r\n\r\n    this.setStatus(STATUS.FULL, true);\r\n  }\r\n\r\n  addToDrainRate(drainRate){\r\n    this.drainRate += drainRate;\r\n    // console.log(`addToDrainRate to ${this.drainRate}`);\r\n\r\n    this.startDrainTimer();\r\n  }\r\n\r\n  setDrainRate(drainRate){\r\n    console.log(`setDrainRate to ${this.drainRate}`);\r\n    this.drainRate = drainRate;\r\n\r\n    this.startDrainTimer();\r\n  }\r\n\r\n  startDrainTimer(){\r\n    this.drainTimer = sceneRef.time.delayedCall(DRAIN_TIMER_INTERVAL, () => {\r\n      this.onDrainTimer();\r\n    });\r\n\r\n    this.drainStart = new Date();\r\n  }\r\n\r\n  onDrainTimer(){\r\n    const secondsSinceDrainStart = (new Date() - this.drainStart) / 1000;\r\n    const drainAmount = secondsSinceDrainStart * this.drainRate;\r\n    this.hp = this.hp - drainAmount;\r\n    // console.log(`hp: ${this.hp}, drainRate: ${this.drainRate}, drainAmount: ${drainAmount}`);\r\n    if(this.hp <= this.hpRange[0]){\r\n      this.hp = this.hpRange[0];\r\n      this.emptyBowl();\r\n    }else{\r\n      if(this.hp > this.hpRange[1]){\r\n        this.hp = this.hpRange[1];\r\n      }\r\n      this.startDrainTimer();\r\n    }\r\n  }\r\n\r\n  emptyBowl(){\r\n    this.setStatus(STATUS.EMPTY);\r\n    this.destroyTimer = sceneRef.time.delayedCall(DESTROY_TIMEOUT, () => {\r\n      this.destroy();\r\n    });\r\n  }\r\n\r\n  eatenBy(enemyEntity){\r\n    if(this.feeding.indexOf(enemyEntity) === -1){\r\n      enemyEntity.body.velocity.x = 0;\r\n      //- new feeder\r\n      this.addToDrainRate(20);\r\n      this.feeding.push(enemyEntity);\r\n      if(this.feeding.length >= MAX_FEEDING){\r\n        this.canBeEaten = false;\r\n      }\r\n    }else{\r\n      // console.log('feeding with ', this.feeding.length);\r\n    }\r\n\r\n    if(this.status === STATUS.FULL){\r\n      this.setStatus(STATUS.EATING);\r\n    }\r\n  }\r\n\r\n  update(){\r\n  }\r\n\r\n  setStatus(status, force){\r\n    if(force || this.status !== status){\r\n      this.status = status;\r\n\r\n      switch(this.status){\r\n        case STATUS.FULL: \r\n          break;\r\n        case STATUS.EATING: \r\n          this.body.velocity.x = 0;\r\n          this.body.setDrag(500);\r\n\r\n          break;\r\n        case STATUS.EMPTY: \r\n          this.canBeEaten = false;\r\n          this.feeding.forEach(feeder => {\r\n            feeder.bowlEmpty();\r\n          })\r\n          break;\r\n        default:;\r\n      }\r\n      const animKey = animationStatus[this.status];\r\n      if(animKey){\r\n        // console.log('play', animKey);\r\n        this.anims.play(animKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  sceneContext.anims.create({\r\n    key: 'foodBowl_full',\r\n    frames: [ { key: 'foodBowl', frame: 0 } ],\r\n    frameRate: 10\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'foodBowl_empty',\r\n    frames: [ { key: 'foodBowl', frame: 1 } ],\r\n    frameRate: 10\r\n  });\r\n}\r\n\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('foodBowl', './assets/bowl.png', { frameWidth: 38, frameHeight: 22 });\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\n\r\nimport gameData from './data.json';\r\nimport { STATUS as STATUS_ENEMY } from './entities/raccoon';\r\nimport { STATUS as STATUS_PLAYER } from './entities/player';\r\nimport Events from '../event-emitter';\r\nimport SpawnController from './spawn.js';\r\nimport LevelController from './level.js';\r\n\r\nlet game;\r\nlet levelGroups;\r\nlet sceneContext;\r\n\r\nconst INITIAL_STATE_POINTS = {\r\n  bowls: 0,\r\n  hugs: 0,\r\n  bites: 0,\r\n  captures: 0,\r\n  escapes: 0 \r\n}\r\nlet points = {};\r\n\r\nglobal.gameData = {\r\n  curLevel: 0\r\n}\r\n\r\nconst particleDefs = {\r\n  blood: {\r\n    image:'./assets/blood.png',\r\n    emitter:{\r\n      quantity: 20,\r\n      visible: false,\r\n      blendMode: 'SCREEN',\r\n      speed: { min: -400, max: 400 },\r\n      angle: { min: 210, max: 330 },\r\n      scale: { start: 1, end: 0 },\r\n      lifespan: 500,\r\n      gravityY: 1000\r\n    }\r\n  },\r\n  raccoon: {\r\n    atlas:'./assets/sprites/particle-raccoon',\r\n    sound: 'splat1',\r\n    emitter:{\r\n      quantity: 7,\r\n      frame: { frames: [ 'particle-raccoon0', 'particle-raccoon1', 'particle-raccoon2', 'particle-raccoon3', 'particle-raccoon4', 'particle-raccoon5', 'particle-raccoon6' ], cycle: true },\r\n      frequency:1,\r\n      visible: false,\r\n      speed: { min: 400, max: 600 },\r\n      angle: { min: 210, max: 330 },\r\n      scale: { start: 1.5, end: 2 },\r\n      lifespan: { min: 400, max: 800 },\r\n      gravityY: 2000\r\n    }\r\n  },\r\n  raccoon_mean: {\r\n    atlas:'./assets/sprites/particle-raccoon',\r\n    sound: 'splat1',\r\n    emitter:{\r\n      quantity: 7,\r\n      frame: { frames: [ 'particle-raccoon0', 'particle-raccoon1', 'particle-raccoon2', 'particle-raccoon3', 'particle-raccoon4', 'particle-raccoon5', 'particle-raccoon6' ], cycle: true },\r\n      frequency:1,\r\n      visible: false,\r\n      tint: 0xff0000,\r\n      speed: { min: 300, max: 500 },\r\n      angle: { min: 210, max: 330 },\r\n      scale: { start: .75, end: 1.1 },\r\n      lifespan: { min: 400, max: 800 },\r\n      gravityY: 2000\r\n    }\r\n  }\r\n}\r\nconst particles = {}\r\n/*\r\nclass AnimatedParticle extends Phaser.GameObjects.Particles.Particle\r\n{\r\n    constructor (emitter)\r\n    {\r\n        super(emitter);\r\n        this.frame = anim.frames\r\n\r\n        this.t = 0;\r\n        this.i = 0;\r\n    }\r\n\r\n    update (delta, step, processors)\r\n    {\r\n        var result = super.update(delta, step, processors);\r\n\r\n        this.t += delta;\r\n\r\n        if (this.t >= anim.msPerFrame)\r\n        {\r\n            this.i++;\r\n\r\n            if (this.i > 17)\r\n            {\r\n                this.i = 0;\r\n            }\r\n\r\n            this.frame = anim.frames[this.i].frame;\r\n            this.t -= anim.msPerFrame;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n*/\r\n\r\nexport const createGame = () =>{\r\n  console.log('GAME: createGame');\r\n  points = { ...INITIAL_STATE_POINTS };\r\n\r\n  const config = {\r\n    type: Phaser.AUTO,\r\n    scale: {\r\n      parent: 'game-container',\r\n      mode: Phaser.Scale.FIT,\r\n      autoCenter: Phaser.Scale.CENTER_BOTH,\r\n      width: 900,\r\n      height: 500,\r\n      min: {\r\n        width: 90,\r\n        height: 50\r\n      },\r\n      max: {\r\n        width: 1600,\r\n        height: 1200\r\n      },\r\n      zoom: 1,  // Size of game canvas = game size * zoom\r\n    },\r\n    autoRound: false,\r\n    physics: {\r\n      default: 'arcade',\r\n      arcade: {\r\n        gravity: { y: 800 },\r\n        debug: false\r\n      }\r\n    },\r\n    scene: {\r\n      preload: preload,\r\n      create: create,\r\n      update: update\r\n    }\r\n  };\r\n\r\n  game = new Phaser.Game(config);\r\n  global.game = game;\r\n  global.gameActive = true;\r\n}\r\n\r\nglobal.stopGame = () => {\r\n  // if not, hasnt been loaded yet\r\n  if(sceneContext){\r\n    global.gameActive = false;\r\n    sceneContext.scene.stop();\r\n  }\r\n}\r\n\r\nglobal.startGame = () => {\r\n  global.gameActive = true;\r\n  sceneContext.scene.start();\r\n}\r\n\r\nglobal.setLevel = (levelIdx) => {\r\n  global.stopGame();\r\n  global.gameData.curLevel = levelIdx;\r\n  global.startGame();\r\n}\r\n\r\nfunction setSceneContext(context){\r\n  sceneContext = context;\r\n  global.scene = sceneContext;\r\n  LevelController.setContext(context);\r\n  SpawnController.setContext(context);\r\n}\r\n\r\nfunction preload() {\r\n  setSceneContext(this);\r\n\r\n  // sounds/music\r\n  this.load.audioSprite('sfx', './assets/sfx/mixdown.json', [ 'assets/sfx/splat.ogg', 'assets/sfx/splat.mp3'] );\r\n  this.load.audioSprite('sfx_jab', './assets/sfx/jab.json', [ 'assets/sfx/jab.ogg', 'assets/sfx/jab.mp3'] );\r\n\r\n  // particle images\r\n  Object.keys(particleDefs).forEach(k => {\r\n    if(particleDefs[k].image){\r\n      this.load.image(`particle_${k}`, particleDefs[k].image);\r\n    } else if(particleDefs[k].atlas) {\r\n      this.load.atlas(`particle_${k}`, `${particleDefs[k].atlas}.png`, `${particleDefs[k].atlas}.json`);\r\n    }\r\n  });\r\n\r\n  LevelController.preload();\r\n  SpawnController.preload();\r\n}\r\n\r\nfunction getLevel() {\r\n  return gameData.levels[global.gameData.curLevel];\r\n}\r\n\r\nfunction getScene(){\r\n  const level = gameData.levels[global.gameData.curLevel];\r\n  return gameData.scenes[level.sceneKey];\r\n}\r\n\r\nfunction create() {\r\n  //- make the level\r\n  levelGroups = LevelController.create(getScene());\r\n  Events.on('interface', onInterface, this);\r\n  // var spritemap = this.cache.json.get('sfx').spritemap;\r\n\r\n  let spawnGroups = SpawnController.create(gameData.entities, getLevel(), getScene());\r\n\r\n  this.physics.add.collider(spawnGroups.enemies, levelGroups.platforms, null, collider_enemyAndPlatform, this);\r\n  this.physics.add.collider(spawnGroups.bowls, levelGroups.platforms);\r\n  this.physics.add.overlap(spawnGroups.enemies, spawnGroups.bowls, trigger_enemyAndBowl, null, this);\r\n  this.physics.add.overlap(spawnGroups.bowls, levelGroups.leftTrigger, trigger_itemAtStart, null, this);\r\n  this.physics.add.overlap(spawnGroups.enemies, levelGroups.rightTrigger, trigger_enemyAtEnd, null, this);\r\n  this.physics.add.overlap(spawnGroups.enemies, spawnGroups.player, trigger_enemyAndPlayer, null, this);\r\n\r\n  this.input.on('gameobjectdown', onObjectClicked);\r\n  this.input.keyboard.on('keydown', onKeyDown);\r\n\r\n  addParticles();\r\n}\r\nfunction update (){\r\n  SpawnController.update();\r\n}\r\n\r\nfunction onInterface(event, data){\r\n  global.gameInterface && global.gameInterface(event, data)\r\n}\r\n\r\nfunction trigger_enemyAtEnd(enemy, trigger){\r\n  switch(enemy.status){\r\n    case STATUS_ENEMY.ROAMING_TAME:\r\n      setPoints('captures', 1);\r\n      enemy.captured();\r\n      break;\r\n    case STATUS_ENEMY.ROAMING:\r\n      setPoints('escapes', 1);\r\n      enemy.escaped();\r\n      break;\r\n    default: break;\r\n  }\r\n}\r\n\r\nfunction trigger_itemAtStart(item, trigger){\r\n  item.destroy();\r\n  setPoints('bowls', 1);\r\n}\r\n\r\nfunction trigger_enemyAndBowl(enemy, bowl){\r\n  if(enemy.canEat() && bowl.canBeEaten){\r\n    enemy.eatAtBowl(bowl.body);\r\n    bowl.eatenBy(enemy);\r\n  }\r\n}\r\n\r\nfunction collider_enemyAndPlatform(enemy, platform){\r\n  return true;\r\n}\r\n\r\nfunction trigger_enemyAndPlayer(enemy, player){\r\n  if(enemy.isAlive()){\r\n    // first off, is player is kicking, punt that thing\r\n    if(player.checkStatus(STATUS_PLAYER.KICK) && player.getKickStrength() > 0){\r\n      kickEnemy(player, enemy);\r\n    }else{\r\n    // otherwise, see if its good or bad\r\n      // get bitten by mean boys.\r\n      if(!enemy.isFull && !enemy.checkStatus(STATUS_ENEMY.BITING)){\r\n        bitePlayer(player, enemy);\r\n      }else{\r\n        // good raccoons get a bonus from a hug, dont hug more than once now\r\n        if(player.checkStatus(STATUS_PLAYER.HUGGING) && !enemy.checkStatus(STATUS_ENEMY.HUGGING)){\r\n          hugEnemy(player, enemy);\r\n        }\r\n        // already got your hug lil dude, move along\r\n      }\r\n    }\r\n  }\r\n\r\n  //- anything else, just walk on by\r\n}\r\n\r\nfunction kickEnemy(player, enemy){\r\n  const kickStrength = player.getKickStrength();\r\n  if(enemy.punt){\r\n    if(!enemy.punted){\r\n      const willKill = (kickStrength >= enemy.puntKillThreshold);\r\n      enemy.punt(kickStrength);\r\n      if(willKill){\r\n        showParticle('blood', enemy.body.x, enemy.body.y);\r\n        if(enemy.particleDeath) showParticle(enemy.particleDeath,  enemy.body.x, enemy.body.y);\r\n        \r\n        enemy.kill(true);\r\n      }else{\r\n        // soft punt sound\r\n        const thudVolume = .3 * kickStrength\r\n        game.sound.playAudioSprite('sfx_jab', 'jab01', { volume: thudVolume });\r\n      }\r\n    }\r\n  }else{\r\n    showParticle('blood',  enemy.body.x, enemy.body.y);\r\n    if(enemy.particleDeath) showParticle(enemy.particleDeath,  enemy.body.x, enemy.body.y);\r\n    enemy.kill(true);\r\n  }\r\n}\r\n\r\nfunction hugEnemy(player, enemy){\r\n  enemy.hug();\r\n  player.onHugEnemy();\r\n  setPoints('hugs', 1);\r\n}\r\n\r\nfunction bitePlayer(player, enemy){\r\n  enemy.bite();\r\n  player.onAttackedByEnemy();\r\n  setPoints('bites', 1);\r\n}\r\n\r\nfunction onObjectClicked(pointer, gameObject){\r\n  if(gameObject.type === 'raccoon'){\r\n    gameObject.clicked();\r\n    showParticle('blood', pointer.worldX, pointer.worldY);\r\n    if(gameObject.particleDeath) showParticle(gameObject.particleDeath,  pointer.worldX, pointer.worldY);\r\n  }\r\n}\r\n\r\nfunction showParticle(type, x, y){\r\n  const pDef = particleDefs[type];\r\n  let config = pDef.emitter;\r\n\r\n  let pEmitter = particles[type].createEmitter(config);\r\n\r\n  pEmitter.setPosition(x, y);\r\n  pEmitter.explode();\r\n  pEmitter.visible = true;\r\n  if(pDef.sound){\r\n    game.sound.playAudioSprite('sfx', pDef.sound);\r\n  }\r\n}\r\n\r\nfunction addParticles(){\r\n  Object.keys(particleDefs).forEach(k => {\r\n    particles[k] = sceneContext.add.particles(`particle_${k}`);\r\n  });\r\n}\r\n\r\nconst onKeyDown = (e) => {\r\n  switch(e.code){\r\n    case 'Space': SpawnController.slingBowl();\r\n      break;\r\n    default: break;\r\n  }\r\n}\r\n\r\nconst setPoints = (key, change) => {\r\n  points[key] += change;\r\n\r\n  updateScoreboard(key, points[key]);\r\n}\r\n\r\nconst updateScoreboard = (key, value) => {\r\n  Events.emit('interface', 'setMetric', { 'key': key, 'value': value });\r\n}\r\n\r\n\r\nexport const externalCommand = (event, payload) => {\r\n  console.log('externalCommand:', event, payload);\r\n}\r\n\r\nexport const pauseGame = () => {\r\n  console.log('GAME: pauseGame');\r\n  sceneContext?.scene?.pause();\r\n}\r\n\r\nexport const resumeGame = () => {\r\n  console.log('GAME: resumeGame');\r\n  if(global.gameActive){\r\n    sceneContext?.scene?.resume();\r\n  }\r\n}\r\n\r\nexport const killGame = () => {\r\n  console.log('GAME: killGame');\r\n  if(global.gameActive){\r\n    global.stopGame();\r\n    game.destroy();\r\n    game = null;\r\n    sceneContext = null;\r\n    levelGroups = null;\r\n  }\r\n}","// slightly evolving from create-react-app example\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { RootState, AppThunk } from '../store';\r\n\r\nexport function fetchThing(amount = 1) {\r\n  return new Promise<{ data: number }>((resolve) =>\r\n    setTimeout(() => resolve({ data: amount }), 500)\r\n  );\r\n}\r\n\r\nexport interface UiState {\r\n  value: number;\r\n  status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: UiState = {\r\n  value: 0,\r\n  status: 'idle'\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const incrementAsync = createAsyncThunk(\r\n  'ui/fetchThing',\r\n  async (amount: number) => {\r\n    const response = await fetchThing(amount);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(incrementAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(incrementAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.value += action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = uiSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.ui.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const incrementIfOdd = (amount: number): AppThunk => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentValue = selectCount(getState());\r\n  if (currentValue % 2 === 1) {\r\n    dispatch(incrementByAmount(amount));\r\n  }\r\n};\r\n\r\nexport default uiSlice.reducer;\r\n","import { combineReducers } from 'redux'\r\nimport metricsReducer from './metrics-slice';\r\nimport statusReducer from './status-slice';\r\n\r\nexport default combineReducers({\r\n  metrics: metricsReducer,\r\n  status: statusReducer\r\n})","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport uiReducer from './ui/ui-slice';\r\nimport gameReducer from './game/reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    ui: uiReducer,\r\n    game: gameReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import Values from './utils/values';\r\n\r\nconst DEBUG_ALPHA = 0;\r\nconst TRIGGER_DIMS = {\r\n  width: 25,\r\n  height: 100\r\n};\r\n\r\nlet sceneContext;\r\n\r\nexport const setContext = (context) => {\r\n  sceneContext = context;\r\n}\r\n\r\nexport const preload = () => {\r\n  sceneContext.load.image('bg', './assets/levels/level-backyard-0.jpg');\r\n  sceneContext.load.image('lane1', './assets/levels/level-backyard-1.png');\r\n  sceneContext.load.image('lane2', './assets/levels/level-backyard-2.png');\r\n  sceneContext.load.image('lane3', './assets/levels/level-backyard-3.png');\r\n  sceneContext.load.image('fg', './assets/levels/level-backyard-4.png');\r\n  // sceneContext.load.image('fg-yard', './assets/yard-fg.png');\r\n  // sceneContext.load.image('lane4-yard', './assets/yard-lane4.png');\r\n}\r\n\r\nexport const create = (levelData) => {\r\n\r\n  const platforms = sceneContext.physics.add.staticGroup();\r\n  const leftTrigger = sceneContext.physics.add.staticGroup();\r\n  const rightTrigger = sceneContext.physics.add.staticGroup();\r\n  // sceneContext.make.sprite(50, 50, 'bg-yard');\r\n  \r\n  sceneContext.add.image(0, 0, 'bg').setOrigin(0).setScale(1).setDepth(Values.zindex.BACKGROUND);\r\n  sceneContext.add.image(0, 0, 'lane1').setOrigin(0).setScale(1).setDepth(Values.zindex.LANE_2);\r\n  sceneContext.add.image(0, 0, 'lane2').setOrigin(0).setScale(1).setDepth(Values.zindex.LANE_3);\r\n  sceneContext.add.image(0, 0, 'lane3').setOrigin(0).setScale(1).setDepth(Values.zindex.LANE_4);\r\n  sceneContext.add.image(0, 0, 'fg').setOrigin(0).setScale(1).setDepth(Values.zindex.FOREGROUND);\r\n  const GAME_WIDTH = 900;\r\n\r\n  levelData.lanes.forEach(pO => {\r\n    const triggerY = pO.y - TRIGGER_DIMS.height;\r\n    // lets animals keep walkin past trigger, otherwise keep it at pO.width\r\n    const platformWidth = GAME_WIDTH - pO.x;\r\n\r\n    platforms.create(pO.x, pO.y, 'platform-floor').setDisplaySize(platformWidth, pO.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n    leftTrigger.create(pO.x, triggerY, 'trigger-spawn').setDisplaySize(TRIGGER_DIMS.width, TRIGGER_DIMS.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n    rightTrigger.create(pO.x + pO.width - TRIGGER_DIMS.width, triggerY, 'trigger-end').setDisplaySize(TRIGGER_DIMS.width, TRIGGER_DIMS.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n  });\r\n\r\n  return {\r\n    platforms,\r\n    leftTrigger,\r\n    rightTrigger\r\n  }\r\n}\r\n\r\nconst exportMap = {\r\n  setContext,\r\n  preload,\r\n  create\r\n}\r\nexport default exportMap; ","import { setMetric } from '../../services/game/metrics-slice';\r\nimport { store } from '../../services/store';\r\n\r\nexport const createGameInterface = () => {\r\n  if(!(global as any).gameInterface){\r\n    (global as any).gameInterface = (event: string, payload: any) => {\r\n      switch(event){\r\n        case 'setMetric': \r\n          store.dispatch(setMetric(payload))\r\n          break;\r\n        default: console.error('invalid interface command', event);\r\n      }\r\n    }\r\n  }\r\n  return;\r\n}\r\n","import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline:0;\r\n    box-sizing:border-box;\r\n  }\r\n  #root{\r\n    margin:0 auto;\r\n  }\r\n  h1, h2, h3, h4{\r\n    font-family: 'Ranchers', cursive;\r\n  }\r\n  a, p, span, h5, h6{\r\n    font-family: 'Cabin', sans-serif;\r\n  }\r\n  h1{\r\n    font-size: 5rem;\r\n  }\r\n  h2{\r\n    font-size: 4rem;\r\n  }\r\n  h3{\r\n    font-size: 3.5rem;\r\n  }\r\n  h4{\r\n    font-size: 2.5rem;\r\n  }\r\n  h5{\r\n    font-size: 2rem;\r\n  }\r\n  p, span{\r\n    font-size:2rem;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-family: 'Cabin', sans-serif;\r\n    background-color: black;\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n  }\r\n`\r\n\r\n/*\r\nexport const mixinFontFamily = (style) => {\r\n  switch(style){\r\n    case 'details' : return css`font-family: 'Roboto', sans-serif`;\r\n    case 'display': return css`font-family: 'Bevan', cursive`;\r\n    default: return css`font-family: 'Roboto', sans-serif`;\r\n  }\r\n}\r\n*/\r\nexport const listColors = () => {\r\n  return Object.keys(store.colors);\r\n}\r\n\r\n\r\nexport const getColor = (colorId: tColor) => {\r\n  return store.colors[colorId] as CssString; \r\n}\r\n\r\nexport const getShadow = (shadowId: tShadow) => {\r\n  return store.shadows[shadowId] as CssString;\r\n}\r\n\r\nexport const getBreakpoint = (breakpointId: tBreakpoint) => {\r\n  return store.breakpoints[breakpointId] as CssString;\r\n}\r\n\r\ntype CssString = string;\r\n\r\ntype tShadow = 'z1' | 'z2' | 'z3';\r\nconst shadows = {\r\n  z1: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.16)',\r\n  z2: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.36)',\r\n  z3: '-.2rem .5rem 1rem .2rem rgba(0,0,0,.36)'\r\n}\r\ntype tColor = 'black' | 'white' | 'grey' | 'grey_light' | 'grey_dark' | 'pink' | 'brown' | 'brown_light' | 'brown_dark' | 'tan' | 'red' | 'green' | 'green_light';\r\nconst colors = {\r\n  black: '#000000',\r\n  white: '#FFFFFF',\r\n  grey: '#847E87',\r\n  grey_light: '#9BADB7',\r\n  grey_dark: '#222034',\r\n  pink: '#D77BBA',\r\n  brown: '#915539',\r\n  brown_light: '#D8A065',\r\n  brown_dark: '#663A31',\r\n  tan: '#EEC39A',\r\n  red: '#AE3232',\r\n  green: '#6BBE30',\r\n  green_light: '#99E54F'\r\n}\r\n\r\ntype tBreakpoint = 'mobile_tiny' | 'mobile_medium' | 'mobile_large' | 'tablet' | 'desktop';\r\nconst breakpoints = {\r\n  mobile_tiny: '300px',\r\n  mobile_medium: '400px',\r\n  mobile_large: '500px',\r\n  tablet: '768px',\r\n  desktop: '1024px'\r\n}\r\n\r\ntype ThemeStore = {\r\n  colors: typeof colors,\r\n  shadows: typeof shadows,\r\n  breakpoints: typeof breakpoints\r\n}\r\n\r\nexport const store: ThemeStore = {\r\n  colors: colors,\r\n  shadows: shadows,\r\n  breakpoints: breakpoints\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","export const evaluateExpression = (condition: StringCondition, criteria: number, value: number) => {\r\n  switch(condition){\r\n    case '=':\r\n      return value === criteria;\r\n    case '<':\r\n      return value < criteria;\r\n    case '<=':\r\n      return value <= criteria;\r\n    case '>':\r\n      return value > criteria;\r\n    case '>=':\r\n      return value >= criteria;\r\n    default: return false;\r\n  }\r\n}\r\n\r\nexport const checkMetricRules = (metricRules: Array<MetricRule>, stateMetrics: GameMetrics) => {\r\n  return metricRules.map(m => {\r\n    if(checkMetricRule(m, stateMetrics[m.metric])) return m.result;\r\n    return null;\r\n  }).filter(result => !!result) as Array<string>;\r\n}\r\n\r\nexport const checkMetricRule = (metricRule: MetricRule, stateValue: number) => {\r\n  return evaluateExpression(metricRule.condition, metricRule.value, stateValue)\r\n}\r\n\r\n\r\n\r\nexport const evaluateGameConditions = (gameConditions: Array<GameCondition>, results: Array<string>) => {\r\n  const resultObjs = [];\r\n  for(let i = 0; i < gameConditions.length; i++){\r\n    const passedCondition = evaluateGameCondition(gameConditions[i], results);\r\n    if(passedCondition){\r\n      resultObjs.push({\r\n        action: passedCondition.then,\r\n        reason: passedCondition.reason\r\n      });\r\n      if(passedCondition.halt){\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return resultObjs;\r\n}\r\n\r\nexport const evaluateGameCondition = (gameCondition: GameCondition, results: Array<string>) => {\r\n  for(let i = 0; i < gameCondition.when.length; i++){\r\n    if(!results.some(gc => gc === gameCondition.when[i])){\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return gameCondition;\r\n}","import { useEffect } from 'react';\r\nimport { selectMetricsMap } from '../../services/game/metrics-slice';\r\nimport { loseRound, winRound, selectPlayStatus } from '../../services/game/status-slice';\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport RulesJson from './rules.json';\r\nimport { checkMetricRules, evaluateGameConditions } from './rules-checker';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst getRulesObj = () => {\r\n  return RulesJson.TRAPPER as RulesDefinition;\r\n}\r\n\r\nexport function Brain() {\r\n  const dispatch = useDispatch();\r\n  const metrics = useAppSelector(selectMetricsMap);\r\n  const playStatus = useAppSelector(selectPlayStatus);\r\n\r\n  useEffect(() => {\r\n    // if game isnt running, no need to check win conditions\r\n    if(playStatus === 'playing'){\r\n      const rules = getRulesObj();\r\n      // get back a list of conditions based on rules, like \"you slang too many bowls!\"\r\n      const results = checkMetricRules(rules.metrics, metrics);\r\n  \r\n      const resultActions = evaluateGameConditions(rules.conditions, results);\r\n      resultActions.forEach(resultAction => {\r\n        switch(resultAction.action){\r\n          case 'LOSE': dispatch(loseRound(resultAction.reason)); break;\r\n          case 'WIN': dispatch(winRound(resultAction.reason)); break;\r\n          default: break;\r\n        }\r\n      })\r\n    }\r\n  }, [ metrics, playStatus, dispatch ])\r\n\r\n  return null;\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\nimport { Brain } from './brain';\r\n\r\nexport const ScPhaserContainer = styled.div`\r\n  position:relative;\r\n  width:100%;\r\n  height:100%;\r\n\r\n  overflow-y:hidden;\r\n`;\r\n\r\nexport const ScWrapper = styled.div`\r\n  >canvas{\r\n    border: 1rem solid ${getColor('brown')};\r\n  }\r\n`;\r\n\r\nexport function PhaserContainer() {\r\n  return (\r\n    <ScPhaserContainer>\r\n      <Brain />\r\n      <ScWrapper id=\"game-container\">\r\n      </ScWrapper>\r\n    </ScPhaserContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { MouseEventHandler } from 'hoist-non-react-statics/node_modules/@types/react';\r\n\r\nimport { getColor } from '../themes';\r\n\r\nexport const ScButton = styled.div`\r\n  display: inline-block;\r\n  padding: 2rem;\r\n  border: .5rem solid ${getColor('brown')};\r\n  border-radius: 1rem;\r\n  background-color: ${getColor('tan')};\r\n  width:auto;\r\n\r\n  cursor:pointer;\r\n  &:hover{\r\n    background-color: ${getColor('brown_light')};\r\n  }\r\n\r\n  span{\r\n    font-size:3rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\ninterface LBType {\r\n  onClick: MouseEventHandler,\r\n  text: string\r\n}\r\n\r\nexport function Button({ onClick, text }: LBType) {\r\n  return (\r\n    <ScButton onClick={onClick}><span>{text}</span></ScButton>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\r\n\r\nimport { getColor } from '../../themes';\r\nimport { Button } from '../button';\r\n\r\n\r\nexport const ScSplash = styled.div`\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  min-width: 25%;\r\n  min-height: 25%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 4rem;\r\n`;\r\n\r\nexport const ScBg = styled.div`\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:100%;\r\n  background-color: ${getColor('brown_dark')};\r\n  border: 1rem solid ${getColor('brown')};\r\n  border-radius: 5rem;\r\n\r\n  z-index:-1;\r\n`;\r\n\r\nexport const ScBody = styled.div`\r\n`;\r\nexport const ScTitle = styled.h1`\r\n  text-align:center;\r\n  font-size:8rem;\r\n  color: ${getColor('tan')};\r\n`;\r\nexport const ScButtons = styled.div`\r\n  margin-top:1rem;\r\n  text-align:center;\r\n\r\n\r\n`;\r\nconst ScLogo = styled.div`\r\n  background: center / contain no-repeat url('./assets/logo.png');\r\n  width: 60rem;\r\n  height: 40rem;\r\n  margin:-2rem;\r\n`;\r\n\r\n\r\nconst onGameClick = (navigate: NavigateFunction) => {\r\n  // dispatch(startGame())\r\n  navigate('/game');\r\n}\r\n\r\nexport function Splash() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <ScSplash>\r\n      <ScBody>\r\n        <ScLogo title=\"RACCOON TRAPPER\" />\r\n      </ScBody>\r\n      <ScButtons>\r\n        <Button onClick={(e) => onGameClick(navigate)} text={'NEW GAME'} />;\r\n      </ScButtons>\r\n      <ScBg />\r\n    </ScSplash>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useAppSelector } from '../../../services/hooks';\r\nimport { selectActiveEnemies } from '../../../services/game/metrics-slice';\r\nimport { external_setSpawnFrequency } from '../../../phaser/trapper/spawn';\r\n\r\nconst ScControls = styled.div`\r\n`;\r\n\r\nconst ScEnemies = styled.div`\r\n`;\r\n\r\nfunction Controls() {\r\n  const activeEnemies = useAppSelector(selectActiveEnemies);\r\n  const [ spawnSpeed, setSpawnSpeed ] = useState(20);\r\n\r\n  useEffect(() => {\r\n    external_setSpawnFrequency(spawnSpeed);\r\n  }, [ spawnSpeed ])\r\n\r\n  return (\r\n    <ScControls>\r\n  {/* <button className=\"level-button\" onClick=\"setLevel(0);\">Set Level 1</button>\r\n      <button className=\"level-button\" onClick=\"setLevel(1);\">Set Level 2</button> */}\r\n      <p>{'spawn speed'}</p>\r\n      \r\n      <input id=\"spawn-slider\" className=\"slider\" type=\"range\" min=\"0\" max=\"100\" value={spawnSpeed} onChange={e => setSpawnSpeed(+(e.target.value))}/>\r\n      <p>{`spawn rate: ${spawnSpeed}%`}</p>\r\n      <ScEnemies>\r\n        <span>{'Enemies:'}</span>\r\n        <span>{activeEnemies}</span>\r\n      </ScEnemies>\r\n    </ScControls>\r\n  )\r\n}\r\n\r\nexport default Controls;\r\n\r\n/*\r\n<div className=\"control-group\">\r\n<p>Spawn speed</p>\r\n<input id=\"spawn-slider\" className=\"slider\" type=\"range\" min=\"0\" max=\"100\" value=\"20\" onChange={() => {}}/>\r\n<span id=\"spawn-display\">20%</span>\r\n<div id=\"spawn-counter\"><span>Spawned:</span><span id=\"spawn-count\">0</span></div>\r\n</div>\r\n*/","import styled, { css } from 'styled-components';\r\n\r\nimport { useAppSelector } from '../../../services/hooks';\r\nimport { getColor } from '../../../themes';\r\nimport { selectGoodMetrics, selectScore, selectBadMetrics } from '../../../services/game/metrics-slice';\r\n\r\ntype StatsProps = {\r\n  statType: StatType;\r\n}\r\n\r\ntype StatType = 'good' | 'bad' | 'neutral'\r\n\r\nconst ScStats = styled.div`\r\n  position:absolute;\r\n  bottom:0;\r\n  left:0;\r\n  width:100%;\r\n  background-color: ${getColor('brown')};\r\n\r\n  color: ${getColor('white')};\r\n  padding: 1rem;\r\n  text-align:center;\r\n\r\n  >h4{\r\n    text-align:left;\r\n  }\r\n`;\r\n\r\nconst ScStatGroup = styled.div<StatsProps>`\r\n  vertical-align:top;\r\n  text-align:right;\r\n  display:inline-block;\r\n  width:calc(50% - .5rem);\r\n  margin-top:1rem;\r\n  padding:.5rem;\r\n  color: ${getColor('grey_dark')};\r\n\r\n  ${p => p.statType === 'good' && css`\r\n    background-color:${getColor('green')};\r\n  `}\r\n  ${p => p.statType === 'bad' && css`\r\n    background-color:${getColor('pink')};\r\n    margin-left:1rem;\r\n  `}\r\n\r\n  h4{\r\n    text-align:center;\r\n  }\r\n`;\r\n\r\nconst ScStat = styled.div`\r\n  display:block;\r\n`\r\n\r\nconst ScDebug = styled.div`\r\n  display:inline-block;\r\n  height:100%;\r\n  width:100%;\r\n  \r\n  span { font-size: 3rem; }\r\n  font-weight: bold;\r\n  text-align:right;\r\n  color: white;\r\n`\r\n\r\nexport function DebugStats() {\r\n  const goodStats = useAppSelector(selectGoodMetrics);\r\n  const badStats = useAppSelector(selectBadMetrics);\r\n  const score = useAppSelector(selectScore);\r\n\r\n  return (\r\n    <ScStats>\r\n      <h4>{'Debug and score'}</h4>\r\n      <ScStatGroup statType={'good'}>\r\n        <h4>{'Good Stuff'}</h4>\r\n        {goodStats.map((s, idx) => (\r\n          <ScStat key={idx} >\r\n            <span>{`${s.key}:`}</span><span>{s.value}</span>\r\n          </ScStat>\r\n        ))}\r\n      </ScStatGroup>\r\n      <ScStatGroup statType={'bad'}>\r\n        <h4>{'Bad Stuff'}</h4>\r\n        {badStats.map((s, idx) => (\r\n          <ScStat key={idx} >\r\n            <span>{`${s.key}:`}</span><span>{s.value}</span>\r\n          </ScStat>\r\n        ))}\r\n      </ScStatGroup>\r\n      <ScDebug>\r\n        <span>{'Score:'}</span>\r\n        <span>{score}</span>\r\n      </ScDebug>\r\n    </ScStats>\r\n  )\r\n}","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { getColor } from '../../themes/';\r\nimport Controls from './components/controls';\r\nimport { DebugStats } from './components/debugstats';\r\n\r\nconst ScSidebar = styled.div`\r\n  position:fixed;\r\n  top:0;\r\n  left:0;\r\n  transition:left .5s ease-in-out;\r\n\r\n  width:40rem;\r\n  height:100%;\r\n  margin:0;\r\n  color:${getColor('tan')};\r\n  z-index:1;\r\n\r\n  &.collapsed{\r\n    left:-40rem;\r\n    transition:left .5s ease-in-out;\r\n  }\r\n\r\n  >.link-button{\r\n    color:white;\r\n    display:inline-block;\r\n    vertical-align:middle;\r\n    margin:0rem 1.8rem;\r\n    margin-top:1.5rem;\r\n    transition:color .5s ease-in;\r\n    color:${getColor('tan')};\r\n    \r\n    h4{\r\n      font-size:2.5rem;\r\n    }\r\n    &:hover{\r\n      color: ${getColor('green_light')};\r\n      transition:color .2s ease-out;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ScBg = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  right:0;\r\n  top:0;\r\n  bottom:0;\r\n  z-index:-1;\r\n  \r\n  background-color: ${getColor('brown_dark')};\r\n  border-right: .5rem solid ${getColor('brown')};\r\n`\r\n\r\nconst ScBody = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  height:100%;\r\n`\r\n\r\n\r\nconst ScBottom = styled.div`\r\n  flex-grow:1;\r\n  overflow-y:auto;\r\n  padding:1rem;\r\n`\r\n\r\nconst ScTop = styled.div`\r\n  min-height:20rem;\r\n  position:relative;\r\n  cursor:pointer;\r\n  border-bottom:.5rem solid ${getColor('brown')};\r\n  padding:1rem;\r\n  padding-right:10rem;\r\n`\r\n\r\nconst ScLogo = styled.div`\r\n  background: center / contain no-repeat url('./assets/logo.gif');\r\n  position:absolute;\r\n  left:100%;\r\n  top:0;\r\n  width:30rem;\r\n  height:20rem;\r\n  z-index:1;\r\n\r\n  -webkit-filter: drop-shadow(.5rem .5rem .5rem ${getColor('grey_dark')});\r\n  filter: drop-shadow(.5rem .5rem .5rem ${getColor('grey_dark')});\r\n\r\n  &:hover{\r\n    -webkit-filter: drop-shadow(1rem 1rem 1rem ${getColor('tan')});\r\n    filter: drop-shadow(1rem 1rem 1rem ${getColor('tan')});\r\n  }\r\n`;\r\n\r\nconst ScLink = styled(Link)`\r\n  color:${getColor('tan')};\r\n  text-align:center;\r\n  font-size:2rem;\r\n\r\n  &:hover{\r\n    color:white;\r\n  }\r\n`\r\n\r\nconst ScHelp = styled.div`\r\n  li{\r\n    font-size:1.5rem;\r\n    margin-left:1rem;\r\n  }\r\n`\r\n\r\nconst ScSideImage = styled.div`\r\nbackground: center / contain no-repeat url('./assets/raccoon-on-branch.gif');\r\n  position:absolute;\r\n  left:100%;\r\n  width:20rem;\r\n  height:50rem;\r\n  -webkit-filter: drop-shadow(.5rem .5rem .5rem ${getColor('grey_dark')});\r\n  filter: drop-shadow(.5rem .5rem .5rem ${getColor('grey_dark')});\r\n\r\n  &:hover{\r\n    -webkit-filter: drop-shadow(1rem 1rem 1rem ${getColor('tan')});\r\n    filter: drop-shadow(1rem 1rem 1rem ${getColor('tan')});\r\n  }\r\n  top:0;\r\n  margin-left:-12rem;\r\n`\r\n\r\n\r\nconst HelpList = () => {\r\n  const controls = [\r\n    'Arrow Up/Down: Change lanes',\r\n    'Arrow Left: Hug',\r\n    'Arrow Right: Charge kick',\r\n    'Space: Throw food'\r\n  ];\r\n\r\n  const rules = [\r\n    'Don\\'t let feral raccoons in your house!',\r\n    '>>> 3 escapes loses the game',\r\n    'Feed the feral raccoons to tame them!',\r\n    'Give tame raccoons a nice hug to show them you care',\r\n    '>>> 3 hugs wins the game',\r\n    'Don\\'t even think about hugging feral raccoons',\r\n    '>>> If you get bit once, you lose!',\r\n    'Kick any raccoon you want',\r\n  ]\r\n  return (\r\n    <ScHelp>\r\n      <h4>{'Controls'}</h4>\r\n      <ul>\r\n        {controls.map((i, idx) => (\r\n          <li key={idx}>{i}</li>\r\n        ))}\r\n      </ul>\r\n      <h4>{'Rules'}</h4>\r\n      <ul>\r\n        {rules.map((i, idx) => (\r\n          <li key={idx}>{i}</li>\r\n        ))}\r\n      </ul>\r\n    </ScHelp>\r\n  )\r\n}\r\n\r\nfunction Sidebar() {\r\n  const [ collapsed, setCollapsed ] = useState(true);\r\n\r\n  return (\r\n    <ScSidebar className={ collapsed ? 'collapsed' : ''} >\r\n      <ScBody>\r\n        <ScTop>\r\n          <ScLogo onClick={() => setCollapsed(!collapsed)} /> \r\n          <ScSideImage onClick={() => setCollapsed(!collapsed)} />\r\n          <HelpList />\r\n          <ScLink to={'/'} >\r\n            {'back to main menu'}\r\n          </ScLink>\r\n        </ScTop>\r\n        <ScBottom>\r\n          <hr/>\r\n          <Controls/>\r\n          <hr/>\r\n          <DebugStats/>\r\n        </ScBottom>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScSidebar>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { getColor } from '../../../themes';\r\n\r\nexport const ScModal = styled.div`\r\n`\r\n\r\nexport const ScBody = styled.div`\r\n`\r\n\r\nexport const ScBg = styled.div`\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:100%;\r\n  background-color: ${getColor('brown_dark')};\r\n  border: 1rem solid ${getColor('brown')};\r\n  border-radius: 5rem;\r\n\r\n  z-index:-1;\r\n`;\r\n\r\nconst ScLink = styled(Link)`\r\n  color:${getColor('tan')};\r\n  text-align:center;\r\n  font-size:2rem;\r\n\r\n  &:hover{\r\n    color:white;\r\n  }\r\n`\r\n\r\ntype ModalProps = {\r\n  reason: string\r\n};\r\nfunction WonModal({ reason }: ModalProps){\r\n  return (\r\n    <ScModal>\r\n      <ScBody>\r\n        <h3>{'YOU WON!'}</h3>\r\n        <p>{reason}</p>\r\n        <ScLink to={'/'} >\r\n          {'back to main menu'}\r\n        </ScLink>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScModal>\r\n  )\r\n}\r\n\r\nfunction LostModal({ reason }: ModalProps){\r\n  return (\r\n    <ScModal>\r\n      <ScBody>\r\n        <h3>{'YOU LOST!'}</h3>\r\n        <p>{reason}</p>\r\n        <ScLink to={'/'} >\r\n          {'back to main menu'}\r\n        </ScLink>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScModal>\r\n  )\r\n}\r\n\r\nfunction PausedModal({ reason }: ModalProps){\r\n  return (\r\n    <ScModal>\r\n      <ScBody>\r\n        <h3>{'YOU PAUSED!'}</h3>\r\n        <p>{reason}</p>\r\n        <ScLink to={'/'} >\r\n          {'back to main menu'}\r\n        </ScLink>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScModal>\r\n  )\r\n}\r\n\r\ntype MultiModalProps = {\r\n  playStatusObj: PlayStatusObj\r\n};\r\nexport function MultiModal({ playStatusObj }: MultiModalProps){\r\n  switch(playStatusObj.status){\r\n    case 'won': return (<WonModal reason={playStatusObj.reason} />)\r\n    case 'lost': return (<LostModal reason={playStatusObj.reason} />)\r\n    case 'paused': return (<PausedModal reason={playStatusObj.reason} />)\r\n    default: break;\r\n  }\r\n  \r\n  return null;\r\n}","import styled from 'styled-components';\r\n\r\nimport { ReselectModalFromGameStatus } from '../../services/game/status-slice';\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport { MultiModal } from './components/modals';\r\n\r\nexport const ScModals = styled.div`\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  min-width: 25%;\r\n  min-height: 25%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 4rem;\r\n\r\n  z-index:1;\r\n`;\r\n\r\nexport function Modals() {\r\n  const playStatusObj = useAppSelector(ReselectModalFromGameStatus);\r\n  if(!playStatusObj) return null;\r\n\r\n  return (\r\n    <ScModals>\r\n      <MultiModal playStatusObj={playStatusObj} />\r\n    </ScModals>\r\n  )\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { useEffect, useState } from 'react';\r\nimport useSound from 'use-sound';\r\n\r\nconst ScMusic = styled.div`\r\n  position:fixed;\r\n  top:0;\r\n  right:0;\r\n  z-index:1;\r\n`\r\n\r\nexport function Music() {\r\n  const [playing, setPlaying] = useState(false);\r\n  const [play, { stop }] = useSound('./assets/sfx/trapper.ogg');\r\n\r\n  useEffect(() => {\r\n    if(playing){\r\n      play();\r\n    }else{\r\n      stop();\r\n    }\r\n  }, [ playing ])\r\n\r\n  return (\r\n    <ScMusic>\r\n      <button onClick={() => setPlaying(!playing)}>\r\n        {playing ? 'Stop background music' : 'Play background music'}\r\n      </button>\r\n    </ScMusic>\r\n  )\r\n}","import { useEffect } from 'react';\r\nimport { HashRouter, Route, Routes, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { PhaserContainer } from '../components/game/phaser-container';\r\nimport { Splash } from '../components/ui/splash';\r\nimport { useAppDispatch, useAppSelector } from '../services/hooks';\r\nimport { startGame, exitGame, selectGameStatus, selectPlayStatus } from '../services/game/status-slice';\r\nimport Sidebar from '../components/ui/sidebar';\r\nimport { createGame, killGame, resumeGame, pauseGame } from '../phaser/trapper';\r\nimport { getColor } from '../themes';\r\nimport { createGameInterface } from '../components/game/game-interface';\r\nimport { Modals } from '../components/ui/modals';\r\nimport { Music } from '../components/ui/components/music';\r\n\r\nexport const ScStage = styled.div`\r\n  position:absolute;\r\n  left:0rem;\r\n  top:0rem;\r\n  right:0rem;\r\n  bottom:0rem;\r\n  background-color:${getColor('brown_dark')};\r\n`\r\n\r\nexport const RouteReader = ({ dispatch }: any) => {\r\n  let location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    if(location.pathname.indexOf('game') > -1){\r\n      dispatch(startGame());\r\n    }else{\r\n      dispatch(exitGame())\r\n    }\r\n  }, [ location, dispatch ]);\r\n\r\n  return null;\r\n}\r\n\r\nfunction App() {\r\n  const gameStatus = useAppSelector(selectGameStatus);\r\n  const playStatus = useAppSelector(selectPlayStatus);\r\n  const dispatch = useAppDispatch();\r\n  \r\n  // only need to do this once, hence the []\r\n  useEffect(() => {createGameInterface();}, [])\r\n  \r\n  const pages = [\r\n    {\r\n      route: '',\r\n      text: 'SPLASH',\r\n      element: <Splash />\r\n    },\r\n    {\r\n      route: '/game',\r\n      text: 'RACCOON TRAPPER',\r\n      element: <PhaserContainer />\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if(playStatus === 'playing'){\r\n      resumeGame();\r\n    }else if(['won', 'lost', 'paused'].some(s => s === playStatus)){\r\n      pauseGame();\r\n    }\r\n  }, [ playStatus ]);\r\n\r\n  useEffect(() => {\r\n    if(gameStatus === 'active'){\r\n      createGame();\r\n    }else{\r\n      killGame();\r\n    }\r\n  }, [ gameStatus ]);\r\n  \r\n  return (\r\n    <HashRouter>\r\n      <RouteReader dispatch={dispatch}/>\r\n      <Sidebar />\r\n      <Modals />\r\n      <Music />\r\n      <ScStage>\r\n        <Routes>\r\n          {pages.map((p, i) => (\r\n            <Route key={i} path={p.route} element={p.element} />\r\n          ))}\r\n        </Routes>\r\n      </ScStage>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\nimport { store } from './services/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport './themes/fonts.css';\r\nimport GlobalStyle from './themes/';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n      <GlobalStyle />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// slightly evolving from create-react-app example\r\nimport { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport interface StatsState {\r\n  gameStatus: 'active' | 'inactive',\r\n  playStatus: 'inactive' | 'playing' | 'won' | 'lost' | 'paused',\r\n  playStatusReason: string\r\n}\r\n\r\nconst initialState: StatsState = {\r\n  gameStatus: 'inactive',\r\n  playStatus: 'inactive',\r\n  playStatusReason: ''\r\n};\r\n\r\nexport const statusSlice = createSlice({\r\n  name: 'status',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    startGame: state => {\r\n      state.gameStatus = 'active';\r\n      state.playStatus = 'playing';\r\n      state.playStatusReason = '';\r\n    },\r\n    exitGame: state => {\r\n      state.gameStatus = 'inactive';\r\n      state.playStatus = 'inactive';\r\n      state.playStatusReason = '';\r\n    },\r\n    winRound: (state, reason: PayloadAction<string>) => {\r\n      state.playStatus = 'won';\r\n      state.playStatusReason = reason.payload;\r\n    },\r\n    loseRound: (state, reason: PayloadAction<string>) => {\r\n      state.playStatus = 'lost';\r\n      state.playStatusReason = reason.payload;\r\n    }\r\n  }\r\n});\r\n\r\n\r\n\r\nexport const { startGame, exitGame, winRound, loseRound } = statusSlice.actions;\r\n\r\nexport const selectGameStatus = (state: RootState) => state.game.status.gameStatus;\r\nexport const selectPlayStatus = (state: RootState) => state.game.status.playStatus;\r\nexport const selectPlayStatusReason = (state: RootState) => state.game.status.playStatusReason;\r\n\r\nconst getModalFromGameStatus = createSelector(\r\n  [\r\n    selectGameStatus,\r\n    selectPlayStatus, \r\n    selectPlayStatusReason\r\n  ],\r\n  (gameStatus, playStatus, reason) => {\r\n    if(gameStatus === 'active'){\r\n      if(['paused', 'lost', 'won'].some(s => s === playStatus)){\r\n        return {\r\n          status: playStatus,\r\n          reason\r\n        } as PlayStatusObj\r\n      }\r\n    }\r\n\r\n    return null;    \r\n  }\r\n)\r\nexport const ReselectModalFromGameStatus = () => {\r\n  return useSelector(getModalFromGameStatus)\r\n}\r\n\r\nexport default statusSlice.reducer;"],"sourceRoot":""}