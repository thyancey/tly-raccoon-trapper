{"version":3,"sources":["phaser/trapper/sound.js","phaser/trapper/spawn.js","services/game/status-slice.ts","phaser/trapper/utils/values.js","services/game/metrics-slice.ts","phaser/trapper/entities/raccoon.js","phaser/trapper/entities/player.js","phaser/trapper/entities/stat-bar.js","phaser/event-emitter.js","phaser/trapper/entities/bowl.js","phaser/trapper/index.js","services/ui/ui-slice.ts","services/game/reducer.ts","services/store.ts","phaser/trapper/entities/status.js","phaser/trapper/level.js","components/game/game-interface.tsx","themes/index.ts","services/hooks.ts","components/game/rules-checker.tsx","components/game/brain.tsx","components/game/phaser-container.tsx","components/button.tsx","components/ui/splash.tsx","components/ui/components/controls.tsx","components/ui/components/debugstats.tsx","components/ui/sidebar.tsx","components/ui/components/modals.tsx","components/ui/modals.tsx","components/ui/components/music.tsx","app/index.tsx","services/serviceWorker.ts","index.tsx"],"names":["gameContext","sceneContext","SOUNDS","SPLAT","GOOD","BAD","HUG","ENEMY_BITE","ENEMY_EATING","ENEMY_CAPTURED","ENEMY_ESCAPED","init","sContext","gContext","preload","load","audioSprite","playSound","soundKey","params","sound","playAudioSprite","player","lastSentActiveEnemies","spawnFrequency","curTicker","spawnPositions","defGlobalEntities","defEnemyEntities","defLaneSpawns","groups","entityTypes","Raccoon","Entity","rollForSpawns","laneSpawnData","spawnCommands","enemies","forEach","lane","idx","enemy","Math","random","rate","push","type","laneIdx","getSpawnCommands","spawnCount","sData","eData","spawnIt","console","error","throttledUpdate","throttle","global","gameActive","updateSpawnCount","children","each","entity","EntityRef","entityData","statsObj","pos","stats","speed","Phaser","Between","jumpRate","x","y","depth","getDepthOfLane","misc","particleDeath","randomScale","scaleRange","setScale","spawnStatus","Status","spawnPlayer","laneData","Player","activeEnemies","countActive","Events","emit","external_setSpawnFrequency","newValue","sliderPosition","minV","log","scale","round","exp","formatSliderValue","exportMap","setContext","context","initSpritesheet","Bowl","create","globalEntities","levelData","sceneData","lanes","map","pO","parseInt","l","spawns","physics","add","group","bowls","staticGroup","initSprites","update","spawn","key","anim","item","anims","play","spawnBowl","setVelocity","bowl","spawnSpeed","slingBowl","statusSlice","createSlice","name","initialState","gameStatus","playStatus","playStatusReason","reducers","startGame","state","exitGame","winRound","reason","payload","loseRound","actions","selectGameStatus","game","status","selectPlayStatus","getModalFromGameStatus","createSelector","some","s","ReselectModalFromGameStatus","useSelector","Values","zindex","BACKGROUND","LANE_1","LANE_2","LANE_3","LANE_4","FOREGROUND","offset","isNaN","e","hugs","bites","captures","escapes","scoreModifiers","metricsSlice","setMetric","action","undefined","value","extraReducers","builder","addCase","selectMetrics","Object","keys","metrics","filter","sKey","k","isGood","selectMetricsMap","selectGoodMetrics","selectBadMetrics","selectScore","total","getScore","selectActiveEnemies","sceneRef","STATUS","ROAMING","EATING","ROAMING_TAME","DEAD","HUGGING","IDLE","CAPTURED","ESCAPED","BITING","spriteKey","velocityRanges","LIL_PUNT","min","max","diff","BIG_PUNT","scene","physicsGroup","spawnData","deathTimer","destroyTimer","punted","isFull","eatOffset","curPhysState","curAnimState","puntKillThreshold","feedable","setDepth","existing","setBounce","setCollideWorldBounds","allowGravity","body","setSize","setStatus","setInteractive","tint","setTint","this","kill","isAlive","touching","down","velocity","force","vRange","puntedTimer","time","delayedCall","setDrag","quickKill","destroy","flipX","animKey","getAnimationForState","curAnim","playAnimationForKey","adjustMovementForState","given","isMovingStatus","moveStop","bowlBody","statusKey","modifier","moveNormal","resumeStatus","delayedDestroy","Physics","Arcade","Sprite","frames","frame","frameRate","repeat","generateFrameNumbers","start","end","spritesheet","frameWidth","frameHeight","statBar","OFFSET","progress","setPosition","cellIdx","floor","FEED","KICK_PREP","KICK","ATTACKED","animationStatus","gameState","recoveryTimer","hpRange","hp","laneValues","parseLaneData","posOffset","spriteOffset","lastIntent","kickCharge","setOrigin","refreshBody","updatePlayerPosition","cursors","input","keyboard","createCursorKeys","StatBar","changeLane","width","maxIdx","length","realPos","setOffsetPosition","cancelKick","setLaneDepth","statusKeys","indexOf","setProgress","checkStatuses","getModifiedKickCharge","checkStatus","intent","getIntentFromStateAndKeys","startKick","kick","startHug","cancelHug","up","isDown","right","left","chargeKick","playStatusAnimation","playAnimationForStatus","eventEmitter","EventEmitter","drainRate","drainStart","drainTimer","feeding","canBeEaten","startDrainTimer","onDrainTimer","Date","drainAmount","emptyBowl","enemyEntity","addToDrainRate","feeder","bowlEmpty","levelGroups","INITIAL_STATE_POINTS","points","gameData","curLevel","particleDefs","blood","image","emitter","quantity","visible","blendMode","angle","lifespan","gravityY","raccoon","atlas","cycle","frequency","raccoon_mean","particles","createGame","config","AUTO","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","height","zoom","autoRound","default","arcade","gravity","debug","Game","LevelController","SpawnController","initSound","preloadSound","getScene","level","levels","scenes","sceneKey","on","onInterface","spawnGroups","entities","collider","platforms","collider_enemyAndPlatform","overlap","trigger_enemyAndBowl","leftTrigger","trigger_itemAtStart","rightTrigger","trigger_enemyAtEnd","trigger_enemyAndPlayer","onObjectClicked","onKeyDown","event","data","gameInterface","trigger","STATUS_ENEMY","setPoints","captured","escaped","canEat","eatAtBowl","eatenBy","platform","STATUS_PLAYER","getKickStrength","kickStrength","punt","willKill","showParticle","thudVolume","volume","kickEnemy","hug","onHugEnemy","hugEnemy","bite","onAttackedByEnemy","bitePlayer","pointer","gameObject","worldX","worldY","clicked","pDef","pEmitter","createEmitter","explode","stopGame","stop","setLevel","levelIdx","code","change","updateScoreboard","pauseGame","pause","resumeGame","resume","killGame","fetchThing","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","uiSlice","increment","decrement","incrementByAmount","pending","fulfilled","combineReducers","metricsReducer","statusReducer","store","configureStore","reducer","ui","uiReducer","gameReducer","SPRITE_KEY","rY","rX","statType","playAnimationForType","vX","vY","alpha","tweens","targets","duration","delay","ease","TRIGGER_DIMS","triggerY","platformWidth","setDisplaySize","setAlpha","createGameInterface","dispatch","createGlobalStyle","getColor","colorId","colors","black","white","grey","grey_light","grey_dark","pink","brown","brown_light","brown_dark","tan","red","green","green_light","shadows","z1","z2","z3","breakpoints","mobile_tiny","mobile_medium","mobile_large","tablet","desktop","useAppSelector","checkMetricRule","metricRule","stateValue","condition","criteria","evaluateExpression","evaluateGameCondition","gameCondition","results","i","gc","when","Brain","useDispatch","useEffect","rules","RulesJson","TRAPPER","metricRules","stateMetrics","m","metric","result","gameConditions","resultObjs","passedCondition","then","halt","evaluateGameConditions","conditions","resultAction","ScPhaserContainer","styled","div","ScWrapper","PhaserContainer","id","ScButton","Button","onClick","text","ScSplash","ScBg","ScBody","ScButtons","h1","ScLogo","Splash","navigate","useNavigate","title","onGameClick","ScControls","ScEnemies","Controls","useState","setSpawnSpeed","className","onChange","target","ScStats","ScStatGroup","p","css","ScStat","ScDebug","DebugStats","goodStats","badStats","score","ScSidebar","ScBottom","ScTop","ScLink","Link","ScHelp","ScSideImage","HelpList","Sidebar","collapsed","setCollapsed","to","ScModal","WonModal","LostModal","PausedModal","MultiModal","playStatusObj","ScModals","Modals","ScMusic","Music","playing","setPlaying","useSound","ScStage","RouteReader","location","useLocation","pathname","App","pages","route","element","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8d6836bf.chunk.js","sourcesContent":["\r\nlet gameContext;\r\nlet sceneContext;\r\n\r\nexport const SOUNDS = {\r\n  SPLAT: null,\r\n  GOOD: 'sfxtest_trainwhistle',\r\n  BAD: 'sfxtest_slidewhistle',\r\n  HUG: 'sfxtest_trainwhistle',\r\n  ENEMY_BITE: 'sfxtest_bite',\r\n  ENEMY_EATING: 'sfxtest_eat',\r\n  ENEMY_CAPTURED: 'sfxtest_trainwhistle',\r\n  ENEMY_ESCAPED: 'sfxtest_slidewhistle',\r\n}\r\n\r\nexport const init = (sContext, gContext) => {\r\n  gameContext = gContext;\r\n  sceneContext = sContext;\r\n}\r\n\r\nexport const preload = () => {\r\n  sceneContext.load.audioSprite('sfx_test', './assets/sfx/sfx-test.json', [ 'assets/sfx/sfx-test.ogg', 'assets/sfx/sfx-test.mp3'] );\r\n}\r\n\r\nexport const playSound = (soundKey, params = {}) => {\r\n  gameContext.sound.playAudioSprite('sfx_test', soundKey, params);\r\n}","import Phaser from 'phaser';\r\n\r\nimport Raccoon from './entities/raccoon';\r\nimport Player from './entities/player';\r\nimport Bowl from './entities/bowl';\r\nimport Status from './entities/status';\r\nimport { getDepthOfLane } from './utils/values';\r\nimport { throttle } from 'throttle-debounce';\r\nimport Events from '../event-emitter';\r\n\r\nconst THROTTLE_SPEED = 150;\r\nconst SPAWN_MIN = 1000;\r\nconst SPAWN_MAX = 1;\r\nconst SPAWN_LIMIT = -1;\r\n\r\nlet spawnCount = 0;\r\nlet lastSentActiveEnemies = 0;\r\nlet spawnFrequency = null; // how often to roll dice for spawns\r\nlet curTicker = 0;\r\nlet spawnPositions = [];\r\nlet defGlobalEntities = {};\r\nlet defEnemyEntities = [];\r\nlet defLaneSpawns = [];\r\n\r\nconst groups = {};\r\nlet player;\r\nlet sceneContext;\r\n\r\nconst entityTypes = {\r\n  'raccoon': Raccoon.Entity\r\n}\r\n\r\n\r\nexport const setContext = (context) => {\r\n  sceneContext = context;\r\n}\r\n\r\nexport const preload = () => {\r\n  Raccoon.initSpritesheet(sceneContext);\r\n  Player.initSpritesheet(sceneContext);\r\n  Bowl.initSpritesheet(sceneContext);\r\n  Status.initSpritesheet(sceneContext);\r\n}\r\n\r\nexport const create = (globalEntities, levelData, sceneData) => {\r\n  spawnPositions = sceneData.lanes.map(pO => ({\r\n    x: parseInt(pO.x),\r\n    y: parseInt(pO.y) - 50\r\n  }));\r\n  defGlobalEntities = globalEntities.misc;\r\n  defEnemyEntities = globalEntities.enemies;\r\n  defLaneSpawns = levelData.lanes.map(l => l.spawns);\r\n\r\n  //- container for bad boyz\r\n  groups.enemies = sceneContext.physics.add.group();\r\n  groups.bowls = sceneContext.physics.add.group();\r\n  groups.player = sceneContext.physics.add.staticGroup();\r\n\r\n  Player.initSprites(sceneContext);\r\n  Raccoon.initSprites(sceneContext);\r\n  Bowl.initSprites(sceneContext);\r\n  Status.initSprites(sceneContext);\r\n\r\n  spawnPlayer(sceneData.lanes);\r\n  return groups;\r\n}\r\n\r\n// from the supplied data and random rolls, get a list of entites to spawn, and the lanes they should spawn in\r\nexport const getSpawnCommands = laneSpawnData => {\r\n  let enemies = [];\r\n  laneSpawnData.forEach((lane, idx) => {\r\n    lane.forEach(enemy => {\r\n      if(Math.random() < enemy.rate){\r\n        enemies.push({ \r\n          type: enemy.type, \r\n          laneIdx: idx \r\n        });\r\n      }\r\n    })\r\n  });\r\n\r\n  return enemies;\r\n}\r\n\r\nexport const rollForSpawns = laneSpawnData => {\r\n  const spawnCommands = getSpawnCommands(laneSpawnData);\r\n  let spawnCount = 0;\r\n  spawnCommands.forEach(sData => {\r\n    const eData = defEnemyEntities[sData.type];\r\n    if(entityTypes[eData.type]){\r\n      spawnIt(entityTypes[eData.type], eData, sData.laneIdx);\r\n      spawnCount++;\r\n    }else{\r\n      console.error('unknown entity type:', eData.type);\r\n    }\r\n  })\r\n\r\n  return spawnCount;\r\n}\r\n\r\nexport const update = () => {\r\n  groups.enemies.children.each(entity => {\r\n    entity.update();\r\n  });\r\n  \r\n  groups.player.children.each(entity => {\r\n    entity.update();\r\n  });\r\n\r\n  //- hack that stops spawning when slider at lowest value\r\n  if(SPAWN_LIMIT === -1 || spawnCount < SPAWN_LIMIT){\r\n    if(spawnFrequency !== SPAWN_MIN){\r\n      if(curTicker > spawnFrequency){\r\n        curTicker = 0;\r\n        spawnCount += rollForSpawns(defLaneSpawns);\r\n      }else{\r\n        curTicker++;\r\n      }\r\n    }\r\n  }\r\n\r\n  throttledUpdate();\r\n}\r\n\r\nexport const onThrottledUpdate = () => {\r\n  if(global.gameActive){\r\n    updateSpawnCount();\r\n    groups.enemies.children?.each(entity => {\r\n      entity.throttledUpdate();\r\n    });\r\n    \r\n    groups.player.children?.each(entity => {\r\n      entity.throttledUpdate();\r\n    });\r\n  }\r\n}\r\n\r\nconst throttledUpdate = throttle(THROTTLE_SPEED, false, onThrottledUpdate);\r\nexport const spawn = (group, key, anim, x, y) => {\r\n  // console.log(`spawn ${key} at (${x}, ${y})`)\r\n\r\n  let item = groups[group].create(x, y, key);\r\n  item.anims.play(anim);\r\n  return item;\r\n}\r\n\r\n/* Internal spawn methods */\r\nconst randomizeStats = statsObj => {\r\n  return {\r\n    speed: Phaser.Math.Between(statsObj.speed[0], statsObj.speed[1]),\r\n    jumpRate: Phaser.Math.Between(statsObj.jumpRate[0], statsObj.jumpRate[1]),\r\n  }\r\n}\r\n\r\nconst spawnIt = (EntityRef, entityData, laneIdx) => {\r\n  const pos = spawnPositions[laneIdx];\r\n  const stats = randomizeStats(entityData.stats);\r\n  \r\n  let entity = new EntityRef(sceneContext, groups.enemies, {\r\n    x: pos.x,\r\n    y: pos.y,\r\n    stats: stats,\r\n    depth: getDepthOfLane(laneIdx),\r\n    misc: entityData.misc,\r\n    type: entityData.type,\r\n    particleDeath: entityData.particleDeath\r\n  });\r\n  const randomScale = Phaser.Math.Between(entityData.scaleRange[0], entityData.scaleRange[1]) / 100;\r\n  entity.setScale(randomScale);\r\n}\r\n\r\nexport const spawnStatus = (type, x, y, depth) => {\r\n  let status = new Status.Entity(sceneContext, x, y, type, depth);\r\n};\r\n\r\nexport const spawnBowl = (x, y) => {\r\n  let bowl = new Bowl.Entity(sceneContext, groups.bowls, {\r\n    x: x,\r\n    y: y\r\n  });\r\n\r\n  bowl.setVelocity(defGlobalEntities.bowl.spawnSpeed, 20);\r\n}\r\n\r\nexport const slingBowl = () => {\r\n  let bowl = new Bowl.Entity(sceneContext, groups.bowls, {\r\n    x: player.x + 20,\r\n    y: player.y + 90,\r\n    depth: getDepthOfLane(player.laneIdx, 1)\r\n  });\r\n\r\n  bowl.setVelocity(defGlobalEntities.bowl.spawnSpeed, -100);\r\n}\r\n\r\nconst spawnPlayer = (laneData) => {\r\n  player = new Player.Entity(sceneContext, 800, 300, groups.player, laneData);\r\n}\r\n\r\nconst updateSpawnCount = () => {\r\n  const activeEnemies = groups.enemies.countActive();\r\n  if(lastSentActiveEnemies !== activeEnemies){\r\n    lastSentActiveEnemies = activeEnemies;\r\n    Events.emit('interface', 'setMetric', { 'key': 'activeEnemies', 'value': activeEnemies });\r\n  }\r\n}\r\n\r\nconst formatSliderValue = sliderPosition => {\r\n  var minPerc = 0;\r\n  var maxPerc = 100;\r\n\r\n  var minV = Math.log(SPAWN_MIN);\r\n  var maxV = Math.log(SPAWN_MAX);\r\n  \r\n  var scale = (maxV-minV) / (maxPerc-minPerc);\r\n  \r\n  return Math.round(Math.exp(minV + scale*(sliderPosition-minPerc)));\r\n}\r\n\r\n\r\n/*\r\n//- this approach seems to perform a lot better, however cannot extend gameobject class correctly\r\nconst basicSpawn = () => {\r\n  let enemy = enemies.create(0, 50, 'raccoon_walk');\r\n  // console.log('instance:', enemy)\r\n\r\n  //- physics\r\n  enemy.setBounce(.4);\r\n  enemy.setCollideWorldBounds(true);\r\n  enemy.allowGravity = false;\r\n  \r\n  //- squeeze in hit box from edge of sprite\r\n  enemy.body.setSize(60,70);\r\n  enemy.body.offset.x = 35;\r\n  enemy.body.offset.y = 30;\r\n  enemy.anims.play('raccoon_walk');\r\n\r\n  enemy.setVelocity(Phaser.Math.Between(200, 800), 20);\r\n}\r\n */\r\n\r\nexport const external_setSpawnFrequency = (newValue) => {\r\n  spawnFrequency = formatSliderValue(newValue);\r\n}\r\n\r\nconst exportMap = {\r\n  setContext,\r\n  preload,\r\n  create,\r\n  update,\r\n  spawn,\r\n  spawnBowl,\r\n  slingBowl,\r\n  external_setSpawnFrequency\r\n}\r\nexport default exportMap; ","// slightly evolving from create-react-app example\r\nimport { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport interface StatsState {\r\n  gameStatus: 'active' | 'inactive',\r\n  playStatus: 'inactive' | 'playing' | 'won' | 'lost' | 'paused',\r\n  playStatusReason: string\r\n}\r\n\r\nconst initialState: StatsState = {\r\n  gameStatus: 'inactive',\r\n  playStatus: 'inactive',\r\n  playStatusReason: ''\r\n};\r\n\r\nexport const statusSlice = createSlice({\r\n  name: 'status',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    startGame: state => {\r\n      state.gameStatus = 'active';\r\n      state.playStatus = 'playing';\r\n      state.playStatusReason = '';\r\n    },\r\n    exitGame: state => {\r\n      state.gameStatus = 'inactive';\r\n      state.playStatus = 'inactive';\r\n      state.playStatusReason = '';\r\n    },\r\n    winRound: (state, reason: PayloadAction<string>) => {\r\n      state.playStatus = 'won';\r\n      state.playStatusReason = reason.payload;\r\n    },\r\n    loseRound: (state, reason: PayloadAction<string>) => {\r\n      state.playStatus = 'lost';\r\n      state.playStatusReason = reason.payload;\r\n    }\r\n  }\r\n});\r\n\r\n\r\n\r\nexport const { startGame, exitGame, winRound, loseRound } = statusSlice.actions;\r\n\r\nexport const selectGameStatus = (state: RootState) => state.game.status.gameStatus;\r\nexport const selectPlayStatus = (state: RootState) => state.game.status.playStatus;\r\nexport const selectPlayStatusReason = (state: RootState) => state.game.status.playStatusReason;\r\n\r\nconst getModalFromGameStatus = createSelector(\r\n  [\r\n    selectGameStatus,\r\n    selectPlayStatus, \r\n    selectPlayStatusReason\r\n  ],\r\n  (gameStatus, playStatus, reason) => {\r\n    if(gameStatus === 'active'){\r\n      if(['paused', 'lost', 'won'].some(s => s === playStatus)){\r\n        return {\r\n          status: playStatus,\r\n          reason\r\n        } as PlayStatusObj\r\n      }\r\n    }\r\n\r\n    return null;    \r\n  }\r\n)\r\nexport const ReselectModalFromGameStatus = () => {\r\n  return useSelector(getModalFromGameStatus)\r\n}\r\n\r\nexport default statusSlice.reducer;","\r\nexport const Values = {\r\n  zindex:{\r\n    BACKGROUND: 0,\r\n    LANE_1: 10,\r\n    LANE_2: 20,\r\n    LANE_3: 30,\r\n    LANE_4: 40,\r\n    FOREGROUND: 50\r\n  }\r\n}\r\n\r\n\r\nexport const getDepthOfLane = (laneIdx, offset = 0) => {\r\n  try{\r\n    const idx = Values.zindex[`LANE_${laneIdx + 1}`] + offset;\r\n    if(!isNaN(idx)) return idx;\r\n  }catch(e){\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport default Values;","// slightly evolving from create-react-app example\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { RootState } from '../store';\r\nimport { exitGame } from './status-slice';\r\n\r\n\r\nexport interface StatsState {\r\n  bowls: number,\r\n  hugs: number,\r\n  bites: number,\r\n  captures: number,\r\n  escapes: number,\r\n  activeEnemies: number\r\n}\r\n\r\nconst initialState: StatsState = {\r\n  bowls: 0,\r\n  hugs: 0,\r\n  bites: 0,\r\n  captures: 0,\r\n  escapes: 0,\r\n  activeEnemies: 0\r\n};\r\n\r\nconst scoreModifiers: GameMetrics = {\r\n  bowls: -.25,\r\n  hugs: 5,\r\n  bites: -10,\r\n  captures: 10,\r\n  escapes: -5,\r\n  activeEnemies: 0\r\n};\r\n\r\nexport const metricsSlice = createSlice({\r\n  name: 'metrics',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setMetric: (state: StatsState, action: PayloadAction<any>) => {\r\n      const key = action.payload?.key as GameMetricKey;\r\n      if(state[key] !== undefined){\r\n        state[key] = action.payload?.value;\r\n      }else{\r\n        console.error('invalid stat called in reducer:', action.payload.key)\r\n      }\r\n\r\n      // state.score = getScore(state);\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(exitGame, (state) => {\r\n        return initialState;\r\n      })\r\n  },\r\n});\r\n\r\nexport const getScore = (metrics: GameMetrics) => {\r\n  let total = 0;\r\n  Object.keys(metrics).forEach(k => {\r\n    // ignore 'score' or other unwanted values\r\n    if(scoreModifiers[k as GameMetricKey]){\r\n      total += metrics[k as GameMetricKey] * scoreModifiers[k as GameMetricKey];\r\n    }\r\n  })\r\n\r\n  return total;\r\n}\r\n\r\n\r\n\r\nexport const { setMetric } = metricsSlice.actions;\r\nexport const selectMetrics = (state: RootState): Array<GameMetric> => {\r\n  return Object.keys(state.game.metrics)\r\n  .filter(sKey => scoreModifiers[sKey as GameMetricKey] !== undefined)\r\n  .map(k => ({\r\n    key: k,\r\n    value: state.game.metrics[k as GameMetricKey],\r\n    isGood: scoreModifiers[k as GameMetricKey] > 0\r\n  }));\r\n};\r\n\r\nexport const selectMetricsMap = (state: RootState): GameMetrics => {\r\n  return state.game.metrics;\r\n};\r\n\r\nexport const selectGoodMetrics = (state: RootState) => {\r\n  return selectMetrics(state).filter(s => s.isGood);\r\n};\r\nexport const selectBadMetrics = (state: RootState) => {\r\n  return selectMetrics(state).filter(s => !s.isGood);\r\n};\r\nexport const selectScore = (state: RootState) => getScore(state.game.metrics);\r\nexport const selectActiveEnemies = (state: RootState) => state.game.metrics.activeEnemies;\r\nexport default metricsSlice.reducer;\r\n","import Phaser from 'phaser';\r\n\r\nconst KILL_TIMEOUT = 3000;\r\nconst DESTROY_TIMEOUT = 1000;\r\nconst PUNT_TIMEOUT = 1000;\r\nlet sceneRef;\r\n\r\nexport const STATUS = {\r\n  ROAMING: 0,\r\n  EATING: 1,\r\n  ROAMING_TAME: 3,\r\n  DEAD: 4,\r\n  HUGGING: 5,\r\n  IDLE: 6,\r\n  CAPTURED: 12,\r\n  ESCAPED: 13,\r\n  BITING: 14,\r\n}\r\n\r\nconst spriteKey = 'raccoon';\r\nconst velocityRanges = {\r\n  LIL_PUNT: {\r\n    min: { x: -75, y: -50 },\r\n    max: { x: -200, y: -200 },\r\n    diff: { x: 0, y: 0 }\r\n  },\r\n  BIG_PUNT: {\r\n    min: { x: -500, y: -300 },\r\n    max: { x: -700, y: -500 },\r\n    diff: { x: 0, y: 0 }\r\n  }\r\n}\r\n\r\nvelocityRanges.LIL_PUNT.diff = {\r\n  x: velocityRanges.LIL_PUNT.max.x - velocityRanges.LIL_PUNT.min.x,\r\n  y: velocityRanges.LIL_PUNT.max.y - velocityRanges.LIL_PUNT.min.y\r\n};\r\nvelocityRanges.BIG_PUNT.diff = {\r\n  x: velocityRanges.BIG_PUNT.max.x - velocityRanges.BIG_PUNT.min.x,\r\n  y: velocityRanges.BIG_PUNT.max.y - velocityRanges.BIG_PUNT.min.y\r\n};\r\n\r\n/*\r\nstats = {\r\n  speed: [ minSpeedX, maxSpeedX ]\r\n}\r\n*/\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, physicsGroup, spawnData) {\r\n    super(scene, spawnData.x, spawnData.y, 'raccoon');\r\n    sceneRef = scene;\r\n    this.deathTimer = null;\r\n    this.destroyTimer = null;\r\n    this.punted = null;\r\n    this.type = 'raccoon';\r\n    this.particleDeath = spawnData.particleDeath;\r\n\r\n    // this.status = STATUS.ROAMING;\r\n    // this.love = 0;\r\n    // this.maxLove = 100;\r\n    this.stats = spawnData.stats || {};\r\n    this.status = null;\r\n    this.isFull = false;\r\n\r\n    // move bowl to the right, relative to entity\r\n    this.eatOffset = 11;\r\n\r\n    this.curPhysState = null;\r\n    this.curAnimState = null;\r\n\r\n    this.puntKillThreshold = 1;\r\n    if(spawnData.misc?.puntKillThreshold || spawnData.misc?.puntKillThreshold === 0){\r\n      this.puntKillThreshold = spawnData.misc.puntKillThreshold;\r\n    }\r\n\r\n    this.feedable = true;\r\n    if(spawnData.misc?.feedable === false){\r\n      this.feedable = false;\r\n    }\r\n\r\n    //- parent stuff\r\n    if(!isNaN(spawnData.depth)) {\r\n      this.setDepth(spawnData.depth);\r\n    }\r\n    scene.add.existing(this);\r\n    if(physicsGroup){\r\n      physicsGroup.add(this);\r\n    }else{\r\n      scene.physics.add.existing(this);\r\n    }\r\n    \r\n    //- physics\r\n    this.setBounce(0);\r\n    this.setCollideWorldBounds(false);\r\n    this.allowGravity = false;\r\n\r\n    //- squeeze in hit box from edge of sprite\r\n    this.body.setSize(30,20);\r\n    this.body.offset.x = 15;\r\n    this.body.offset.y = 25;\r\n    this.setStatus(STATUS.ROAMING, true);\r\n\r\n    //- interaction listeners\r\n    this.setInteractive();\r\n    if(spawnData.misc?.tint){\r\n      this.setTint(spawnData.misc.tint);\r\n    }\r\n  }\r\n\r\n  clicked(){\r\n    this.kill(true);\r\n  }\r\n\r\n  canEat(){\r\n    if(this.isAlive() && this.feedable && !this.isFull){\r\n      switch(this.status){\r\n        case STATUS.EATING: return false;\r\n        default: return true;\r\n      }\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  canIdle(){\r\n    if(this.isAlive() && this.body.touching.down && this.body.velocity.x === 0){\r\n      switch(this.status){\r\n        case STATUS.ROAMING: return true;\r\n        case STATUS.IDLE: return true;\r\n        default: return false;\r\n      }\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // right now, its a %, later should be actual power\r\n  punt(force){\r\n    this.punted = true;\r\n    this.puntedTimer = sceneRef.time.delayedCall(PUNT_TIMEOUT, () => {\r\n      this.punted = false;\r\n    });\r\n    \r\n    // console.log('force', force)\r\n    this.body.setDrag(0);\r\n\r\n    let vRange;\r\n    if(force < .5){\r\n      vRange = velocityRanges.LIL_PUNT;\r\n    }else{\r\n      vRange = velocityRanges.BIG_PUNT;\r\n    }\r\n\r\n    // console.log('vRange', vRange.min.x + vRange.diff.x * force)\r\n    this.setVelocity(\r\n      vRange.min.x + vRange.diff.x * force,\r\n      vRange.min.y + vRange.diff.y * force,\r\n    );\r\n  }\r\n\r\n  kill(quickKill){\r\n    this.setStatus(STATUS.DEAD);\r\n\r\n    if(quickKill){\r\n      this.destroy();\r\n    }\r\n    else{\r\n      this.deathTimer = sceneRef.time.delayedCall(KILL_TIMEOUT, () => {\r\n        this.destroy();\r\n      });\r\n    }\r\n  }\r\n\r\n  update(){\r\n    //- turn if facing left\r\n    if(this.isAlive() && this.flipX){\r\n      if(this.body.velocity.x >= 0) this.flipX = false;\r\n    }else{\r\n      if(this.body.velocity.x < 0) this.flipX = true;\r\n    }\r\n\r\n    const animKey = this.getAnimationForState();\r\n    if(animKey !== this.curAnim){\r\n      this.curAnim = animKey;\r\n      this.playAnimationForKey(animKey);\r\n    }\r\n    \r\n    this.adjustMovementForState();\r\n  }\r\n\r\n  isAlive(){\r\n    return this.status !== STATUS.DEAD;\r\n  }\r\n\r\n  isMovingStatus(given){\r\n    switch (given || this.status){\r\n      case STATUS.ROAMING: return true;\r\n      case STATUS.ROAMING_TAME: return true;\r\n      default: break;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  adjustMovementForState(){\r\n    if(this.body.velocity.x < 1 && this.body.velocity.x > -1){\r\n      //- if still, but in a moving status (most likely after falling), force it again to get movin!\r\n      if(this.isMovingStatus(this.status)){\r\n        this.setStatus(this.status, true);\r\n      };\r\n    }\r\n\r\n    //- attempt to readjust after landing from a punt\r\n    if(this.body.touching.down && this.body.velocity.x < 0){\r\n      this.moveStop();\r\n    }\r\n  }\r\n\r\n  getAnimationForState(){\r\n    if(this.status === STATUS.DEAD){\r\n      return 'raccoon_dead';\r\n    } else {\r\n      if (this.body.velocity.y < -50) {\r\n        return 'raccoon_hop_up';\r\n      } else if (this.body.velocity.y > 50) {\r\n        return 'raccoon_hop_down';\r\n      } else if (this.status === STATUS.EATING){\r\n        return 'raccoon_eat';\r\n      } else if (this.status === STATUS.ROAMING_TAME){\r\n        return 'raccoon_loveWalk';\r\n      } else if (this.status === STATUS.ROAMING){\r\n        return 'raccoon_angryWalk';\r\n      } else if (this.status === STATUS.HUGGING){\r\n        return 'raccoon_hug';\r\n      } else if (this.status === STATUS.BITING){\r\n        return 'raccoon_bite';\r\n      } else if (this.status === STATUS.ESCAPED){\r\n        return 'raccoon_bite';\r\n      } else if (this.status === STATUS.CAPTURED){\r\n        return 'raccoon_hug';\r\n      } \r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  setPhysState(){\r\n    const physState = null;\r\n\r\n\r\n    if(physState && physState !== this.curPhysState){\r\n\r\n    }\r\n  }\r\n\r\n  throttledUpdate(){\r\n\r\n  }\r\n  \r\n  eatAtBowl(bowlBody){\r\n    // align with the food bowl\r\n    this.body.x = bowlBody.x - this.eatOffset;\r\n\r\n    this.setStatus(STATUS.EATING);\r\n  }\r\n\r\n  bowlEmpty(){\r\n    if(this.isAlive()){\r\n      this.isFull = true;\r\n      this.setStatus(STATUS.ROAMING_TAME);\r\n    }\r\n  }\r\n\r\n  playAnimationForKey(animKey){\r\n    if(animKey){\r\n      this.anims.play(animKey);\r\n    }\r\n  }\r\n\r\n  checkStatus(statusKey){\r\n    return this.status === statusKey;\r\n  }\r\n\r\n  moveNormal(modifier = 1){\r\n    this.body.setDrag(0);\r\n    // this.body.velocity.x = 10; \r\n    this.body.velocity.x = this.stats.speed * modifier;\r\n  }\r\n\r\n  moveStop(){\r\n    this.body.setDrag(500);\r\n  }\r\n\r\n\r\n  setStatus(status, force, playStatusAnimation = true){\r\n    if(force || this.status !== status){\r\n      this.status = status;\r\n\r\n      switch(this.status){\r\n        case STATUS.ROAMING: \r\n          this.moveNormal();\r\n          break;\r\n        case STATUS.ROAMING_TAME: \r\n          this.moveNormal(3);\r\n          break;\r\n        case STATUS.EATING: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.DEAD:\r\n          this.moveStop();\r\n          break;\r\n        case STATUS.HUGGING: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.BITING: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.CAPTURED: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.ESCAPED: \r\n          this.moveStop();\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // assumeStatus(){\r\n  //   if(this.isAlive()){\r\n  //     if(this.isFull){\r\n  //       return STATUS.ROAMING_TAME;\r\n  //     }else{\r\n  //       if(this.canIdle()){\r\n  //         return STATUS.IDLE;\r\n  //       }else{\r\n  //         return STATUS.ROAMING;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  resumeStatus(){\r\n    const statusKey = this.resumeStatus;\r\n    this.setStatus(statusKey)\r\n  }\r\n\r\n  escaped(){\r\n    this.setStatus(STATUS.ESCAPED);\r\n    this.delayedDestroy();\r\n  }\r\n\r\n  captured(){\r\n    this.setStatus(STATUS.CAPTURED);\r\n    this.delayedDestroy();\r\n  }\r\n  \r\n  hug(){    \r\n    this.setStatus(STATUS.HUGGING);\r\n    this.delayedDestroy();\r\n  }\r\n  \r\n  bite(){\r\n    this.setStatus(STATUS.BITING);\r\n    this.delayedDestroy();\r\n  }\r\n\r\n  delayedDestroy(){\r\n    this.destroyTimer = sceneRef.time.delayedCall(DESTROY_TIMEOUT, () => {\r\n      this.destroy();\r\n    });\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_idle',\r\n    frames: [ \r\n      { key: spriteKey, frame: 0 },  \r\n      { key: spriteKey, frame: 1 } \r\n    ],\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_walk',\r\n    frames: [ \r\n      { key: spriteKey, frame: 2 },  \r\n      { key: spriteKey, frame: 3 } \r\n    ],\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_start',\r\n    frames: [ { key: spriteKey, frame: 4 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_up',\r\n    frames: [ { key: spriteKey, frame: 5 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_down',\r\n    frames: [ { key: spriteKey, frame: 6 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_end',\r\n    frames: [ { key: spriteKey, frame: 7 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_angryWalk',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 2, end: 3 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_loveWalk',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 10, end: 11 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_dead',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 16, end: 17 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_eat',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 8, end: 9 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hug',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 12, end: 13 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_bite',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 14, end: 15 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_punted',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 2, end: 3 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('raccoon', './assets/sprites/raccoon2.png', { frameWidth: 56, frameHeight: 56 });\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\nimport { getDepthOfLane } from '../utils/values';\r\nimport StatBar from './stat-bar';\r\n\r\nconst STARTING_LANE = 2;\r\nconst KICK_DURATION = 500; // becomes variable based on kick power\r\nconst ATTACKED_DURATION = 1000;\r\nconst DESTROY_TIMEOUT = 5000;\r\nconst MIN_KICK_FORCE = .3;\r\nlet statBar;\r\nlet sceneRef;\r\n\r\nexport const STATUS = {\r\n  IDLE: 0,\r\n  FEED: 1,\r\n  HUGGING: 2,\r\n  KICK_PREP: 3,\r\n  KICK: 4,\r\n  ATTACKED: 5,\r\n  DEAD: 6\r\n}\r\n\r\nconst animationStatus = {\r\n  [STATUS.IDLE]: 'player_idle',\r\n  [STATUS.FEED]: 'player_idle',\r\n  [STATUS.HUGGING]: 'player_hug',\r\n  [STATUS.KICK_PREP]: 'player_kick_prep',\r\n  [STATUS.KICK]: 'player_kick',\r\n  [STATUS.ATTACKED]: 'player_hurt',\r\n  [STATUS.DEAD]: 'player_idle'\r\n}\r\n\r\nconst gameState = {};\r\n\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, x, y, physicsGroup, laneData) {\r\n    super(scene, x, y, 'player');\r\n    sceneRef = scene;\r\n    this.recoveryTimer = null;\r\n    this.destroyTimer = null;\r\n\r\n    this.hpRange = [ 0, 100 ];\r\n    this.hp = this.hpRange[1];\r\n    this.laneIdx = 0;\r\n    this.laneValues = this.parseLaneData(laneData);\r\n    this.posOffset = [];\r\n    this.spriteOffset = [];\r\n    this.lastIntent = null;\r\n\r\n    this.isAlive = true;\r\n    this.kickCharge = 0;\r\n\r\n    //- parent stuff\r\n    scene.add.existing(this);\r\n    if(physicsGroup){\r\n      physicsGroup.add(this);\r\n    }else{\r\n      scene.physics.add.existing(this);\r\n    }\r\n\r\n    /* tweak settings here when sprite changes size */\r\n    this.setOrigin(0, 0).refreshBody();\r\n    // this.body.setSize(50, 75);\r\n    // this.posOffset = [ 0, 20 ];\r\n    /* normal phaser way isnt working, so pass this along to offset the sprite a lil */\r\n    // this.spriteOffset = [ 12, 6 ];\r\n\r\n    this.body.setSize(60, 100);\r\n    this.posOffset = [ -120, 4 ];\r\n    this.spriteOffset = [ 12, 6 ];\r\n    this.setScale(1.3);\r\n\r\n    this.updatePlayerPosition();\r\n    this.setStatus(STATUS.IDLE, true);\r\n    \r\n    gameState.cursors = scene.input.keyboard.createCursorKeys();\r\n    \r\n    statBar = new StatBar.Entity(scene, 150, 150);\r\n    this.changeLane(STARTING_LANE);\r\n  }\r\n\r\n  setLaneDepth(){\r\n    this.setDepth(getDepthOfLane(this.laneIdx) - 1);\r\n  }\r\n\r\n  parseLaneData(laneData){\r\n    return laneData.map(lane => ({\r\n      x: parseInt(lane.x) + parseInt(lane.width) - 10,\r\n      y: parseInt(lane.y) - 110\r\n    }));\r\n  }\r\n  \r\n  changeLane(diff){\r\n    this.laneIdx += diff;\r\n    const maxIdx = this.laneValues.length - 1;\r\n    if(this.laneIdx > maxIdx){\r\n      this.laneIdx = 0;\r\n    }else if(this.laneIdx < 0){\r\n      this.laneIdx = maxIdx;\r\n    }\r\n\r\n\r\n    this.updatePlayerPosition();\r\n  }\r\n\r\n  updatePlayerPosition(){\r\n    const pos = this.laneValues[this.laneIdx];\r\n    const realPos = {\r\n      x: pos.x + this.posOffset[0],\r\n      y: pos.y + this.posOffset[1],\r\n    }\r\n    this.body.x = realPos.x + this.spriteOffset[0];\r\n    this.body.y = realPos.y + this.spriteOffset[1];\r\n    this.setPosition(realPos.x, realPos.y);\r\n    statBar && statBar.setOffsetPosition(realPos.x, realPos.y);\r\n\r\n    // OK to cancel a kick animation, not OK to cancel a charge\r\n    if(this.status === STATUS.KICK){\r\n      this.cancelKick();\r\n    }\r\n    \r\n    this.setLaneDepth();\r\n  }\r\n\r\n  checkStatus(statusKey){\r\n    // console.log('check', statusKey, this.status, STATUS[statusKey])\r\n    return this.status === statusKey;\r\n  }\r\n  checkStatuses(statusKeys){\r\n    return statusKeys.indexOf(this.status) > -1;\r\n  }\r\n  \r\n  onAttackedByEnemy(enemy){\r\n    // console.log('hurt')\r\n    this.setStatus(STATUS.ATTACKED);\r\n    this.recoveryTimer = sceneRef.time.delayedCall(ATTACKED_DURATION, () => {\r\n      this.setStatus(STATUS.IDLE);\r\n    });\r\n  }\r\n  \r\n  kill(){\r\n    this.setStatus(STATUS.DEAD);\r\n    this.delayedDestroy();\r\n  }\r\n\r\n  delayedDestroy(){\r\n    this.destroyTimer = sceneRef.time.delayedCall(DESTROY_TIMEOUT, () => {\r\n      this.destroy();\r\n    });\r\n  }\r\n\r\n  chargeKick(){\r\n    this.kickCharge += .1;\r\n    if(this.kickCharge > 1){\r\n      this.kickCharge = 1;\r\n    }\r\n\r\n    statBar.setProgress(this.kickCharge);\r\n  }\r\n\r\n  startKick(){\r\n    if(!this.checkStatuses([STATUS.KICK, STATUS.KICK_PREP])){\r\n      this.setStatus(STATUS.KICK_PREP);\r\n    }\r\n  }\r\n\r\n  // helps to give a minimum kick strength, helps for tapping kick and not getting 0 strength\r\n  // normalizes 0-1 between [ MIN_KICK_FORCE, 1 ]\r\n  getModifiedKickCharge(){\r\n    return MIN_KICK_FORCE + (this.kickCharge * (1 - MIN_KICK_FORCE));\r\n  }\r\n\r\n  kick(){\r\n    this.setStatus(STATUS.KICK);\r\n\r\n    this.recoveryTimer = sceneRef.time.delayedCall(this.getModifiedKickCharge() * KICK_DURATION, () => {\r\n      this.cancelKick();\r\n    });\r\n  }\r\n\r\n  cancelKick(){\r\n    this.kickCharge = 0;\r\n    statBar.setProgress(this.kickCharge);\r\n    this.setStatus(STATUS.IDLE);\r\n  }\r\n\r\n  //- eventually this should be % charge * stats\r\n  getKickStrength(){\r\n    return this.getModifiedKickCharge();\r\n  }\r\n\r\n\r\n  startHug(){\r\n    if(!this.checkStatus(STATUS.HUGGING)){\r\n      this.setStatus(STATUS.HUGGING);\r\n    }\r\n  }\r\n  cancelHug(){\r\n    if(this.checkStatus(STATUS.HUGGING)){\r\n      this.setStatus(STATUS.IDLE);\r\n    }\r\n  }\r\n\r\n\r\n  onHugEnemy(enemy){\r\n    // if(this.isAlive){\r\n      // this.setStatus(STATUS.HUG);\r\n      \r\n      // this.startRecoveryTimer(() => {\r\n      //   this.setStatus(STATUS.IDLE);\r\n      // }, 500);\r\n    // }\r\n  }\r\n\r\n  update(){\r\n    const intent = this.getIntentFromStateAndKeys();\r\n    if(intent !== this.lastIntent){\r\n      this.lastIntent = intent;\r\n      switch(intent){\r\n        case 'attacked': break; //too bad, youre being attacked\r\n        case 'moveUp': this.changeLane(-1); break;\r\n        case 'moveDown': this.changeLane(1); break;\r\n        case 'startKick': this.startKick(); break;\r\n        case 'releaseKick': this.kick(); break;\r\n        case 'startHug': this.startHug(); break;\r\n        case 'cancelHug': this.cancelHug(); break;\r\n        default: break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getIntentFromStateAndKeys(){\r\n    if(this.isAlive){\r\n      if(this.checkStatus(STATUS.ATTACKED)){\r\n        return 'attacked';\r\n      }\r\n      // moving up and down cancel most other events\r\n      if(gameState.cursors.up.isDown){\r\n        return 'moveUp';\r\n      }\r\n      if(gameState.cursors.down.isDown){\r\n        return 'moveDown';\r\n      }\r\n\r\n\r\n      // if chargin a kick, see if you let it go\r\n      if(this.checkStatus(STATUS.KICK_PREP)){\r\n        if(!gameState.cursors.right.isDown){\r\n          return 'releaseKick';\r\n        }\r\n      } else if(gameState.cursors.right.isDown){\r\n        return 'startKick';\r\n      }\r\n\r\n      // now hugggs\r\n      if(this.checkStatus(STATUS.HUGGING)){\r\n        if(!gameState.cursors.left.isDown){\r\n          return 'cancelHug';\r\n        }\r\n      } else if(gameState.cursors.left.isDown){\r\n        return 'startHug';\r\n      }\r\n\r\n      // no other keys mattered so..?\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  throttledUpdate(){\r\n    if(this.checkStatus(STATUS.KICK_PREP)){\r\n      this.chargeKick();\r\n    }\r\n  }\r\n\r\n\r\n  playAnimationForStatus(){\r\n    const animKey = animationStatus[this.status];\r\n    if(animKey){\r\n      this.anims.play(animKey);\r\n    }\r\n  }\r\n\r\n  setStatus(status, force, playStatusAnimation = true){\r\n    // console.log('setStatus', status);\r\n    if(force || this.status !== status){\r\n      if(this.status === STATUS.ATTACKED){\r\n        //- youre not attacked anymore, reset tint\r\n        this.setTint(0xffffff);\r\n      }\r\n      this.status = status;\r\n\r\n      switch(this.status){\r\n        case STATUS.IDLE: \r\n          break;\r\n        case STATUS.FEED: \r\n          break;\r\n        case STATUS.KICK_PREP: \r\n          break;\r\n        case STATUS.KICK: \r\n          break;\r\n        case STATUS.ATTACKED: \r\n          this.setTint(0xff0000);\r\n          break;\r\n        case STATUS.DEAD: \r\n          this.isAlive = false;\r\n          break;\r\n        default: break;\r\n      }\r\n      // console.log('status:', this.status)\r\n      const animKey = animationStatus[this.status];\r\n      if(animKey){\r\n        // console.log('animKey:', animKey)\r\n        this.anims.play(animKey);\r\n      }\r\n\r\n      if(playStatusAnimation) this.playAnimationForStatus();\r\n    }\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  sceneContext.anims.create({\r\n    key: 'player_idle',\r\n    frames: sceneContext.anims.generateFrameNumbers('player', { start: 0, end: 1 }),\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_hug',\r\n    frames: [ { key: 'player', frame: 2 }, { key: 'player', frame: 3 } ],\r\n    frameRate: 4,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_kick_prep',\r\n    frames: [ { key: 'player', frame: 6 } ],\r\n    frameRate: 5,\r\n    repeat: 0\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_kick',\r\n    frames: [ { key: 'player', frame: 7 } ],\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_hurt',\r\n    frames: sceneContext.anims.generateFrameNumbers('player', { start: 4, end: 5 }),\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n\r\n  \r\n  StatBar.initSprites(sceneContext);\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('player', './assets/entity-oldlady.png', { frameWidth: 64, frameHeight: 88 });\r\n\r\n  StatBar.initSpritesheet(sceneContext);\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\n\r\nconst NUM_CELLS = 7;\r\n\r\nconst OFFSET = {\r\n  x: 30,\r\n  y: -10\r\n};\r\n\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, x, y) {\r\n    super(scene, x, y, 'statBar');\r\n\r\n    this.progress = 0;\r\n    scene.add.existing(this);\r\n  }\r\n\r\n  update(){\r\n  }\r\n\r\n  setOffsetPosition(x, y){\r\n    this.setPosition(x + OFFSET.x, y + OFFSET.y);\r\n  }\r\n\r\n  playAnimationForProgress(){\r\n    const cellIdx = Math.floor(NUM_CELLS * this.progress);\r\n    this.anims.play(`statBar_${cellIdx}`);\r\n  }\r\n\r\n  setProgress(progress, force){\r\n    // console.log('setStatus', status);\r\n    if(force || this.progress !== progress){\r\n      this.progress = progress;\r\n\r\n      const cellIdx = Math.floor(7 * this.progress);\r\n      this.anims.play(`statBar_${cellIdx}`);\r\n    }\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  sceneContext.anims.create({\r\n    key: 'statBar_0',\r\n    frames: [ { key: 'statBar', frame: 0 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'statBar_1',\r\n    frames: [ { key: 'statBar', frame: 1 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'statBar_2',\r\n    frames: [ { key: 'statBar', frame: 2 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'statBar_3',\r\n    frames: [ { key: 'statBar', frame: 3 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'statBar_4',\r\n    frames: [ { key: 'statBar', frame: 4 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'statBar_5',\r\n    frames: [ { key: 'statBar', frame: 5 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'statBar_6',\r\n    frames: [ { key: 'statBar', frame: 6 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'statBar_7',\r\n    frames: [ { key: 'statBar', frame: 7 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'statBar_8',\r\n    frames: [ { key: 'statBar', frame: 8 } ],\r\n    frameRate: 0,\r\n    repeat: -1\r\n  });\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('statBar', './assets/statbar.png', { frameWidth: 45, frameHeight: 10 } )\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser'\r\nconst eventEmitter = new Phaser.Events.EventEmitter()\r\nexport default eventEmitter","import Phaser from \"phaser\";\r\nimport { spawnStatus } from \"../spawn\";\r\n\r\nconst DESTROY_TIMEOUT = 1000;\r\nconst DRAIN_TIMER_INTERVAL = 500;\r\nconst MAX_FEEDING = 1;\r\nlet sceneRef;\r\n\r\nexport const STATUS = {\r\n  FULL: 0,\r\n  EATING: 1,\r\n  EMPTY: 2\r\n}\r\n\r\nconst animationStatus = {\r\n  [STATUS.FULL]: 'foodBowl_full',\r\n  [STATUS.EATING]: 'foodBowl_full',\r\n  [STATUS.EMPTY]: 'foodBowl_empty'\r\n}\r\n\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n    constructor (scene, physicsGroup, spawnData) {\r\n    super(scene, spawnData.x, spawnData.y, 'foodBowl');\r\n    sceneRef = scene;\r\n\r\n    this.drainRate = 0;\r\n    this.drainStart = null;\r\n    this.drainTimer = null;\r\n    this.destroyTimer = null;\r\n\r\n    this.hpRange = [ 0, 100 ];\r\n    this.hp = this.hpRange[1];\r\n\r\n    this.feeding = [];\r\n    this.canBeEaten = true;\r\n\r\n    //- parent stuff\r\n    scene.add.existing(this);\r\n    if(!isNaN(spawnData.depth)) {\r\n      this.setDepth(spawnData.depth);\r\n    }\r\n    if(physicsGroup){\r\n      physicsGroup.add(this);\r\n    }else{\r\n      scene.physics.add.existing(this);\r\n    }\r\n\r\n    //- physics\r\n    this.setBounce(.4);\r\n    this.setCollideWorldBounds(true);\r\n    // this.allowGravity = false;\r\n    \r\n    this.body.setSize(36,15);\r\n    this.body.offset.y = -2;\r\n\r\n    this.setStatus(STATUS.FULL, true);\r\n  }\r\n\r\n  addToDrainRate(drainRate){\r\n    this.drainRate += drainRate;\r\n    // console.log(`addToDrainRate to ${this.drainRate}`);\r\n\r\n    this.startDrainTimer();\r\n  }\r\n\r\n  setDrainRate(drainRate){\r\n    console.log(`setDrainRate to ${this.drainRate}`);\r\n    this.drainRate = drainRate;\r\n\r\n    this.startDrainTimer();\r\n  }\r\n\r\n  startDrainTimer(){\r\n    this.drainTimer = sceneRef.time.delayedCall(DRAIN_TIMER_INTERVAL, () => {\r\n      this.onDrainTimer();\r\n    });\r\n\r\n    this.drainStart = new Date();\r\n  }\r\n\r\n  onDrainTimer(){\r\n    const secondsSinceDrainStart = (new Date() - this.drainStart) / 1000;\r\n    const drainAmount = secondsSinceDrainStart * this.drainRate;\r\n    this.hp = this.hp - drainAmount;\r\n    // console.log(`hp: ${this.hp}, drainRate: ${this.drainRate}, drainAmount: ${drainAmount}`);\r\n    if(this.hp <= this.hpRange[0]){\r\n      this.hp = this.hpRange[0];\r\n      this.emptyBowl();\r\n    }else{\r\n      if(this.hp > this.hpRange[1]){\r\n        this.hp = this.hpRange[1];\r\n      }\r\n      this.startDrainTimer();\r\n    }\r\n  }\r\n\r\n  emptyBowl(){\r\n    this.setStatus(STATUS.EMPTY);\r\n    this.destroyTimer = sceneRef.time.delayedCall(DESTROY_TIMEOUT, () => {\r\n      this.destroy();\r\n    });\r\n  }\r\n\r\n  eatenBy(enemyEntity){\r\n    if(this.feeding.indexOf(enemyEntity) === -1){\r\n      enemyEntity.body.velocity.x = 0;\r\n      //- new feeder\r\n      this.addToDrainRate(20);\r\n      this.feeding.push(enemyEntity);\r\n      if(this.feeding.length >= MAX_FEEDING){\r\n        this.canBeEaten = false;\r\n      }\r\n    }else{\r\n      // console.log('feeding with ', this.feeding.length);\r\n    }\r\n\r\n    if(this.status === STATUS.FULL){\r\n      this.setStatus(STATUS.EATING);\r\n    }\r\n  }\r\n\r\n  update(){\r\n  }\r\n\r\n  setStatus(status, force){\r\n    if(force || this.status !== status){\r\n      this.status = status;\r\n\r\n      switch(this.status){\r\n        case STATUS.FULL: \r\n          break;\r\n        case STATUS.EATING: \r\n          this.body.velocity.x = 0;\r\n          this.body.setDrag(500);\r\n\r\n          break;\r\n        case STATUS.EMPTY: \r\n          this.canBeEaten = false;\r\n          this.feeding.forEach(feeder => {\r\n            spawnStatus('tame', feeder.body.x, feeder.body.y, feeder.depth);\r\n            feeder.bowlEmpty();\r\n          })\r\n          break;\r\n        default:;\r\n      }\r\n      const animKey = animationStatus[this.status];\r\n      if(animKey){\r\n        // console.log('play', animKey);\r\n        this.anims.play(animKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  sceneContext.anims.create({\r\n    key: 'foodBowl_full',\r\n    frames: [ { key: 'foodBowl', frame: 0 } ],\r\n    frameRate: 10\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'foodBowl_empty',\r\n    frames: [ { key: 'foodBowl', frame: 1 } ],\r\n    frameRate: 10\r\n  });\r\n}\r\n\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('foodBowl', './assets/bowl.png', { frameWidth: 38, frameHeight: 22 });\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet\r\n}\r\nexport default exportMap; ","import Phaser, { Sound } from 'phaser';\r\n\r\nimport gameData from './data.json';\r\nimport { STATUS as STATUS_ENEMY } from './entities/raccoon';\r\nimport { STATUS as STATUS_PLAYER } from './entities/player';\r\nimport Events from '../event-emitter';\r\nimport SpawnController, { spawnStatus } from './spawn.js';\r\nimport LevelController from './level.js';\r\nimport { playSound, preload as preloadSound, init as initSound, SOUNDS } from './sound';\r\n\r\nlet game;\r\nlet levelGroups;\r\nlet sceneContext;\r\n\r\nconst INITIAL_STATE_POINTS = {\r\n  bowls: 0,\r\n  hugs: 0,\r\n  bites: 0,\r\n  captures: 0,\r\n  escapes: 0 \r\n}\r\nlet points = {};\r\n\r\nglobal.gameData = {\r\n  curLevel: 0\r\n}\r\n\r\nconst particleDefs = {\r\n  blood: {\r\n    image:'./assets/blood.png',\r\n    emitter:{\r\n      quantity: 20,\r\n      visible: false,\r\n      blendMode: 'SCREEN',\r\n      speed: { min: -400, max: 400 },\r\n      angle: { min: 210, max: 330 },\r\n      scale: { start: 1, end: 0 },\r\n      lifespan: 500,\r\n      gravityY: 1000\r\n    }\r\n  },\r\n  raccoon: {\r\n    atlas:'./assets/sprites/particle-raccoon',\r\n    sound: 'splat1',\r\n    emitter:{\r\n      quantity: 7,\r\n      frame: { frames: [ 'particle-raccoon0', 'particle-raccoon1', 'particle-raccoon2', 'particle-raccoon3', 'particle-raccoon4', 'particle-raccoon5', 'particle-raccoon6' ], cycle: true },\r\n      frequency:1,\r\n      visible: false,\r\n      speed: { min: 400, max: 600 },\r\n      angle: { min: 210, max: 330 },\r\n      scale: { start: 1.5, end: 2 },\r\n      lifespan: { min: 400, max: 800 },\r\n      gravityY: 2000\r\n    }\r\n  },\r\n  raccoon_mean: {\r\n    atlas:'./assets/sprites/particle-raccoon',\r\n    sound: 'splat1',\r\n    emitter:{\r\n      quantity: 7,\r\n      frame: { frames: [ 'particle-raccoon0', 'particle-raccoon1', 'particle-raccoon2', 'particle-raccoon3', 'particle-raccoon4', 'particle-raccoon5', 'particle-raccoon6' ], cycle: true },\r\n      frequency:1,\r\n      visible: false,\r\n      tint: 0xff0000,\r\n      speed: { min: 300, max: 500 },\r\n      angle: { min: 210, max: 330 },\r\n      scale: { start: .75, end: 1.1 },\r\n      lifespan: { min: 400, max: 800 },\r\n      gravityY: 2000\r\n    }\r\n  }\r\n}\r\nconst particles = {}\r\n/*\r\nclass AnimatedParticle extends Phaser.GameObjects.Particles.Particle\r\n{\r\n    constructor (emitter)\r\n    {\r\n        super(emitter);\r\n        this.frame = anim.frames\r\n\r\n        this.t = 0;\r\n        this.i = 0;\r\n    }\r\n\r\n    update (delta, step, processors)\r\n    {\r\n        var result = super.update(delta, step, processors);\r\n\r\n        this.t += delta;\r\n\r\n        if (this.t >= anim.msPerFrame)\r\n        {\r\n            this.i++;\r\n\r\n            if (this.i > 17)\r\n            {\r\n                this.i = 0;\r\n            }\r\n\r\n            this.frame = anim.frames[this.i].frame;\r\n            this.t -= anim.msPerFrame;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n*/\r\n\r\nexport const createGame = () =>{\r\n  console.log('GAME: createGame');\r\n  points = { ...INITIAL_STATE_POINTS };\r\n\r\n  const config = {\r\n    type: Phaser.AUTO,\r\n    scale: {\r\n      parent: 'game-container',\r\n      mode: Phaser.Scale.FIT,\r\n      autoCenter: Phaser.Scale.CENTER_BOTH,\r\n      width: 900,\r\n      height: 500,\r\n      min: {\r\n        width: 90,\r\n        height: 50\r\n      },\r\n      max: {\r\n        width: 1600,\r\n        height: 1200\r\n      },\r\n      zoom: 1,  // Size of game canvas = game size * zoom\r\n    },\r\n    autoRound: false,\r\n    physics: {\r\n      default: 'arcade',\r\n      arcade: {\r\n        gravity: { y: 800 },\r\n        debug: false\r\n      }\r\n    },\r\n    scene: {\r\n      preload: preload,\r\n      create: create,\r\n      update: update\r\n    }\r\n  };\r\n\r\n  game = new Phaser.Game(config);\r\n  global.game = game;\r\n  global.gameActive = true;\r\n}\r\n\r\nglobal.stopGame = () => {\r\n  // if not, hasnt been loaded yet\r\n  if(sceneContext){\r\n    global.gameActive = false;\r\n    sceneContext.scene.stop();\r\n  }\r\n}\r\n\r\nglobal.startGame = () => {\r\n  global.gameActive = true;\r\n  sceneContext.scene.start();\r\n}\r\n\r\nglobal.setLevel = (levelIdx) => {\r\n  global.stopGame();\r\n  global.gameData.curLevel = levelIdx;\r\n  global.startGame();\r\n}\r\n\r\nfunction setSceneContext(context){\r\n  sceneContext = context;\r\n  global.scene = sceneContext;\r\n  LevelController.setContext(context);\r\n  SpawnController.setContext(context);\r\n}\r\n\r\nfunction preload() {\r\n  setSceneContext(this);\r\n  initSound(this, game);\r\n  preloadSound();\r\n\r\n  // sounds/music\r\n  this.load.audioSprite('sfx', './assets/sfx/mixdown.json', [ 'assets/sfx/splat.ogg', 'assets/sfx/splat.mp3'] );\r\n  this.load.audioSprite('sfx_jab', './assets/sfx/jab.json', [ 'assets/sfx/jab.ogg', 'assets/sfx/jab.mp3'] );\r\n\r\n  // particle images\r\n  Object.keys(particleDefs).forEach(k => {\r\n    if(particleDefs[k].image){\r\n      this.load.image(`particle_${k}`, particleDefs[k].image);\r\n    } else if(particleDefs[k].atlas) {\r\n      this.load.atlas(`particle_${k}`, `${particleDefs[k].atlas}.png`, `${particleDefs[k].atlas}.json`);\r\n    }\r\n  });\r\n\r\n  LevelController.preload();\r\n  SpawnController.preload();\r\n}\r\n\r\nfunction getLevel() {\r\n  return gameData.levels[global.gameData.curLevel];\r\n}\r\n\r\nfunction getScene(){\r\n  const level = gameData.levels[global.gameData.curLevel];\r\n  return gameData.scenes[level.sceneKey];\r\n}\r\n\r\nfunction create() {\r\n  //- make the level\r\n  levelGroups = LevelController.create(getScene());\r\n  Events.on('interface', onInterface, this);\r\n  // var spritemap = this.cache.json.get('sfx').spritemap;\r\n\r\n  let spawnGroups = SpawnController.create(gameData.entities, getLevel(), getScene());\r\n\r\n  this.physics.add.collider(spawnGroups.enemies, levelGroups.platforms, null, collider_enemyAndPlatform, this);\r\n  this.physics.add.collider(spawnGroups.bowls, levelGroups.platforms);\r\n  this.physics.add.overlap(spawnGroups.enemies, spawnGroups.bowls, trigger_enemyAndBowl, null, this);\r\n  this.physics.add.overlap(spawnGroups.bowls, levelGroups.leftTrigger, trigger_itemAtStart, null, this);\r\n  this.physics.add.overlap(spawnGroups.enemies, levelGroups.rightTrigger, trigger_enemyAtEnd, null, this);\r\n  this.physics.add.overlap(spawnGroups.enemies, spawnGroups.player, trigger_enemyAndPlayer, null, this);\r\n\r\n  this.input.on('gameobjectdown', onObjectClicked);\r\n  this.input.keyboard.on('keydown', onKeyDown);\r\n\r\n  addParticles();\r\n}\r\nfunction update (){\r\n  SpawnController.update();\r\n}\r\n\r\nfunction onInterface(event, data){\r\n  global.gameInterface && global.gameInterface(event, data)\r\n}\r\n\r\nfunction trigger_enemyAtEnd(enemy, trigger){\r\n  switch(enemy.status){\r\n    case STATUS_ENEMY.ROAMING_TAME:\r\n      playSound(SOUNDS.ENEMY_CAPTURED);\r\n      spawnStatus('tame', enemy.body.x, enemy.body.y);\r\n      setPoints('captures', 1);\r\n      enemy.captured();\r\n      break;\r\n    case STATUS_ENEMY.ROAMING:\r\n      playSound(SOUNDS.ENEMY_ESCAPED);\r\n      spawnStatus('lost', enemy.body.x, enemy.body.y);\r\n      setPoints('escapes', 1);\r\n      enemy.escaped();\r\n      break;\r\n    default: break;\r\n  }\r\n}\r\n\r\nfunction trigger_itemAtStart(item, trigger){\r\n  spawnStatus('lost', item.body.x, item.body.y);\r\n  item.destroy();\r\n  setPoints('bowls', 1);\r\n  playSound(SOUNDS.BAD);\r\n}\r\n\r\nfunction trigger_enemyAndBowl(enemy, bowl){\r\n  if(enemy.canEat() && bowl.canBeEaten){\r\n    enemy.eatAtBowl(bowl.body);\r\n    bowl.eatenBy(enemy);\r\n    playSound(SOUNDS.ENEMY_EATING);\r\n  }\r\n}\r\n\r\nfunction collider_enemyAndPlatform(enemy, platform){\r\n  return true;\r\n}\r\n\r\nfunction trigger_enemyAndPlayer(enemy, player){\r\n  if(enemy.isAlive()){\r\n    // first off, is player is kicking, punt that thing\r\n    if(player.checkStatus(STATUS_PLAYER.KICK) && player.getKickStrength() > 0){\r\n      kickEnemy(player, enemy);\r\n    }else{\r\n    // otherwise, see if its good or bad\r\n      // get bitten by mean boys.\r\n      if(!enemy.isFull && !enemy.checkStatus(STATUS_ENEMY.BITING)){\r\n        playSound(SOUNDS.ENEMY_BITE);\r\n        spawnStatus('bite', enemy.body.x, enemy.body.y, enemy.depth);\r\n        bitePlayer(player, enemy);\r\n      }else{\r\n        // good raccoons get a bonus from a hug, dont hug more than once now\r\n        if(player.checkStatus(STATUS_PLAYER.HUGGING) && !enemy.checkStatus(STATUS_ENEMY.HUGGING)){\r\n          playSound(SOUNDS.HUG);\r\n          spawnStatus('hug', enemy.body.x, enemy.body.y, enemy.depth);\r\n          hugEnemy(player, enemy);\r\n        }\r\n        // already got your hug lil dude, move along\r\n      }\r\n    }\r\n  }\r\n\r\n  //- anything else, just walk on by\r\n}\r\n\r\nfunction kickEnemy(player, enemy){\r\n  const kickStrength = player.getKickStrength();\r\n  if(enemy.punt){\r\n    if(!enemy.punted){\r\n      const willKill = (kickStrength >= enemy.puntKillThreshold);\r\n      enemy.punt(kickStrength);\r\n      if(willKill){\r\n        playSound(SOUNDS.GOOD);\r\n        showParticle('blood', enemy.body.x, enemy.body.y);\r\n        if(enemy.particleDeath) showParticle(enemy.particleDeath,  enemy.body.x, enemy.body.y);\r\n        \r\n        enemy.kill(true);\r\n      }else{\r\n        // soft punt sound\r\n        const thudVolume = .3 * kickStrength\r\n        game.sound.playAudioSprite('sfx_jab', 'jab01', { volume: thudVolume });\r\n      }\r\n    }\r\n  }else{\r\n    showParticle('blood',  enemy.body.x, enemy.body.y);\r\n    if(enemy.particleDeath) showParticle(enemy.particleDeath,  enemy.body.x, enemy.body.y);\r\n    enemy.kill(true);\r\n  }\r\n}\r\n\r\nfunction hugEnemy(player, enemy){\r\n  enemy.hug();\r\n  player.onHugEnemy();\r\n  setPoints('hugs', 1);\r\n}\r\n\r\nfunction bitePlayer(player, enemy){\r\n  enemy.bite();\r\n  player.onAttackedByEnemy();\r\n  setPoints('bites', 1);\r\n}\r\n\r\nfunction onObjectClicked(pointer, gameObject){\r\n  if(gameObject.type === 'raccoon'){\r\n    if(gameObject.particleDeath) showParticle(gameObject.particleDeath,  pointer.worldX, pointer.worldY);\r\n    spawnStatus('lost', gameObject.body.x, gameObject.body.y);\r\n    gameObject.clicked();\r\n  }\r\n}\r\n\r\nfunction showParticle(type, x, y){\r\n  const pDef = particleDefs[type];\r\n  let config = pDef.emitter;\r\n\r\n  let pEmitter = particles[type].createEmitter(config);\r\n\r\n  pEmitter.setPosition(x, y);\r\n  pEmitter.explode();\r\n  pEmitter.visible = true;\r\n  if(pDef.sound){\r\n    game.sound.playAudioSprite('sfx', pDef.sound);\r\n  }\r\n}\r\n\r\nfunction addParticles(){\r\n  Object.keys(particleDefs).forEach(k => {\r\n    particles[k] = sceneContext.add.particles(`particle_${k}`);\r\n  });\r\n}\r\n\r\nconst onKeyDown = (e) => {\r\n  switch(e.code){\r\n    case 'Space': SpawnController.slingBowl();\r\n      break;\r\n    default: break;\r\n  }\r\n}\r\n\r\nconst setPoints = (key, change) => {\r\n  points[key] += change;\r\n\r\n  updateScoreboard(key, points[key]);\r\n}\r\n\r\nconst updateScoreboard = (key, value) => {\r\n  Events.emit('interface', 'setMetric', { 'key': key, 'value': value });\r\n}\r\n\r\n\r\nexport const externalCommand = (event, payload) => {\r\n  console.log('externalCommand:', event, payload);\r\n}\r\n\r\nexport const pauseGame = () => {\r\n  console.log('GAME: pauseGame');\r\n  sceneContext?.scene?.pause();\r\n}\r\n\r\nexport const resumeGame = () => {\r\n  console.log('GAME: resumeGame');\r\n  if(global.gameActive){\r\n    sceneContext?.scene?.resume();\r\n  }\r\n}\r\n\r\nexport const killGame = () => {\r\n  console.log('GAME: killGame');\r\n  if(global.gameActive){\r\n    global.stopGame();\r\n    game.destroy();\r\n    game = null;\r\n    sceneContext = null;\r\n    levelGroups = null;\r\n  }\r\n}","// slightly evolving from create-react-app example\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { RootState, AppThunk } from '../store';\r\n\r\nexport function fetchThing(amount = 1) {\r\n  return new Promise<{ data: number }>((resolve) =>\r\n    setTimeout(() => resolve({ data: amount }), 500)\r\n  );\r\n}\r\n\r\nexport interface UiState {\r\n  value: number;\r\n  status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: UiState = {\r\n  value: 0,\r\n  status: 'idle'\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const incrementAsync = createAsyncThunk(\r\n  'ui/fetchThing',\r\n  async (amount: number) => {\r\n    const response = await fetchThing(amount);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(incrementAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(incrementAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.value += action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = uiSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.ui.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const incrementIfOdd = (amount: number): AppThunk => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentValue = selectCount(getState());\r\n  if (currentValue % 2 === 1) {\r\n    dispatch(incrementByAmount(amount));\r\n  }\r\n};\r\n\r\nexport default uiSlice.reducer;\r\n","import { combineReducers } from 'redux'\r\nimport metricsReducer from './metrics-slice';\r\nimport statusReducer from './status-slice';\r\n\r\nexport default combineReducers({\r\n  metrics: metricsReducer,\r\n  status: statusReducer\r\n})","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport uiReducer from './ui/ui-slice';\r\nimport gameReducer from './game/reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    ui: uiReducer,\r\n    game: gameReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import Phaser from 'phaser';\r\nimport Values from '../utils/values';\r\n\r\nconst SPRITE_KEY = 'statuses';\r\n\r\n// ranges for how the status pops out\r\nconst rY = [ -200, -300 ];\r\nconst rX = [ -50, 50 ];\r\n\r\nconst DESTROY_TIMEOUT = 5000;\r\nconst OFFSET = {\r\n  x: 0,\r\n  y: 0\r\n};\r\n\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, x, y, statType, depth) {\r\n    super(scene, x, y, 'status');\r\n\r\n    this.statType = statType;\r\n\r\n    if(!depth){\r\n      depth = Values.zindex.FOREGROUND;\r\n    }\r\n    this.setDepth(depth + 1);\r\n    this.setOffsetPosition(x, y);\r\n    this.playAnimationForType();\r\n    scene.add.existing(this);\r\n    scene.physics.add.existing(this);\r\n    this.allowGravity = true;\r\n    this.setDrag(0);\r\n\r\n    const vX = Phaser.Math.Between(rX[0], rX[1]);\r\n    const vY = Phaser.Math.Between(rY[0], rY[1]);\r\n    this.setVelocity(vX, vY);\r\n\r\n    this.alpha = 1;\r\n    scene.tweens.add({\r\n      targets: this,\r\n      alpha: 0,\r\n      duration: 500,\r\n      delay: 300,\r\n      ease: 'Cubic',\r\n      repeat: 0\r\n    });\r\n\r\n    this.destroyTimer = scene.time.delayedCall(DESTROY_TIMEOUT, () => {\r\n      this.destroy();\r\n    });\r\n  }\r\n\r\n  setOffsetPosition(x, y){\r\n    this.setPosition(x + OFFSET.x, y + OFFSET.y);\r\n  }\r\n\r\n  playAnimationForType(){\r\n    this.anims.play(`status_${this.statType}`);\r\n  }\r\n\r\n  update(){\r\n  }\r\n}\r\n\r\n\r\nconst initSprites = (sceneContext) => {\r\n  sceneContext.anims.create({\r\n    key: 'status_bite',\r\n    frames: sceneContext.anims.generateFrameNumbers(SPRITE_KEY, { start: 0, end: 4 }),\r\n    frameRate: 12,\r\n    repeat: 0,\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'status_hug',\r\n    frames: sceneContext.anims.generateFrameNumbers(SPRITE_KEY, { start: 5, end: 9 }),\r\n    frameRate: 12,\r\n    repeat: 0,\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'status_lost',\r\n    frames: sceneContext.anims.generateFrameNumbers(SPRITE_KEY, { start: 10, end: 14 }),\r\n    frameRate: 12,\r\n    repeat: 0,\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'status_tame',\r\n    frames: sceneContext.anims.generateFrameNumbers(SPRITE_KEY, { start: 15, end: 19 }),\r\n    frameRate: 12,\r\n    repeat: 0,\r\n  });\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet(SPRITE_KEY, './assets/sprites/statuses.png', { frameWidth: 80, frameHeight: 50 } )\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Values from './utils/values';\r\n\r\nconst DEBUG_ALPHA = 0;\r\nconst TRIGGER_DIMS = {\r\n  width: 25,\r\n  height: 100\r\n};\r\n\r\nlet sceneContext;\r\n\r\nexport const setContext = (context) => {\r\n  sceneContext = context;\r\n}\r\n\r\nexport const preload = () => {\r\n  sceneContext.load.image('bg', './assets/levels/level-backyard-0.jpg');\r\n  sceneContext.load.image('lane1', './assets/levels/level-backyard-1.png');\r\n  sceneContext.load.image('lane2', './assets/levels/level-backyard-2.png');\r\n  sceneContext.load.image('lane3', './assets/levels/level-backyard-3.png');\r\n  sceneContext.load.image('fg', './assets/levels/level-backyard-4.png');\r\n  // sceneContext.load.image('fg-yard', './assets/yard-fg.png');\r\n  // sceneContext.load.image('lane4-yard', './assets/yard-lane4.png');\r\n}\r\n\r\nexport const create = (levelData) => {\r\n\r\n  const platforms = sceneContext.physics.add.staticGroup();\r\n  const leftTrigger = sceneContext.physics.add.staticGroup();\r\n  const rightTrigger = sceneContext.physics.add.staticGroup();\r\n  // sceneContext.make.sprite(50, 50, 'bg-yard');\r\n  \r\n  sceneContext.add.image(0, 0, 'bg').setOrigin(0).setScale(1).setDepth(Values.zindex.BACKGROUND);\r\n  sceneContext.add.image(0, 0, 'lane1').setOrigin(0).setScale(1).setDepth(Values.zindex.LANE_2);\r\n  sceneContext.add.image(0, 0, 'lane2').setOrigin(0).setScale(1).setDepth(Values.zindex.LANE_3);\r\n  sceneContext.add.image(0, 0, 'lane3').setOrigin(0).setScale(1).setDepth(Values.zindex.LANE_4);\r\n  sceneContext.add.image(0, 0, 'fg').setOrigin(0).setScale(1).setDepth(Values.zindex.FOREGROUND);\r\n  const GAME_WIDTH = 900;\r\n\r\n  levelData.lanes.forEach(pO => {\r\n    const triggerY = pO.y - TRIGGER_DIMS.height;\r\n    // lets animals keep walkin past trigger, otherwise keep it at pO.width\r\n    const platformWidth = GAME_WIDTH - pO.x;\r\n\r\n    platforms.create(pO.x, pO.y, 'platform-floor').setDisplaySize(platformWidth, pO.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n    leftTrigger.create(pO.x, triggerY, 'trigger-spawn').setDisplaySize(TRIGGER_DIMS.width, TRIGGER_DIMS.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n    rightTrigger.create(pO.x + pO.width - TRIGGER_DIMS.width, triggerY, 'trigger-end').setDisplaySize(TRIGGER_DIMS.width, TRIGGER_DIMS.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n  });\r\n\r\n  return {\r\n    platforms,\r\n    leftTrigger,\r\n    rightTrigger\r\n  }\r\n}\r\n\r\nconst exportMap = {\r\n  setContext,\r\n  preload,\r\n  create\r\n}\r\nexport default exportMap; ","import { setMetric } from '../../services/game/metrics-slice';\r\nimport { store } from '../../services/store';\r\n\r\nexport const createGameInterface = () => {\r\n  if(!(global as any).gameInterface){\r\n    (global as any).gameInterface = (event: string, payload: any) => {\r\n      switch(event){\r\n        case 'setMetric': \r\n          store.dispatch(setMetric(payload))\r\n          break;\r\n        default: console.error('invalid interface command', event);\r\n      }\r\n    }\r\n  }\r\n  return;\r\n}\r\n","import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline:0;\r\n    box-sizing:border-box;\r\n  }\r\n  #root{\r\n    margin:0 auto;\r\n  }\r\n  h1, h2, h3, h4{\r\n    font-family: 'Ranchers', cursive;\r\n  }\r\n  a, p, span, h5, h6{\r\n    font-family: 'Cabin', sans-serif;\r\n  }\r\n  h1{\r\n    font-size: 5rem;\r\n  }\r\n  h2{\r\n    font-size: 4rem;\r\n  }\r\n  h3{\r\n    font-size: 3.5rem;\r\n  }\r\n  h4{\r\n    font-size: 2.5rem;\r\n  }\r\n  h5{\r\n    font-size: 2rem;\r\n  }\r\n  p, span{\r\n    font-size:2rem;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-family: 'Cabin', sans-serif;\r\n    background-color: black;\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n  }\r\n`\r\n\r\n/*\r\nexport const mixinFontFamily = (style) => {\r\n  switch(style){\r\n    case 'details' : return css`font-family: 'Roboto', sans-serif`;\r\n    case 'display': return css`font-family: 'Bevan', cursive`;\r\n    default: return css`font-family: 'Roboto', sans-serif`;\r\n  }\r\n}\r\n*/\r\nexport const listColors = () => {\r\n  return Object.keys(store.colors);\r\n}\r\n\r\n\r\nexport const getColor = (colorId: tColor) => {\r\n  return store.colors[colorId] as CssString; \r\n}\r\n\r\nexport const getShadow = (shadowId: tShadow) => {\r\n  return store.shadows[shadowId] as CssString;\r\n}\r\n\r\nexport const getBreakpoint = (breakpointId: tBreakpoint) => {\r\n  return store.breakpoints[breakpointId] as CssString;\r\n}\r\n\r\ntype CssString = string;\r\n\r\ntype tShadow = 'z1' | 'z2' | 'z3';\r\nconst shadows = {\r\n  z1: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.16)',\r\n  z2: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.36)',\r\n  z3: '-.2rem .5rem 1rem .2rem rgba(0,0,0,.36)'\r\n}\r\ntype tColor = 'black' | 'white' | 'grey' | 'grey_light' | 'grey_dark' | 'pink' | 'brown' | 'brown_light' | 'brown_dark' | 'tan' | 'red' | 'green' | 'green_light';\r\nconst colors = {\r\n  black: '#000000',\r\n  white: '#FFFFFF',\r\n  grey: '#847E87',\r\n  grey_light: '#9BADB7',\r\n  grey_dark: '#222034',\r\n  pink: '#D77BBA',\r\n  brown: '#915539',\r\n  brown_light: '#D8A065',\r\n  brown_dark: '#663A31',\r\n  tan: '#EEC39A',\r\n  red: '#AE3232',\r\n  green: '#6BBE30',\r\n  green_light: '#99E54F'\r\n}\r\n\r\ntype tBreakpoint = 'mobile_tiny' | 'mobile_medium' | 'mobile_large' | 'tablet' | 'desktop';\r\nconst breakpoints = {\r\n  mobile_tiny: '300px',\r\n  mobile_medium: '400px',\r\n  mobile_large: '500px',\r\n  tablet: '768px',\r\n  desktop: '1024px'\r\n}\r\n\r\ntype ThemeStore = {\r\n  colors: typeof colors,\r\n  shadows: typeof shadows,\r\n  breakpoints: typeof breakpoints\r\n}\r\n\r\nexport const store: ThemeStore = {\r\n  colors: colors,\r\n  shadows: shadows,\r\n  breakpoints: breakpoints\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","export const evaluateExpression = (condition: StringCondition, criteria: number, value: number) => {\r\n  switch(condition){\r\n    case '=':\r\n      return value === criteria;\r\n    case '<':\r\n      return value < criteria;\r\n    case '<=':\r\n      return value <= criteria;\r\n    case '>':\r\n      return value > criteria;\r\n    case '>=':\r\n      return value >= criteria;\r\n    default: return false;\r\n  }\r\n}\r\n\r\nexport const checkMetricRules = (metricRules: Array<MetricRule>, stateMetrics: GameMetrics) => {\r\n  return metricRules.map(m => {\r\n    if(checkMetricRule(m, stateMetrics[m.metric])) return m.result;\r\n    return null;\r\n  }).filter(result => !!result) as Array<string>;\r\n}\r\n\r\nexport const checkMetricRule = (metricRule: MetricRule, stateValue: number) => {\r\n  return evaluateExpression(metricRule.condition, metricRule.value, stateValue)\r\n}\r\n\r\n\r\n\r\nexport const evaluateGameConditions = (gameConditions: Array<GameCondition>, results: Array<string>) => {\r\n  const resultObjs = [];\r\n  for(let i = 0; i < gameConditions.length; i++){\r\n    const passedCondition = evaluateGameCondition(gameConditions[i], results);\r\n    if(passedCondition){\r\n      resultObjs.push({\r\n        action: passedCondition.then,\r\n        reason: passedCondition.reason\r\n      });\r\n      if(passedCondition.halt){\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return resultObjs;\r\n}\r\n\r\nexport const evaluateGameCondition = (gameCondition: GameCondition, results: Array<string>) => {\r\n  for(let i = 0; i < gameCondition.when.length; i++){\r\n    if(!results.some(gc => gc === gameCondition.when[i])){\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return gameCondition;\r\n}","import { useEffect } from 'react';\r\nimport { selectMetricsMap } from '../../services/game/metrics-slice';\r\nimport { loseRound, winRound, selectPlayStatus } from '../../services/game/status-slice';\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport RulesJson from './rules.json';\r\nimport { checkMetricRules, evaluateGameConditions } from './rules-checker';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst getRulesObj = () => {\r\n  return RulesJson.TRAPPER as RulesDefinition;\r\n}\r\n\r\nexport function Brain() {\r\n  const dispatch = useDispatch();\r\n  const metrics = useAppSelector(selectMetricsMap);\r\n  const playStatus = useAppSelector(selectPlayStatus);\r\n\r\n  useEffect(() => {\r\n    // if game isnt running, no need to check win conditions\r\n    if(playStatus === 'playing'){\r\n      const rules = getRulesObj();\r\n      // get back a list of conditions based on rules, like \"you slang too many bowls!\"\r\n      const results = checkMetricRules(rules.metrics, metrics);\r\n  \r\n      const resultActions = evaluateGameConditions(rules.conditions, results);\r\n      resultActions.forEach(resultAction => {\r\n        switch(resultAction.action){\r\n          case 'LOSE': dispatch(loseRound(resultAction.reason)); break;\r\n          case 'WIN': dispatch(winRound(resultAction.reason)); break;\r\n          default: break;\r\n        }\r\n      })\r\n    }\r\n  }, [ metrics, playStatus, dispatch ])\r\n\r\n  return null;\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\nimport { Brain } from './brain';\r\n\r\nexport const ScPhaserContainer = styled.div`\r\n  position:relative;\r\n  width:100%;\r\n  height:100%;\r\n\r\n  overflow-y:hidden;\r\n`;\r\n\r\nexport const ScWrapper = styled.div`\r\n  >canvas{\r\n    border: 1rem solid ${getColor('brown')};\r\n  }\r\n`;\r\n\r\nexport function PhaserContainer() {\r\n  return (\r\n    <ScPhaserContainer>\r\n      <Brain />\r\n      <ScWrapper id=\"game-container\">\r\n      </ScWrapper>\r\n    </ScPhaserContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { MouseEventHandler } from 'hoist-non-react-statics/node_modules/@types/react';\r\n\r\nimport { getColor } from '../themes';\r\n\r\nexport const ScButton = styled.div`\r\n  display: inline-block;\r\n  padding: 2rem;\r\n  border: .5rem solid ${getColor('brown')};\r\n  border-radius: 1rem;\r\n  background-color: ${getColor('tan')};\r\n  width:auto;\r\n\r\n  cursor:pointer;\r\n  &:hover{\r\n    background-color: ${getColor('brown_light')};\r\n  }\r\n\r\n  span{\r\n    font-size:3rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\ninterface LBType {\r\n  onClick: MouseEventHandler,\r\n  text: string\r\n}\r\n\r\nexport function Button({ onClick, text }: LBType) {\r\n  return (\r\n    <ScButton onClick={onClick}><span>{text}</span></ScButton>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\r\n\r\nimport { getColor } from '../../themes';\r\nimport { Button } from '../button';\r\n\r\n\r\nexport const ScSplash = styled.div`\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  min-width: 25%;\r\n  min-height: 25%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 4rem;\r\n`;\r\n\r\nexport const ScBg = styled.div`\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:100%;\r\n  background-color: ${getColor('brown_dark')};\r\n  border: 1rem solid ${getColor('brown')};\r\n  border-radius: 5rem;\r\n\r\n  z-index:-1;\r\n`;\r\n\r\nexport const ScBody = styled.div`\r\n`;\r\nexport const ScTitle = styled.h1`\r\n  text-align:center;\r\n  font-size:8rem;\r\n  color: ${getColor('tan')};\r\n`;\r\nexport const ScButtons = styled.div`\r\n  margin-top:1rem;\r\n  text-align:center;\r\n\r\n\r\n`;\r\nconst ScLogo = styled.div`\r\n  background: center / contain no-repeat url('./assets/logo.png');\r\n  width: 60rem;\r\n  height: 40rem;\r\n  margin:-2rem;\r\n`;\r\n\r\n\r\nconst onGameClick = (navigate: NavigateFunction) => {\r\n  // dispatch(startGame())\r\n  navigate('/game');\r\n}\r\n\r\nexport function Splash() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <ScSplash>\r\n      <ScBody>\r\n        <ScLogo title=\"RACCOON TRAPPER\" />\r\n      </ScBody>\r\n      <ScButtons>\r\n        <Button onClick={(e) => onGameClick(navigate)} text={'NEW GAME'} />;\r\n      </ScButtons>\r\n      <ScBg />\r\n    </ScSplash>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useAppSelector } from '../../../services/hooks';\r\nimport { selectActiveEnemies } from '../../../services/game/metrics-slice';\r\nimport { external_setSpawnFrequency } from '../../../phaser/trapper/spawn';\r\n\r\nconst ScControls = styled.div`\r\n`;\r\n\r\nconst ScEnemies = styled.div`\r\n`;\r\n\r\nfunction Controls() {\r\n  const activeEnemies = useAppSelector(selectActiveEnemies);\r\n  const [ spawnSpeed, setSpawnSpeed ] = useState(20);\r\n\r\n  useEffect(() => {\r\n    external_setSpawnFrequency(spawnSpeed);\r\n  }, [ spawnSpeed ])\r\n\r\n  return (\r\n    <ScControls>\r\n  {/* <button className=\"level-button\" onClick=\"setLevel(0);\">Set Level 1</button>\r\n      <button className=\"level-button\" onClick=\"setLevel(1);\">Set Level 2</button> */}\r\n      <p>{'spawn speed'}</p>\r\n      \r\n      <input id=\"spawn-slider\" className=\"slider\" type=\"range\" min=\"0\" max=\"100\" value={spawnSpeed} onChange={e => setSpawnSpeed(+(e.target.value))}/>\r\n      <p>{`spawn rate: ${spawnSpeed}%`}</p>\r\n      <ScEnemies>\r\n        <span>{'Enemies:'}</span>\r\n        <span>{activeEnemies}</span>\r\n      </ScEnemies>\r\n    </ScControls>\r\n  )\r\n}\r\n\r\nexport default Controls;\r\n\r\n/*\r\n<div className=\"control-group\">\r\n<p>Spawn speed</p>\r\n<input id=\"spawn-slider\" className=\"slider\" type=\"range\" min=\"0\" max=\"100\" value=\"20\" onChange={() => {}}/>\r\n<span id=\"spawn-display\">20%</span>\r\n<div id=\"spawn-counter\"><span>Spawned:</span><span id=\"spawn-count\">0</span></div>\r\n</div>\r\n*/","import styled, { css } from 'styled-components';\r\n\r\nimport { useAppSelector } from '../../../services/hooks';\r\nimport { getColor } from '../../../themes';\r\nimport { selectGoodMetrics, selectScore, selectBadMetrics } from '../../../services/game/metrics-slice';\r\n\r\ntype StatsProps = {\r\n  statType: StatType;\r\n}\r\n\r\ntype StatType = 'good' | 'bad' | 'neutral'\r\n\r\nconst ScStats = styled.div`\r\n  position:absolute;\r\n  bottom:0;\r\n  left:0;\r\n  width:100%;\r\n  background-color: ${getColor('brown')};\r\n\r\n  color: ${getColor('white')};\r\n  padding: 1rem;\r\n  text-align:center;\r\n\r\n  >h4{\r\n    text-align:left;\r\n  }\r\n`;\r\n\r\nconst ScStatGroup = styled.div<StatsProps>`\r\n  vertical-align:top;\r\n  text-align:right;\r\n  display:inline-block;\r\n  width:calc(50% - .5rem);\r\n  margin-top:1rem;\r\n  padding:.5rem;\r\n  color: ${getColor('grey_dark')};\r\n\r\n  ${p => p.statType === 'good' && css`\r\n    background-color:${getColor('green')};\r\n  `}\r\n  ${p => p.statType === 'bad' && css`\r\n    background-color:${getColor('pink')};\r\n    margin-left:1rem;\r\n  `}\r\n\r\n  h4{\r\n    text-align:center;\r\n  }\r\n`;\r\n\r\nconst ScStat = styled.div`\r\n  display:block;\r\n`\r\n\r\nconst ScDebug = styled.div`\r\n  display:inline-block;\r\n  height:100%;\r\n  width:100%;\r\n  \r\n  span { font-size: 3rem; }\r\n  font-weight: bold;\r\n  text-align:right;\r\n  color: white;\r\n`\r\n\r\nexport function DebugStats() {\r\n  const goodStats = useAppSelector(selectGoodMetrics);\r\n  const badStats = useAppSelector(selectBadMetrics);\r\n  const score = useAppSelector(selectScore);\r\n\r\n  return (\r\n    <ScStats>\r\n      <h4>{'Debug and score'}</h4>\r\n      <ScStatGroup statType={'good'}>\r\n        <h4>{'Good Stuff'}</h4>\r\n        {goodStats.map((s, idx) => (\r\n          <ScStat key={idx} >\r\n            <span>{`${s.key}:`}</span><span>{s.value}</span>\r\n          </ScStat>\r\n        ))}\r\n      </ScStatGroup>\r\n      <ScStatGroup statType={'bad'}>\r\n        <h4>{'Bad Stuff'}</h4>\r\n        {badStats.map((s, idx) => (\r\n          <ScStat key={idx} >\r\n            <span>{`${s.key}:`}</span><span>{s.value}</span>\r\n          </ScStat>\r\n        ))}\r\n      </ScStatGroup>\r\n      <ScDebug>\r\n        <span>{'Score:'}</span>\r\n        <span>{score}</span>\r\n      </ScDebug>\r\n    </ScStats>\r\n  )\r\n}","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { getColor } from '../../themes/';\r\nimport Controls from './components/controls';\r\nimport { DebugStats } from './components/debugstats';\r\n\r\nconst ScSidebar = styled.div`\r\n  position:fixed;\r\n  top:0;\r\n  left:0;\r\n  transition:left .5s ease-in-out;\r\n\r\n  width:40rem;\r\n  height:100%;\r\n  margin:0;\r\n  color:${getColor('tan')};\r\n  z-index:1;\r\n\r\n  &.collapsed{\r\n    left:-40rem;\r\n    transition:left .5s ease-in-out;\r\n  }\r\n\r\n  >.link-button{\r\n    color:white;\r\n    display:inline-block;\r\n    vertical-align:middle;\r\n    margin:0rem 1.8rem;\r\n    margin-top:1.5rem;\r\n    transition:color .5s ease-in;\r\n    color:${getColor('tan')};\r\n    \r\n    h4{\r\n      font-size:2.5rem;\r\n    }\r\n    &:hover{\r\n      color: ${getColor('green_light')};\r\n      transition:color .2s ease-out;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ScBg = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  right:0;\r\n  top:0;\r\n  bottom:0;\r\n  z-index:-1;\r\n  \r\n  background-color: ${getColor('brown_dark')};\r\n  border-right: .5rem solid ${getColor('brown')};\r\n`\r\n\r\nconst ScBody = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  height:100%;\r\n`\r\n\r\n\r\nconst ScBottom = styled.div`\r\n  flex-grow:1;\r\n  overflow-y:auto;\r\n  padding:1rem;\r\n`\r\n\r\nconst ScTop = styled.div`\r\n  min-height:20rem;\r\n  position:relative;\r\n  cursor:pointer;\r\n  border-bottom:.5rem solid ${getColor('brown')};\r\n  padding:1rem;\r\n  padding-right:10rem;\r\n`\r\n\r\nconst ScLogo = styled.div`\r\n  background: center / contain no-repeat url('./assets/logo.gif');\r\n  position:absolute;\r\n  left:100%;\r\n  top:0;\r\n  width:30rem;\r\n  height:20rem;\r\n  z-index:1;\r\n\r\n  -webkit-filter: drop-shadow(.5rem .5rem .5rem ${getColor('grey_dark')});\r\n  filter: drop-shadow(.5rem .5rem .5rem ${getColor('grey_dark')});\r\n\r\n  &:hover{\r\n    -webkit-filter: drop-shadow(1rem 1rem 1rem ${getColor('tan')});\r\n    filter: drop-shadow(1rem 1rem 1rem ${getColor('tan')});\r\n  }\r\n`;\r\n\r\nconst ScLink = styled(Link)`\r\n  color:${getColor('tan')};\r\n  text-align:center;\r\n  font-size:2rem;\r\n\r\n  &:hover{\r\n    color:white;\r\n  }\r\n`\r\n\r\nconst ScHelp = styled.div`\r\n  li{\r\n    font-size:1.5rem;\r\n    margin-left:1rem;\r\n  }\r\n`\r\n\r\nconst ScSideImage = styled.div`\r\nbackground: center / contain no-repeat url('./assets/raccoon-on-branch.gif');\r\n  position:absolute;\r\n  left:100%;\r\n  width:20rem;\r\n  height:50rem;\r\n  -webkit-filter: drop-shadow(.5rem .5rem .5rem ${getColor('grey_dark')});\r\n  filter: drop-shadow(.5rem .5rem .5rem ${getColor('grey_dark')});\r\n\r\n  &:hover{\r\n    -webkit-filter: drop-shadow(1rem 1rem 1rem ${getColor('tan')});\r\n    filter: drop-shadow(1rem 1rem 1rem ${getColor('tan')});\r\n  }\r\n  top:0;\r\n  margin-left:-12rem;\r\n`\r\n\r\n\r\nconst HelpList = () => {\r\n  const controls = [\r\n    'Arrow Up/Down: Change lanes',\r\n    'Arrow Left: Hug',\r\n    'Arrow Right: Charge kick',\r\n    'Space: Throw food'\r\n  ];\r\n\r\n  const rules = [\r\n    'Don\\'t let feral raccoons in your house!',\r\n    '>>> 3 escapes loses the game',\r\n    'Feed the feral raccoons to tame them!',\r\n    'Give tame raccoons a nice hug to show them you care',\r\n    '>>> 3 hugs wins the game',\r\n    'Don\\'t even think about hugging feral raccoons',\r\n    '>>> If you get bit once, you lose!',\r\n    'Kick any raccoon you want',\r\n  ]\r\n  return (\r\n    <ScHelp>\r\n      <h4>{'Controls'}</h4>\r\n      <ul>\r\n        {controls.map((i, idx) => (\r\n          <li key={idx}>{i}</li>\r\n        ))}\r\n      </ul>\r\n      <h4>{'Rules'}</h4>\r\n      <ul>\r\n        {rules.map((i, idx) => (\r\n          <li key={idx}>{i}</li>\r\n        ))}\r\n      </ul>\r\n    </ScHelp>\r\n  )\r\n}\r\n\r\nfunction Sidebar() {\r\n  const [ collapsed, setCollapsed ] = useState(true);\r\n\r\n  return (\r\n    <ScSidebar className={ collapsed ? 'collapsed' : ''} >\r\n      <ScBody>\r\n        <ScTop>\r\n          <ScLogo onClick={() => setCollapsed(!collapsed)} /> \r\n          <ScSideImage onClick={() => setCollapsed(!collapsed)} />\r\n          <HelpList />\r\n          <ScLink to={'/'} >\r\n            {'back to main menu'}\r\n          </ScLink>\r\n        </ScTop>\r\n        <ScBottom>\r\n          <hr/>\r\n          <Controls/>\r\n          <hr/>\r\n          <DebugStats/>\r\n        </ScBottom>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScSidebar>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { getColor } from '../../../themes';\r\n\r\nexport const ScModal = styled.div`\r\n`\r\n\r\nexport const ScBody = styled.div`\r\n`\r\n\r\nexport const ScBg = styled.div`\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:100%;\r\n  background-color: ${getColor('brown_dark')};\r\n  border: 1rem solid ${getColor('brown')};\r\n  border-radius: 5rem;\r\n\r\n  z-index:-1;\r\n`;\r\n\r\nconst ScLink = styled(Link)`\r\n  color:${getColor('tan')};\r\n  text-align:center;\r\n  font-size:2rem;\r\n\r\n  &:hover{\r\n    color:white;\r\n  }\r\n`\r\n\r\ntype ModalProps = {\r\n  reason: string\r\n};\r\nfunction WonModal({ reason }: ModalProps){\r\n  return (\r\n    <ScModal>\r\n      <ScBody>\r\n        <h3>{'YOU WON!'}</h3>\r\n        <p>{reason}</p>\r\n        <ScLink to={'/'} >\r\n          {'back to main menu'}\r\n        </ScLink>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScModal>\r\n  )\r\n}\r\n\r\nfunction LostModal({ reason }: ModalProps){\r\n  return (\r\n    <ScModal>\r\n      <ScBody>\r\n        <h3>{'YOU LOST!'}</h3>\r\n        <p>{reason}</p>\r\n        <ScLink to={'/'} >\r\n          {'back to main menu'}\r\n        </ScLink>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScModal>\r\n  )\r\n}\r\n\r\nfunction PausedModal({ reason }: ModalProps){\r\n  return (\r\n    <ScModal>\r\n      <ScBody>\r\n        <h3>{'YOU PAUSED!'}</h3>\r\n        <p>{reason}</p>\r\n        <ScLink to={'/'} >\r\n          {'back to main menu'}\r\n        </ScLink>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScModal>\r\n  )\r\n}\r\n\r\ntype MultiModalProps = {\r\n  playStatusObj: PlayStatusObj\r\n};\r\nexport function MultiModal({ playStatusObj }: MultiModalProps){\r\n  switch(playStatusObj.status){\r\n    case 'won': return (<WonModal reason={playStatusObj.reason} />)\r\n    case 'lost': return (<LostModal reason={playStatusObj.reason} />)\r\n    case 'paused': return (<PausedModal reason={playStatusObj.reason} />)\r\n    default: break;\r\n  }\r\n  \r\n  return null;\r\n}","import styled from 'styled-components';\r\n\r\nimport { ReselectModalFromGameStatus } from '../../services/game/status-slice';\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport { MultiModal } from './components/modals';\r\n\r\nexport const ScModals = styled.div`\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  min-width: 25%;\r\n  min-height: 25%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 4rem;\r\n\r\n  z-index:1;\r\n`;\r\n\r\nexport function Modals() {\r\n  const playStatusObj = useAppSelector(ReselectModalFromGameStatus);\r\n  if(!playStatusObj) return null;\r\n\r\n  return (\r\n    <ScModals>\r\n      <MultiModal playStatusObj={playStatusObj} />\r\n    </ScModals>\r\n  )\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { useEffect, useState } from 'react';\r\nimport useSound from 'use-sound';\r\n\r\nconst ScMusic = styled.div`\r\n  position:fixed;\r\n  top:0;\r\n  right:0;\r\n  z-index:1;\r\n`\r\n\r\nexport function Music() {\r\n  const [playing, setPlaying] = useState(false);\r\n  const [play, { stop }] = useSound('./assets/sfx/trapper.ogg');\r\n\r\n  useEffect(() => {\r\n    if(playing){\r\n      play();\r\n    }else{\r\n      stop();\r\n    }\r\n  }, [ playing ])\r\n\r\n  return (\r\n    <ScMusic>\r\n      <button onClick={() => setPlaying(!playing)}>\r\n        {playing ? 'Stop background music' : 'Play background music'}\r\n      </button>\r\n    </ScMusic>\r\n  )\r\n}","import { useEffect } from 'react';\r\nimport { HashRouter, Route, Routes, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { PhaserContainer } from '../components/game/phaser-container';\r\nimport { Splash } from '../components/ui/splash';\r\nimport { useAppDispatch, useAppSelector } from '../services/hooks';\r\nimport { startGame, exitGame, selectGameStatus, selectPlayStatus } from '../services/game/status-slice';\r\nimport Sidebar from '../components/ui/sidebar';\r\nimport { createGame, killGame, resumeGame, pauseGame } from '../phaser/trapper';\r\nimport { getColor } from '../themes';\r\nimport { createGameInterface } from '../components/game/game-interface';\r\nimport { Modals } from '../components/ui/modals';\r\nimport { Music } from '../components/ui/components/music';\r\n\r\nexport const ScStage = styled.div`\r\n  position:absolute;\r\n  left:0rem;\r\n  top:0rem;\r\n  right:0rem;\r\n  bottom:0rem;\r\n  background-color:${getColor('brown_dark')};\r\n`\r\n\r\nexport const RouteReader = ({ dispatch }: any) => {\r\n  let location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    if(location.pathname.indexOf('game') > -1){\r\n      dispatch(startGame());\r\n    }else{\r\n      dispatch(exitGame())\r\n    }\r\n  }, [ location, dispatch ]);\r\n\r\n  return null;\r\n}\r\n\r\nfunction App() {\r\n  const gameStatus = useAppSelector(selectGameStatus);\r\n  const playStatus = useAppSelector(selectPlayStatus);\r\n  const dispatch = useAppDispatch();\r\n  \r\n  // only need to do this once, hence the []\r\n  useEffect(() => {createGameInterface();}, [])\r\n  \r\n  const pages = [\r\n    {\r\n      route: '',\r\n      text: 'SPLASH',\r\n      element: <Splash />\r\n    },\r\n    {\r\n      route: '/game',\r\n      text: 'RACCOON TRAPPER',\r\n      element: <PhaserContainer />\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if(playStatus === 'playing'){\r\n      resumeGame();\r\n    }else if(['won', 'lost', 'paused'].some(s => s === playStatus)){\r\n      pauseGame();\r\n    }\r\n  }, [ playStatus ]);\r\n\r\n  useEffect(() => {\r\n    if(gameStatus === 'active'){\r\n      createGame();\r\n    }else{\r\n      killGame();\r\n    }\r\n  }, [ gameStatus ]);\r\n  \r\n  return (\r\n    <HashRouter>\r\n      <RouteReader dispatch={dispatch}/>\r\n      <Sidebar />\r\n      <Modals />\r\n      <Music />\r\n      <ScStage>\r\n        <Routes>\r\n          {pages.map((p, i) => (\r\n            <Route key={i} path={p.route} element={p.element} />\r\n          ))}\r\n        </Routes>\r\n      </ScStage>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\nimport { store } from './services/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport './themes/fonts.css';\r\nimport GlobalStyle from './themes/';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n      <GlobalStyle />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}