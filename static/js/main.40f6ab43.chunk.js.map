{"version":3,"sources":["themes/index.ts","app/hooks.ts","components/ui/ui-slice.ts","components/ui/stats-slice.ts","phaser/trapper/utils/values.js","phaser/trapper/entities/raccoon-simple.js","phaser/trapper/entities/player.js","phaser/trapper/spawn.js","phaser/event-emitter.js","phaser/trapper/entities/bowl.js","phaser/trapper/entities/stat-bar.js","phaser/trapper/level.js","phaser/trapper/index.js","components/phasercontainer/index.tsx","components/button.tsx","components/ui/splash.tsx","components/ui/components/stats.tsx","components/ui/components/controls.tsx","components/ui/sidebar.tsx","app.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["createGlobalStyle","getColor","colorId","store","colors","black","white","grey","grey_light","grey_dark","pink","brown","brown_light","brown_dark","brown_beige","red","green","green_light","shadows","z1","z2","z3","breakpoints","mobile_tiny","mobile_medium","mobile_large","tablet","desktop","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchThing","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","uiSlice","createSlice","name","initialState","value","status","gameStatus","reducers","startGame","state","exitGame","increment","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectGameStatus","ui","scoreModifiers","bowls","hugs","bites","captures","escapes","statsSlice","total","score","activeEnemies","setStat","key","undefined","console","error","getScore","stats","Object","keys","forEach","k","selectStats","map","filter","s","selectScore","selectActiveEnemies","Values","zindex","BACKGROUND","LANE_1","LANE_2","LANE_3","LANE_4","FOREGROUND","getDepthOfLane","laneIdx","offset","idx","isNaN","e","STATUS","ROAMING","EATING","ROAMING_TAME","DEAD","HUGGING","IDLE","ROAMING_ANGRY","CAPTURED","ESCAPED","spriteKey","velocityRanges","LIL_PUNT","min","x","y","max","diff","BIG_PUNT","exportMap","Entity","scene","physicsGroup","spawnData","isFull","eatOffset","curPhysState","curAnimState","puntKillThreshold","misc","feedable","depth","setDepth","add","existing","physics","setBounce","setCollideWorldBounds","allowGravity","body","setSize","setStatus","setInteractive","tint","setTint","on","thing","kill","this","isAlive","touching","down","velocity","force","vRange","setDrag","setVelocity","global","destroy","flipX","animKey","getAnimationForState","curAnim","playAnimationForKey","adjustMovementForState","given","isMovingStatus","moveStop","bowlBody","log","anims","play","statusKey","modifier","speed","moveNormal","resumeStatus","delayedDestroy","Phaser","Physics","Arcade","Sprite","initSprites","sceneContext","create","frames","frame","frameRate","repeat","generateFrameNumbers","start","end","initSpritesheet","load","spritesheet","frameWidth","frameHeight","statBar","FEED","KICK_PREP","KICK","ATTACKED","animationStatus","gameState","laneData","hpRange","hp","laneValues","parseLaneData","posOffset","spriteOffset","lastIntent","kickCharge","setOrigin","refreshBody","setScale","updatePlayerPosition","cursors","input","keyboard","createCursorKeys","StatBar","changeLane","lane","parseInt","width","maxIdx","length","pos","realPos","setPosition","setOffsetPosition","cancelKick","setLaneDepth","callback","timeout","killRecoveryTimer","recoveryTimer","window","clearTimeout","statusKeys","indexOf","enemy","startRecoveryTimer","setProgress","checkStatuses","getModifiedKickCharge","checkStatus","intent","getIntentFromStateAndKeys","startKick","kick","startHug","cancelHug","up","isDown","right","left","chargeKick","playStatusAnimation","playAnimationForStatus","player","lastSentActiveEnemies","spawnFrequency","curTicker","spawnPositions","defGlobalEntities","defEnemyEntities","defLaneSpawns","groups","entityTypes","Raccoon","rollForSpawns","laneSpawnData","spawnCommands","enemies","Math","random","rate","push","type","getSpawnCommands","spawnCount","sData","eData","spawnIt","throttledUpdate","throttle","gameActive","updateSpawnCount","children","each","entity","EntityRef","entityData","statsObj","Between","jumpRate","randomScale","scaleRange","spawnPlayer","Player","countActive","Events","emit","external_setSpawnFrequency","newValue","sliderPosition","minV","scale","round","exp","formatSliderValue","setContext","context","preload","Bowl","globalEntities","levelData","sceneData","lanes","pO","l","spawns","group","staticGroup","update","spawn","anim","item","spawnBowl","bowl","spawnSpeed","slingBowl","eventEmitter","EventEmitter","drainRate","drainStart","drainTimer","feeding","canBeEaten","startDrainTimer","Date","killDrainTimer","onDrainTimer","drainAmount","emptyBowl","enemyEntity","addToDrainRate","feeder","bowlEmpty","OFFSET","progress","cellIdx","floor","TRIGGER_DIMS","image","platforms","leftTrigger","rightTrigger","triggerY","platformWidth","setDisplaySize","height","setAlpha","game","levelGroups","emitter","points","gameData","curLevel","killGame","stopGame","createGame","config","AUTO","parent","default","arcade","gravity","debug","Game","audioSprite","LevelController","SpawnController","getScene","level","levels","scenes","sceneKey","onInterface","spawnGroups","entities","collider","collider_enemyAndPlatform","overlap","trigger_enemyAndBowl","trigger_itemAtStart","trigger_enemyAtEnd","trigger_enemyAndPlayer","onObjectClicked","onKeyDown","particles","createEmitter","visible","blendMode","angle","lifespan","gravityY","setupMouseEmitter","event","gameInterface","trigger","STATUS_ENEMY","setPoints","captured","escaped","canEat","eatAtBowl","eatenBy","platform","STATUS_PLAYER","hug","onHugEnemy","onAttackedByEnemy","getKickStrength","punt","showBlood","pointer","gameObject","worldX","worldY","explode","sound","playAudioSprite","stop","setLevel","levelIdx","code","change","updateScoreboard","Container","styled","div","PhaserContainer","dispatch","useEffect","createGameInterface","id","ScButton","Button","onClick","text","ScSplash","ScBg","ScBody","ScTitle","h1","ScButtons","Splash","navigate","useNavigate","onGameClick","ScStats","ScStat","ScScore","Stats","ScControls","ScEnemies","Controls","useState","setSpawnSpeed","className","onChange","target","ScHeader","ScTab","ScTop","ScBottom","ScLink","Link","ScHelp","HelpList","i","Header","pages","collapsed","setCollapsed","location","useLocation","pathname","to","ScStage","RouteReader","App","route","element","p","path","configureStore","reducer","uiReducer","statsReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.40f6ab43.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline:0;\r\n    box-sizing:border-box;\r\n  }\r\n  #root{\r\n    margin:0 auto;\r\n  }\r\n  h1, h2, h3, h4{\r\n    font-family: 'Ranchers', cursive;\r\n  }\r\n  a, p, span, h5, h6{\r\n    font-family: 'Cabin', sans-serif;\r\n  }\r\n  h1{\r\n    font-size: 5rem;\r\n  }\r\n  h2{\r\n    font-size: 4rem;\r\n  }\r\n  h3{\r\n    font-size: 3.5rem;\r\n  }\r\n  h4{\r\n    font-size: 2.5rem;\r\n  }\r\n  h5{\r\n    font-size: 2rem;\r\n  }\r\n  p, span{\r\n    font-size:2rem;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-family: 'Cabin', sans-serif;\r\n    background-color: black;\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n  }\r\n`\r\n\r\n/*\r\nexport const mixinFontFamily = (style) => {\r\n  switch(style){\r\n    case 'details' : return css`font-family: 'Roboto', sans-serif`;\r\n    case 'display': return css`font-family: 'Bevan', cursive`;\r\n    default: return css`font-family: 'Roboto', sans-serif`;\r\n  }\r\n}\r\n*/\r\nexport const listColors = () => {\r\n  return Object.keys(store.colors);\r\n}\r\n\r\n\r\nexport const getColor = (colorId: tColor) => {\r\n  return store.colors[colorId] as CssString; \r\n}\r\n\r\nexport const getShadow = (shadowId: tShadow) => {\r\n  return store.shadows[shadowId] as CssString;\r\n}\r\n\r\nexport const getBreakpoint = (breakpointId: tBreakpoint) => {\r\n  return store.breakpoints[breakpointId] as CssString;\r\n}\r\n\r\ntype CssString = string;\r\n\r\ntype tShadow = 'z1' | 'z2' | 'z3';\r\nconst shadows = {\r\n  z1: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.16)',\r\n  z2: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.36)',\r\n  z3: '-.2rem .5rem 1rem .2rem rgba(0,0,0,.36)'\r\n}\r\ntype tColor = 'black' | 'white' | 'grey' | 'grey_light' | 'grey_dark' | 'pink' | 'brown' | 'brown_light' | 'brown_dark' | 'brown_beige' | 'red' | 'green' | 'green_light';\r\nconst colors = {\r\n  black: '#000000',\r\n  white: '#FFFFFF',\r\n  grey: '#847E87',\r\n  grey_light: '#9BADB7',\r\n  grey_dark: '#222034',\r\n  pink: '#D77BBA',\r\n  brown: '#915539',\r\n  brown_light: '#D8A065',\r\n  brown_dark: '#663A31',\r\n  brown_beige: '#EEC39A',\r\n  red: '#AE3232',\r\n  green: '#6BBE30',\r\n  green_light: '#99E54F'\r\n}\r\n\r\ntype tBreakpoint = 'mobile_tiny' | 'mobile_medium' | 'mobile_large' | 'tablet' | 'desktop';\r\nconst breakpoints = {\r\n  mobile_tiny: '300px',\r\n  mobile_medium: '400px',\r\n  mobile_large: '500px',\r\n  tablet: '768px',\r\n  desktop: '1024px'\r\n}\r\n\r\ntype ThemeStore = {\r\n  colors: typeof colors,\r\n  shadows: typeof shadows,\r\n  breakpoints: typeof breakpoints\r\n}\r\n\r\nexport const store: ThemeStore = {\r\n  colors: colors,\r\n  shadows: shadows,\r\n  breakpoints: breakpoints\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","// slightly evolving from create-react-app example\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState, AppThunk } from '../../app/store';\n\nexport function fetchThing(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n\nexport interface UiState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n  gameStatus: boolean;\n}\n\nconst initialState: UiState = {\n  value: 0,\n  status: 'idle',\n  gameStatus: false\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'ui/fetchThing',\n  async (amount: number) => {\n    const response = await fetchThing(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    startGame: state => {\n      state.gameStatus = true;\n    },\n    exitGame: state => {\n      state.gameStatus = false;\n    },\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { startGame, exitGame, increment, decrement, incrementByAmount } = uiSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.ui.value;\nexport const selectGameStatus = (state: RootState) => state.ui.gameStatus;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default uiSlice.reducer;\n","// slightly evolving from create-react-app example\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from '../../app/store';\n\n\nexport interface StatsState {\n  bowls: number,\n  hugs: number,\n  bites: number,\n  total: number,\n  captures: number,\n  escapes: number,\n  score: number,\n  activeEnemies: number\n}\n\nconst initialState: StatsState = {\n  bowls: 0,\n  hugs: 0,\n  bites: 0,\n  total: 0,\n  captures: 0,\n  escapes: 0,\n  score: 0,\n  activeEnemies: 0\n};\n\nconst scoreModifiers = {\n  bowls: -.25,\n  hugs: 5,\n  bites: -10,\n  captures: 10,\n  escapes: -5\n};\n\nexport const statsSlice = createSlice({\n  name: 'stats',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setStat: (state, action: PayloadAction<any>) => {\n      const key = action.payload?.key;\n      if(state[key] !== undefined){\n        state[key] = action.payload?.value;\n      }else{\n        console.error('invalid stat called in reducer:', action.payload.key)\n      }\n\n      state.score = getScore(state);\n    }\n  }\n});\n\nexport const getScore = stats => {\n  let total = 0;\n  Object.keys(stats).forEach(k => {\n    // ignore 'score' or other unwanted values\n    if(scoreModifiers[k]){\n      total += stats[k] * scoreModifiers[k];\n    }\n  })\n\n  return total;\n}\n\nexport const { setStat } = statsSlice.actions;\nexport const selectStats = (state: RootState) => {\n  return Object.keys(state.stats).map(k => ({\n    key: k,\n    value: state.stats[k]\n  })).filter(s => scoreModifiers[s.key] !== undefined);\n};\nexport const selectScore = (state: RootState) => state.stats.score;\nexport const selectActiveEnemies = (state: RootState) => state.stats.activeEnemies;\nexport default statsSlice.reducer;\n","\r\nexport const Values = {\r\n  zindex:{\r\n    BACKGROUND: 0,\r\n    LANE_1: 10,\r\n    LANE_2: 20,\r\n    LANE_3: 30,\r\n    LANE_4: 40,\r\n    FOREGROUND: 50\r\n  }\r\n}\r\n\r\n\r\nexport const getDepthOfLane = (laneIdx, offset = 0) => {\r\n  try{\r\n    const idx = Values.zindex[`LANE_${laneIdx + 1}`] + offset;\r\n    if(!isNaN(idx)) return idx;\r\n  }catch(e){\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport default Values;","import Phaser from 'phaser';\r\n\r\nconst KILL_TIMEOUT = 5000;\r\n\r\nexport const STATUS = {\r\n  ROAMING: 0,\r\n  EATING: 1,\r\n  ROAMING_TAME: 3,\r\n  DEAD: 4,\r\n  HUGGING: 5,\r\n  IDLE: 6,\r\n  ROAMING_ANGRY: 11,\r\n  CAPTURED: 12,\r\n  ESCAPED: 13\r\n}\r\n\r\nconst spriteKey = 'raccoon';\r\nconst velocityRanges = {\r\n  LIL_PUNT: {\r\n    min: { x: -75, y: -50 },\r\n    max: { x: -200, y: -200 },\r\n    diff: { x: 0, y: 0 }\r\n  },\r\n  BIG_PUNT: {\r\n    min: { x: -500, y: -300 },\r\n    max: { x: -700, y: -500 },\r\n    diff: { x: 0, y: 0 }\r\n  }\r\n}\r\n\r\nvelocityRanges.LIL_PUNT.diff = {\r\n  x: velocityRanges.LIL_PUNT.max.x - velocityRanges.LIL_PUNT.min.x,\r\n  y: velocityRanges.LIL_PUNT.max.y - velocityRanges.LIL_PUNT.min.y\r\n};\r\nvelocityRanges.BIG_PUNT.diff = {\r\n  x: velocityRanges.BIG_PUNT.max.x - velocityRanges.BIG_PUNT.min.x,\r\n  y: velocityRanges.BIG_PUNT.max.y - velocityRanges.BIG_PUNT.min.y\r\n};\r\n\r\n/*\r\nstats = {\r\n  speed: [ minSpeedX, maxSpeedX ]\r\n}\r\n*/\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, physicsGroup, spawnData) {\r\n    super(scene, spawnData.x, spawnData.y, 'raccoon');\r\n\r\n    // this.status = STATUS.ROAMING;\r\n    // this.love = 0;\r\n    // this.maxLove = 100;\r\n    this.stats = spawnData.stats || {};\r\n    this.status = null;\r\n    this.isFull = false;\r\n\r\n    // move bowl to the right, relative to entity\r\n    this.eatOffset = 11;\r\n\r\n    this.curPhysState = null;\r\n    this.curAnimState = null;\r\n\r\n    this.puntKillThreshold = 1;\r\n    if(spawnData.misc?.puntKillThreshold || spawnData.misc?.puntKillThreshold === 0){\r\n      this.puntKillThreshold = spawnData.misc.puntKillThreshold;\r\n    }\r\n\r\n    this.feedable = true;\r\n    if(spawnData.misc?.feedable === false){\r\n      this.feedable = false;\r\n    }\r\n\r\n    //- parent stuff\r\n    if(!isNaN(spawnData.depth)) {\r\n      this.setDepth(spawnData.depth);\r\n    }\r\n    scene.add.existing(this);\r\n    if(physicsGroup){\r\n      physicsGroup.add(this);\r\n    }else{\r\n      scene.physics.add.existing(this);\r\n    }\r\n    \r\n    //- physics\r\n    this.setBounce(0);\r\n    this.setCollideWorldBounds(false);\r\n    this.allowGravity = false;\r\n\r\n    //- squeeze in hit box from edge of sprite\r\n    this.body.setSize(30,20);\r\n    this.body.offset.x = 15;\r\n    this.body.offset.y = 25;\r\n    this.setStatus(STATUS.ROAMING, true);\r\n\r\n    //- interaction listeners\r\n    this.setInteractive();\r\n    if(spawnData.misc?.tint){\r\n      this.setTint(spawnData.misc.tint);\r\n    }\r\n    this.on('pointerdown', (thing) => {\r\n      this.kill();\r\n    });\r\n  }\r\n\r\n  canEat(){\r\n    if(this.isAlive() && this.feedable && !this.isFull){\r\n      switch(this.status){\r\n        case STATUS.EATING: return false;\r\n        default: return true;\r\n      }\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  canIdle(){\r\n    if(this.isAlive() && this.body.touching.down && this.body.velocity.x === 0){\r\n      switch(this.status){\r\n        case STATUS.ROAMING: return true;\r\n        case STATUS.IDLE: return true;\r\n        default: return false;\r\n      }\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // right now, its a %, later should be actual power\r\n  punt(force){\r\n    // console.log('force', force)\r\n    this.body.setDrag(0);\r\n\r\n    let vRange;\r\n    if(force < .5){\r\n      vRange = velocityRanges.LIL_PUNT;\r\n    }else{\r\n      vRange = velocityRanges.BIG_PUNT;\r\n    }\r\n\r\n    // console.log('vRange', vRange.min.x + vRange.diff.x * force)\r\n    this.setVelocity(\r\n      vRange.min.x + vRange.diff.x * force,\r\n      vRange.min.y + vRange.diff.y * force,\r\n    );\r\n\r\n    if(force >= this.puntKillThreshold){\r\n      this.kill();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  kill(){\r\n    this.setStatus(STATUS.DEAD);\r\n\r\n    global.setTimeout(() => {\r\n      this.destroy();\r\n    }, KILL_TIMEOUT)\r\n  }\r\n\r\n  update(){\r\n    //- turn if facing left\r\n    if(this.isAlive() && this.flipX){\r\n      if(this.body.velocity.x >= 0) this.flipX = false;\r\n    }else{\r\n      if(this.body.velocity.x < 0) this.flipX = true;\r\n    }\r\n\r\n    const animKey = this.getAnimationForState();\r\n    if(animKey !== this.curAnim){\r\n      this.curAnim = animKey;\r\n      this.playAnimationForKey(animKey);\r\n    }\r\n    \r\n    this.adjustMovementForState();\r\n  }\r\n\r\n  isAlive(){\r\n    return this.status !== STATUS.DEAD;\r\n  }\r\n\r\n  isMovingStatus(given){\r\n    switch (given || this.status){\r\n      case STATUS.ROAMING: return true;\r\n      case STATUS.ROAMING_ANGRY: return true;\r\n      case STATUS.ROAMING_TAME: return true;\r\n      default: break;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  adjustMovementForState(){\r\n    if(this.body.velocity.x < 1 && this.body.velocity.x > -1){\r\n      //- if still, but in a moving status (most likely after falling), force it again to get movin!\r\n      if(this.isMovingStatus(this.status)){\r\n        this.setStatus(this.status, true);\r\n      };\r\n    }\r\n\r\n    //- attempt to readjust after landing from a punt\r\n    if(this.body.touching.down && this.body.velocity.x < 0){\r\n      this.moveStop();\r\n    }\r\n  }\r\n\r\n  getAnimationForState(){\r\n    if(this.status === STATUS.DEAD){\r\n      return 'raccoon_dead';\r\n    } else {\r\n      if (this.body.velocity.y < -50) {\r\n        return 'raccoon_hop_up';\r\n      } else if (this.body.velocity.y > 50) {\r\n        return 'raccoon_hop_down';\r\n      } else if (this.status === STATUS.EATING){\r\n        return 'raccoon_eat';\r\n      } else if (this.status === STATUS.ROAMING_TAME){\r\n        return 'raccoon_loveWalk';\r\n      } else if (this.status === STATUS.ROAMING_ANGRY){\r\n        return 'raccoon_angryWalk';\r\n      } else if (this.status === STATUS.ROAMING){\r\n        return 'raccoon_walk';\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  setPhysState(){\r\n    const physState = null;\r\n\r\n\r\n    if(physState && physState !== this.curPhysState){\r\n\r\n    }\r\n  }\r\n\r\n  throttledUpdate(){\r\n\r\n  }\r\n  \r\n  eatAtBowl(bowlBody){\r\n    // align with the food bowl\r\n    this.body.x = bowlBody.x - this.eatOffset;\r\n\r\n    this.setStatus(STATUS.EATING);\r\n  }\r\n\r\n  bowlEmpty(){\r\n    if(this.isAlive()){\r\n      console.log('fromBowlEmpty')\r\n      this.isFull = true;\r\n      this.setStatus(STATUS.ROAMING_TAME);\r\n    }\r\n  }\r\n\r\n  playAnimationForKey(animKey){\r\n    if(animKey){\r\n      this.anims.play(animKey);\r\n    }\r\n  }\r\n\r\n  checkStatus(statusKey){\r\n    return this.status === statusKey;\r\n  }\r\n\r\n  moveNormal(modifier = 1){\r\n    this.body.setDrag(0);\r\n    // this.body.velocity.x = 10; \r\n    this.body.velocity.x = this.stats.speed * modifier;\r\n  }\r\n\r\n  moveStop(){\r\n    this.body.setDrag(500);\r\n  }\r\n\r\n\r\n  setStatus(status, force, playStatusAnimation = true){\r\n    if(force || this.status !== status){\r\n      this.status = status;\r\n\r\n      switch(this.status){\r\n        case STATUS.ROAMING: \r\n          this.moveNormal();\r\n          break;\r\n        case STATUS.ROAMING_TAME: \r\n          this.moveNormal(3);\r\n          break;\r\n        case STATUS.EATING: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.DEAD:\r\n          this.moveStop();\r\n          break;\r\n        case STATUS.HUGGING: \r\n          this.moveStop();\r\n          break;\r\n        case STATUS.CAPTURED: \r\n          this.moveStop();\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // assumeStatus(){\r\n  //   if(this.isAlive()){\r\n  //     if(this.isFull){\r\n  //       return STATUS.ROAMING_TAME;\r\n  //     }else{\r\n  //       if(this.canIdle()){\r\n  //         return STATUS.IDLE;\r\n  //       }else{\r\n  //         return STATUS.ROAMING;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  resumeStatus(){\r\n    const statusKey = this.resumeStatus;\r\n    this.setStatus(statusKey)\r\n  }\r\n\r\n  escaped(){\r\n    this.setStatus(STATUS.ESCAPED);\r\n    this.delayedDestroy();\r\n  }\r\n\r\n  captured(){\r\n    this.setStatus(STATUS.CAPTURED);\r\n    this.delayedDestroy();\r\n  }\r\n  \r\n  hug(){\r\n    this.setStatus(STATUS.HUGGING);\r\n    this.delayedDestroy();\r\n  }\r\n\r\n  delayedDestroy(){\r\n    global.setTimeout(() => {\r\n      this.destroy();\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_idle',\r\n    frames: [ \r\n      { key: spriteKey, frame: 0 },  \r\n      { key: spriteKey, frame: 1 } \r\n    ],\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_walk',\r\n    frames: [ \r\n      { key: spriteKey, frame: 2 },  \r\n      { key: spriteKey, frame: 3 } \r\n    ],\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_start',\r\n    frames: [ { key: spriteKey, frame: 4 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_up',\r\n    frames: [ { key: spriteKey, frame: 5 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_down',\r\n    frames: [ { key: spriteKey, frame: 6 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hop_end',\r\n    frames: [ { key: spriteKey, frame: 7 } ],\r\n    frameRate: 7,\r\n    repeat: 0\r\n  });\r\n  \r\n  sceneContext.anims.create({\r\n    key: 'raccoon_angryWalk',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 2, end: 3 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_loveWalk',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 10, end: 11 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_dead',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 14, end: 15 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_eat',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 8, end: 9 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_hug',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 12, end: 13 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n\r\n  sceneContext.anims.create({\r\n    key: 'raccoon_punted',\r\n    frames: sceneContext.anims.generateFrameNumbers(spriteKey, { start: 2, end: 3 }),\r\n    frameRate: 7,\r\n    repeat: -1\r\n  });\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('raccoon', './assets/raccoon.png', { frameWidth: 56, frameHeight: 56 });\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\nimport { getDepthOfLane } from '../utils/values';\r\nimport StatBar from './stat-bar';\r\n\r\nconst STARTING_LANE = 2;\r\nconst KICK_DURATION = 500; // becomes variable based on kick power\r\nconst ATTACKED_DURATION = 1000;\r\nconst KILLED_DURATION = 5000;\r\n\r\nconst MIN_KICK_FORCE = .3;\r\n\r\nlet statBar;\r\n\r\nexport const STATUS = {\r\n  IDLE: 0,\r\n  FEED: 1,\r\n  HUGGING: 2,\r\n  KICK_PREP: 3,\r\n  KICK: 4,\r\n  ATTACKED: 5,\r\n  DEAD: 6\r\n}\r\n\r\nconst animationStatus = {\r\n  [STATUS.IDLE]: 'player_idle',\r\n  [STATUS.FEED]: 'player_idle',\r\n  [STATUS.HUGGING]: 'player_hug',\r\n  [STATUS.KICK_PREP]: 'player_kick_prep',\r\n  [STATUS.KICK]: 'player_kick',\r\n  [STATUS.ATTACKED]: 'player_hurt',\r\n  [STATUS.DEAD]: 'player_idle'\r\n}\r\n\r\nconst gameState = {};\r\n\r\nclass Entity extends Phaser.Physics.Arcade.Sprite {\r\n  constructor (scene, x, y, physicsGroup, laneData) {\r\n    super(scene, x, y, 'player');\r\n\r\n    this.hpRange = [ 0, 100 ];\r\n    this.hp = this.hpRange[1];\r\n    this.laneIdx = 0;\r\n    this.laneValues = this.parseLaneData(laneData);\r\n    this.posOffset = [];\r\n    this.spriteOffset = [];\r\n    this.lastIntent = null;\r\n\r\n    this.isAlive = true;\r\n    this.kickCharge = 0;\r\n\r\n    //- parent stuff\r\n    scene.add.existing(this);\r\n    if(physicsGroup){\r\n      physicsGroup.add(this);\r\n    }else{\r\n      scene.physics.add.existing(this);\r\n    }\r\n\r\n    /* tweak settings here when sprite changes size */\r\n    this.setOrigin(0, 0).refreshBody();\r\n    // this.body.setSize(50, 75);\r\n    // this.posOffset = [ 0, 20 ];\r\n    /* normal phaser way isnt working, so pass this along to offset the sprite a lil */\r\n    // this.spriteOffset = [ 12, 6 ];\r\n\r\n    this.body.setSize(60, 100);\r\n    this.posOffset = [ -80, 4 ];\r\n    this.spriteOffset = [ 12, 6 ];\r\n    this.setScale(1.3);\r\n\r\n    this.updatePlayerPosition();\r\n    this.setStatus(STATUS.IDLE, true);\r\n    \r\n    gameState.cursors = scene.input.keyboard.createCursorKeys();\r\n    \r\n    statBar = new StatBar.Entity(scene, 150, 150);\r\n    this.changeLane(STARTING_LANE);\r\n  }\r\n\r\n  setLaneDepth(){\r\n    this.setDepth(getDepthOfLane(this.laneIdx) - 1);\r\n  }\r\n\r\n  parseLaneData(laneData){\r\n    return laneData.map(lane => ({\r\n      x: parseInt(lane.x) + parseInt(lane.width) - 10,\r\n      y: parseInt(lane.y) - 110\r\n    }));\r\n  }\r\n  \r\n  changeLane(diff){\r\n    this.laneIdx += diff;\r\n    const maxIdx = this.laneValues.length - 1;\r\n    if(this.laneIdx > maxIdx){\r\n      this.laneIdx = 0;\r\n    }else if(this.laneIdx < 0){\r\n      this.laneIdx = maxIdx;\r\n    }\r\n\r\n\r\n    this.updatePlayerPosition();\r\n  }\r\n\r\n  updatePlayerPosition(){\r\n    const pos = this.laneValues[this.laneIdx];\r\n    const realPos = {\r\n      x: pos.x + this.posOffset[0],\r\n      y: pos.y + this.posOffset[1],\r\n    }\r\n    this.body.x = realPos.x + this.spriteOffset[0];\r\n    this.body.y = realPos.y + this.spriteOffset[1];\r\n    this.setPosition(realPos.x, realPos.y);\r\n    statBar && statBar.setOffsetPosition(realPos.x, realPos.y);\r\n\r\n    // OK to cancel a kick animation, not OK to cancel a charge\r\n    if(this.status === STATUS.KICK){\r\n      this.cancelKick();\r\n    }\r\n    \r\n    this.setLaneDepth();\r\n  }\r\n\r\n  startRecoveryTimer(callback, timeout){\r\n    this.killRecoveryTimer();\r\n    this.recoveryTimer = window.setTimeout(() => {\r\n      this.recoveryTimer = null;\r\n      callback();\r\n    }, timeout);\r\n  }\r\n\r\n  killRecoveryTimer(){\r\n    if(this.recoveryTimer);\r\n    window.clearTimeout(this.recoveryTimer);\r\n    this.recoveryTimer = null;\r\n  }\r\n\r\n  checkStatus(statusKey){\r\n    // console.log('check', statusKey, this.status, STATUS[statusKey])\r\n    return this.status === statusKey;\r\n  }\r\n  checkStatuses(statusKeys){\r\n    return statusKeys.indexOf(this.status) > -1;\r\n  }\r\n  \r\n  onAttackedByEnemy(enemy){\r\n    // console.log('hurt')\r\n    this.setStatus(STATUS.ATTACKED);\r\n\r\n    this.startRecoveryTimer(() => {\r\n      this.setStatus(STATUS.IDLE);\r\n    }, ATTACKED_DURATION);\r\n  }\r\n  \r\n  kill(){\r\n    this.setStatus(STATUS.DEAD);\r\n\r\n    global.setTimeout(() => {\r\n      this.destroy();\r\n    }, KILLED_DURATION)\r\n  }\r\n\r\n  chargeKick(){\r\n    this.kickCharge += .1;\r\n    if(this.kickCharge > 1){\r\n      this.kickCharge = 1;\r\n    }\r\n\r\n    statBar.setProgress(this.kickCharge);\r\n  }\r\n\r\n  startKick(){\r\n    if(!this.checkStatuses([STATUS.KICK, STATUS.KICK_PREP])){\r\n      this.setStatus(STATUS.KICK_PREP);\r\n    }\r\n  }\r\n\r\n  // helps to give a minimum kick strength, helps for tapping kick and not getting 0 strength\r\n  // normalizes 0-1 between [ MIN_KICK_FORCE, 1 ]\r\n  getModifiedKickCharge(){\r\n    return MIN_KICK_FORCE + (this.kickCharge * (1 - MIN_KICK_FORCE));\r\n  }\r\n\r\n  kick(){\r\n    this.setStatus(STATUS.KICK);\r\n    // console.log('KICK: ', this.kickCharge);\r\n\r\n    this.startRecoveryTimer(() => {\r\n      this.cancelKick();\r\n    }, this.getModifiedKickCharge() * KICK_DURATION);\r\n  }\r\n\r\n  cancelKick(){\r\n    this.killRecoveryTimer();\r\n    this.kickCharge = 0;\r\n    statBar.setProgress(this.kickCharge);\r\n    this.setStatus(STATUS.IDLE);\r\n  }\r\n\r\n  //- eventually this should be % charge * stats\r\n  getKickStrength(){\r\n    return this.getModifiedKickCharge();\r\n  }\r\n\r\n\r\n  startHug(){\r\n    if(!this.checkStatus(STATUS.HUGGING)){\r\n      this.setStatus(STATUS.HUGGING);\r\n    }\r\n  }\r\n  cancelHug(){\r\n    if(this.checkStatus(STATUS.HUGGING)){\r\n      this.setStatus(STATUS.IDLE);\r\n    }\r\n  }\r\n\r\n\r\n  onHugEnemy(enemy){\r\n    // if(this.isAlive){\r\n      // this.setStatus(STATUS.HUG);\r\n      \r\n      // this.startRecoveryTimer(() => {\r\n      //   this.setStatus(STATUS.IDLE);\r\n      // }, 500);\r\n    // }\r\n  }\r\n\r\n  update(){\r\n    const intent = this.getIntentFromStateAndKeys();\r\n    if(intent !== this.lastIntent){\r\n      this.lastIntent = intent;\r\n      switch(intent){\r\n        case 'attacked': break; //too bad, youre being attacked\r\n        case 'moveUp': this.changeLane(-1); break;\r\n        case 'moveDown': this.changeLane(1); break;\r\n        case 'startKick': this.startKick(); break;\r\n        case 'releaseKick': this.kick(); break;\r\n        case 'startHug': this.startHug(); break;\r\n        case 'cancelHug': this.cancelHug(); break;\r\n        default: break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getIntentFromStateAndKeys(){\r\n    if(this.isAlive){\r\n      if(this.checkStatus(STATUS.ATTACKED)){\r\n        return 'attacked';\r\n      }\r\n      // moving up and down cancel most other events\r\n      if(gameState.cursors.up.isDown){\r\n        return 'moveUp';\r\n      }\r\n      if(gameState.cursors.down.isDown){\r\n        return 'moveDown';\r\n      }\r\n\r\n\r\n      // if chargin a kick, see if you let it go\r\n      if(this.checkStatus(STATUS.KICK_PREP)){\r\n        if(!gameState.cursors.right.isDown){\r\n          return 'releaseKick';\r\n        }\r\n      } else if(gameState.cursors.right.isDown){\r\n        return 'startKick';\r\n      }\r\n\r\n      // now hugggs\r\n      if(this.checkStatus(STATUS.HUGGING)){\r\n        if(!gameState.cursors.left.isDown){\r\n          return 'cancelHug';\r\n        }\r\n      } else if(gameState.cursors.left.isDown){\r\n        return 'startHug';\r\n      }\r\n\r\n      // no other keys mattered so..?\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  throttledUpdate(){\r\n    if(this.checkStatus(STATUS.KICK_PREP)){\r\n      this.chargeKick();\r\n    }\r\n  }\r\n\r\n\r\n  playAnimationForStatus(){\r\n    const animKey = animationStatus[this.status];\r\n    if(animKey){\r\n      this.anims.play(animKey);\r\n    }\r\n  }\r\n\r\n  setStatus(status, force, playStatusAnimation = true){\r\n    // console.log('setStatus', status);\r\n    if(force || this.status !== status){\r\n      if(this.status === STATUS.ATTACKED){\r\n        //- youre not attacked anymore, reset tint\r\n        this.setTint(0xffffff);\r\n      }\r\n      this.status = status;\r\n\r\n      switch(this.status){\r\n        case STATUS.IDLE: \r\n          break;\r\n        case STATUS.FEED: \r\n          break;\r\n        case STATUS.KICK_PREP: \r\n          break;\r\n        case STATUS.KICK: \r\n          break;\r\n        case STATUS.ATTACKED: \r\n          this.setTint(0xff0000);\r\n          break;\r\n        case STATUS.DEAD: \r\n          this.isAlive = false;\r\n          break;\r\n        default: break;\r\n      }\r\n      // console.log('status:', this.status)\r\n      const animKey = animationStatus[this.status];\r\n      if(animKey){\r\n        // console.log('animKey:', animKey)\r\n        this.anims.play(animKey);\r\n      }\r\n\r\n      if(playStatusAnimation) this.playAnimationForStatus();\r\n    }\r\n  }\r\n}\r\n\r\nconst initSprites = (sceneContext) => {\r\n  sceneContext.anims.create({\r\n    key: 'player_idle',\r\n    frames: sceneContext.anims.generateFrameNumbers('player', { start: 0, end: 1 }),\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_hug',\r\n    frames: [ { key: 'player', frame: 2 }, { key: 'player', frame: 3 } ],\r\n    frameRate: 4,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_kick_prep',\r\n    frames: [ { key: 'player', frame: 6 } ],\r\n    frameRate: 5,\r\n    repeat: 0\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_kick',\r\n    frames: [ { key: 'player', frame: 7 } ],\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n  sceneContext.anims.create({\r\n    key: 'player_hurt',\r\n    frames: sceneContext.anims.generateFrameNumbers('player', { start: 4, end: 5 }),\r\n    frameRate: 5,\r\n    repeat: -1\r\n  });\r\n\r\n  \r\n  StatBar.initSprites(sceneContext);\r\n}\r\n\r\nconst initSpritesheet = (sceneContext) => {\r\n  sceneContext.load.spritesheet('player', './assets/entity-oldlady.png', { frameWidth: 64, frameHeight: 88 });\r\n\r\n  StatBar.initSpritesheet(sceneContext);\r\n}\r\n\r\nconst exportMap = {\r\n  Entity,\r\n  initSprites,\r\n  initSpritesheet,\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\n\r\nimport Raccoon from './entities/raccoon-simple.js';\r\nimport Player from './entities/player.js';\r\nimport Bowl from './entities/bowl.js';\r\nimport { getDepthOfLane } from './utils/values';\r\nimport { throttle } from 'throttle-debounce';\r\nimport Events from '../event-emitter';\r\n\r\nconst THROTTLE_SPEED = 150;\r\nconst SPAWN_MIN = 1000;\r\nconst SPAWN_MAX = 1;\r\nconst SPAWN_LIMIT = -1;\r\n\r\nlet spawnCount = 0;\r\nlet lastSentActiveEnemies = 0;\r\nlet spawnFrequency = null; // how often to roll dice for spawns\r\nlet curTicker = 0;\r\nlet spawnPositions = [];\r\nlet defGlobalEntities = {};\r\nlet defEnemyEntities = [];\r\nlet defLaneSpawns = [];\r\n\r\nconst groups = {};\r\nlet player;\r\nlet sceneContext;\r\n\r\nconst entityTypes = {\r\n  'raccoon': Raccoon.Entity\r\n}\r\n\r\n\r\nexport const setContext = (context) => {\r\n  sceneContext = context;\r\n}\r\n\r\nexport const preload = () => {\r\n  Raccoon.initSpritesheet(sceneContext);\r\n  Player.initSpritesheet(sceneContext);\r\n  Bowl.initSpritesheet(sceneContext);\r\n}\r\n\r\nexport const create = (globalEntities, levelData, sceneData) => {\r\n  spawnPositions = sceneData.lanes.map(pO => ({\r\n    x: parseInt(pO.x),\r\n    y: parseInt(pO.y) - 50\r\n  }));\r\n  defGlobalEntities = globalEntities.misc;\r\n  defEnemyEntities = globalEntities.enemies;\r\n  defLaneSpawns = levelData.lanes.map(l => l.spawns);\r\n\r\n  //- container for bad boyz\r\n  groups.enemies = sceneContext.physics.add.group();\r\n  groups.bowls = sceneContext.physics.add.group();\r\n  groups.player = sceneContext.physics.add.staticGroup();\r\n\r\n  Player.initSprites(sceneContext);\r\n  Bowl.initSprites(sceneContext);\r\n  Raccoon.initSprites(sceneContext);\r\n\r\n  spawnPlayer(sceneData.lanes);\r\n  return groups;\r\n}\r\n\r\n// from the supplied data and random rolls, get a list of entites to spawn, and the lanes they should spawn in\r\nexport const getSpawnCommands = laneSpawnData => {\r\n  let enemies = [];\r\n  laneSpawnData.forEach((lane, idx) => {\r\n    lane.forEach(enemy => {\r\n      if(Math.random() < enemy.rate){\r\n        enemies.push({ \r\n          type: enemy.type, \r\n          laneIdx: idx \r\n        });\r\n      }\r\n    })\r\n  });\r\n\r\n  return enemies;\r\n}\r\n\r\nexport const rollForSpawns = laneSpawnData => {\r\n  const spawnCommands = getSpawnCommands(laneSpawnData);\r\n  let spawnCount = 0;\r\n  spawnCommands.forEach(sData => {\r\n    const eData = defEnemyEntities[sData.type];\r\n    if(entityTypes[eData.type]){\r\n      spawnIt(entityTypes[eData.type], eData, sData.laneIdx);\r\n      spawnCount++;\r\n    }else{\r\n      console.error('unknown entity type:', eData.type);\r\n    }\r\n  })\r\n\r\n  return spawnCount;\r\n}\r\n\r\nexport const update = () => {\r\n  groups.enemies.children.each(entity => {\r\n    entity.update();\r\n  });\r\n  \r\n  groups.player.children.each(entity => {\r\n    entity.update();\r\n  });\r\n\r\n  //- hack that stops spawning when slider at lowest value\r\n  if(SPAWN_LIMIT === -1 || spawnCount < SPAWN_LIMIT){\r\n    if(spawnFrequency !== SPAWN_MIN){\r\n      if(curTicker > spawnFrequency){\r\n        curTicker = 0;\r\n        spawnCount += rollForSpawns(defLaneSpawns);\r\n      }else{\r\n        curTicker++;\r\n      }\r\n    }\r\n  }\r\n\r\n  throttledUpdate();\r\n}\r\n\r\nexport const onThrottledUpdate = () => {\r\n  if(global.gameActive){\r\n    updateSpawnCount();\r\n    groups.enemies.children?.each(entity => {\r\n      entity.throttledUpdate();\r\n    });\r\n    \r\n    groups.player.children?.each(entity => {\r\n      entity.throttledUpdate();\r\n    });\r\n  }\r\n}\r\n\r\nconst throttledUpdate = throttle(THROTTLE_SPEED, false, onThrottledUpdate);\r\nexport const spawn = (group, key, anim, x, y) => {\r\n  // console.log(`spawn ${key} at (${x}, ${y})`)\r\n\r\n  let item = groups[group].create(x, y, key);\r\n  item.anims.play(anim);\r\n  return item;\r\n}\r\n\r\n/* Internal spawn methods */\r\nconst randomizeStats = statsObj => {\r\n  return {\r\n    speed: Phaser.Math.Between(statsObj.speed[0], statsObj.speed[1]),\r\n    jumpRate: Phaser.Math.Between(statsObj.jumpRate[0], statsObj.jumpRate[1]),\r\n  }\r\n}\r\n\r\nconst spawnIt = (EntityRef, entityData, laneIdx) => {\r\n  const pos = spawnPositions[laneIdx];\r\n  const stats = randomizeStats(entityData.stats);\r\n  \r\n  let entity = new EntityRef(sceneContext, groups.enemies, {\r\n    x: pos.x,\r\n    y: pos.y,\r\n    stats: stats,\r\n    depth: getDepthOfLane(laneIdx),\r\n    misc: entityData.misc\r\n  });\r\n  const randomScale = Phaser.Math.Between(entityData.scaleRange[0], entityData.scaleRange[1]) / 100;\r\n  entity.setScale(randomScale);\r\n}\r\n\r\nexport const spawnBowl = (x, y) => {\r\n  let bowl = new Bowl.Entity(sceneContext, groups.bowls, {\r\n    x: x,\r\n    y: y\r\n  });\r\n\r\n  bowl.setVelocity(defGlobalEntities.bowl.spawnSpeed, 20);\r\n}\r\n\r\nexport const slingBowl = () => {\r\n  let bowl = new Bowl.Entity(sceneContext, groups.bowls, {\r\n    x: player.x + 20,\r\n    y: player.y + 90,\r\n    depth: getDepthOfLane(player.laneIdx, 1)\r\n  });\r\n\r\n  bowl.setVelocity(defGlobalEntities.bowl.spawnSpeed, -100);\r\n}\r\n\r\nconst spawnPlayer = (laneData) => {\r\n  player = new Player.Entity(sceneContext, 800, 300, groups.player, laneData);\r\n}\r\n\r\nconst updateSpawnCount = () => {\r\n  const activeEnemies = groups.enemies.countActive();\r\n  if(lastSentActiveEnemies !== activeEnemies){\r\n    lastSentActiveEnemies = activeEnemies;\r\n    Events.emit('interface', 'setStat', { 'key': 'activeEnemies', 'value': activeEnemies });\r\n  }\r\n}\r\n\r\nconst formatSliderValue = sliderPosition => {\r\n  var minPerc = 0;\r\n  var maxPerc = 100;\r\n\r\n  var minV = Math.log(SPAWN_MIN);\r\n  var maxV = Math.log(SPAWN_MAX);\r\n  \r\n  var scale = (maxV-minV) / (maxPerc-minPerc);\r\n  \r\n  return Math.round(Math.exp(minV + scale*(sliderPosition-minPerc)));\r\n}\r\n\r\n\r\n/*\r\n//- this approach seems to perform a lot better, however cannot extend gameobject class correctly\r\nconst basicSpawn = () => {\r\n  let enemy = enemies.create(0, 50, 'raccoon_walk');\r\n  // console.log('instance:', enemy)\r\n\r\n  //- physics\r\n  enemy.setBounce(.4);\r\n  enemy.setCollideWorldBounds(true);\r\n  enemy.allowGravity = false;\r\n  \r\n  //- squeeze in hit box from edge of sprite\r\n  enemy.body.setSize(60,70);\r\n  enemy.body.offset.x = 35;\r\n  enemy.body.offset.y = 30;\r\n  enemy.anims.play('raccoon_walk');\r\n\r\n  enemy.setVelocity(Phaser.Math.Between(200, 800), 20);\r\n}\r\n */\r\n\r\nexport const external_setSpawnFrequency = (newValue) => {\r\n  spawnFrequency = formatSliderValue(newValue);\r\n}\r\n\r\nconst exportMap = {\r\n  setContext,\r\n  preload,\r\n  create,\r\n  update,\r\n  spawn,\r\n  spawnBowl,\r\n  slingBowl,\r\n  external_setSpawnFrequency\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser'\nconst eventEmitter = new Phaser.Events.EventEmitter()\nexport default eventEmitter","import Phaser from \"phaser\";\n\nconst KILL_TIMEOUT = 1000;\nconst DRAIN_TIMER_INTERVAL = 500;\nconst MAX_FEEDING = 1;\n\nexport const STATUS = {\n  FULL: 0,\n  EATING: 1,\n  EMPTY: 2\n}\n\nconst animationStatus = {\n  [STATUS.FULL]: 'foodBowl_full',\n  [STATUS.EATING]: 'foodBowl_full',\n  [STATUS.EMPTY]: 'foodBowl_empty'\n}\n\nclass Entity extends Phaser.Physics.Arcade.Sprite {\n    constructor (scene, physicsGroup, spawnData) {\n    super(scene, spawnData.x, spawnData.y, 'foodBowl');\n\n    this.drainRate = 0;\n    this.drainStart = null;\n    this.drainTimer = null;\n    this.hpRange = [ 0, 100 ];\n    this.hp = this.hpRange[1];\n\n    this.feeding = [];\n    this.canBeEaten = true;\n\n    //- parent stuff\n    scene.add.existing(this);\n    if(!isNaN(spawnData.depth)) {\n      this.setDepth(spawnData.depth);\n    }\n    if(physicsGroup){\n      physicsGroup.add(this);\n    }else{\n      scene.physics.add.existing(this);\n    }\n\n    //- physics\n    this.setBounce(.4);\n    this.setCollideWorldBounds(true);\n    // this.allowGravity = false;\n    \n    this.body.setSize(36,15);\n    this.body.offset.y = -2;\n\n    this.setStatus(STATUS.FULL, true);\n  }\n\n  addToDrainRate(drainRate){\n    this.drainRate += drainRate;\n    // console.log(`addToDrainRate to ${this.drainRate}`);\n\n    this.startDrainTimer();\n  }\n\n  setDrainRate(drainRate){\n    console.log(`setDrainRate to ${this.drainRate}`);\n    this.drainRate = drainRate;\n\n    this.startDrainTimer();\n  }\n\n  startDrainTimer(){\n    this.drainStart = new Date();\n    this.killDrainTimer();\n    this.drainTimer = global.setTimeout(() => {\n      this.onDrainTimer();\n    }, DRAIN_TIMER_INTERVAL);\n  }\n\n  onDrainTimer(){\n    const secondsSinceDrainStart = (new Date() - this.drainStart) / 1000;\n    const drainAmount = secondsSinceDrainStart * this.drainRate;\n    this.hp = this.hp - drainAmount;\n    // console.log(`hp: ${this.hp}, drainRate: ${this.drainRate}, drainAmount: ${drainAmount}`);\n    if(this.hp <= this.hpRange[0]){\n      this.hp = this.hpRange[0];\n      this.killDrainTimer();\n      this.emptyBowl();\n    }else{\n      if(this.hp > this.hpRange[1]){\n        this.hp = this.hpRange[1];\n      }\n      this.startDrainTimer();\n    }\n  }\n\n  killDrainTimer(){\n    if(this.drainTimer){\n      global.clearTimeout(this.drainTimer);\n      this.drainTimer = null;\n    }\n  }\n\n  emptyBowl(){\n    this.setStatus(STATUS.EMPTY);\n    global.setTimeout(() => {\n      this.destroy();\n    }, KILL_TIMEOUT);\n  }\n\n  eatenBy(enemyEntity){\n    if(this.feeding.indexOf(enemyEntity) === -1){\n      enemyEntity.body.velocity.x = 0;\n      //- new feeder\n      this.addToDrainRate(20);\n      this.feeding.push(enemyEntity);\n      if(this.feeding.length >= MAX_FEEDING){\n        this.canBeEaten = false;\n      }\n    }else{\n      // console.log('feeding with ', this.feeding.length);\n    }\n\n    if(this.status === STATUS.FULL){\n      this.setStatus(STATUS.EATING);\n    }\n  }\n\n  update(){\n  }\n\n  setStatus(status, force){\n    if(force || this.status !== status){\n      this.status = status;\n\n      switch(this.status){\n        case STATUS.FULL: \n          break;\n        case STATUS.EATING: \n          this.body.velocity.x = 0;\n          this.body.setDrag(500);\n\n          break;\n        case STATUS.EMPTY: \n          this.canBeEaten = false;\n          this.feeding.forEach(feeder => {\n            feeder.bowlEmpty();\n          })\n          break;\n        default:;\n      }\n      const animKey = animationStatus[this.status];\n      if(animKey){\n        // console.log('play', animKey);\n        this.anims.play(animKey);\n      }\n    }\n  }\n}\n\nconst initSprites = (sceneContext) => {\n  sceneContext.anims.create({\n    key: 'foodBowl_full',\n    frames: [ { key: 'foodBowl', frame: 0 } ],\n    frameRate: 10\n  });\n\n  sceneContext.anims.create({\n    key: 'foodBowl_empty',\n    frames: [ { key: 'foodBowl', frame: 1 } ],\n    frameRate: 10\n  });\n}\n\n\nconst initSpritesheet = (sceneContext) => {\n  sceneContext.load.spritesheet('foodBowl', './assets/bowl.png', { frameWidth: 38, frameHeight: 22 });\n}\n\nconst exportMap = {\n  Entity,\n  initSprites,\n  initSpritesheet\n}\nexport default exportMap; ","import Phaser from 'phaser';\n\nconst NUM_CELLS = 7;\n\nconst OFFSET = {\n  x: 30,\n  y: -10\n};\n\nclass Entity extends Phaser.Physics.Arcade.Sprite {\n  constructor (scene, x, y) {\n    super(scene, x, y, 'statBar');\n\n    this.progress = 0;\n    scene.add.existing(this);\n  }\n\n  update(){\n  }\n\n  setOffsetPosition(x, y){\n    this.setPosition(x + OFFSET.x, y + OFFSET.y);\n  }\n\n  playAnimationForProgress(){\n    const cellIdx = Math.floor(NUM_CELLS * this.progress);\n    this.anims.play(`statBar_${cellIdx}`);\n  }\n\n  setProgress(progress, force){\n    // console.log('setStatus', status);\n    if(force || this.progress !== progress){\n      this.progress = progress;\n\n      const cellIdx = Math.floor(7 * this.progress);\n      this.anims.play(`statBar_${cellIdx}`);\n    }\n  }\n}\n\nconst initSprites = (sceneContext) => {\n  sceneContext.anims.create({\n    key: 'statBar_0',\n    frames: [ { key: 'statBar', frame: 0 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n  \n  sceneContext.anims.create({\n    key: 'statBar_1',\n    frames: [ { key: 'statBar', frame: 1 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n  \n  sceneContext.anims.create({\n    key: 'statBar_2',\n    frames: [ { key: 'statBar', frame: 2 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n  \n  sceneContext.anims.create({\n    key: 'statBar_3',\n    frames: [ { key: 'statBar', frame: 3 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n  \n  sceneContext.anims.create({\n    key: 'statBar_4',\n    frames: [ { key: 'statBar', frame: 4 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n  sceneContext.anims.create({\n    key: 'statBar_5',\n    frames: [ { key: 'statBar', frame: 5 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n  sceneContext.anims.create({\n    key: 'statBar_6',\n    frames: [ { key: 'statBar', frame: 6 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n  sceneContext.anims.create({\n    key: 'statBar_7',\n    frames: [ { key: 'statBar', frame: 7 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n  sceneContext.anims.create({\n    key: 'statBar_8',\n    frames: [ { key: 'statBar', frame: 8 } ],\n    frameRate: 0,\n    repeat: -1\n  });\n}\n\nconst initSpritesheet = (sceneContext) => {\n  sceneContext.load.spritesheet('statBar', './assets/statbar.png', { frameWidth: 45, frameHeight: 10 } )\n}\n\nconst exportMap = {\n  Entity,\n  initSprites,\n  initSpritesheet,\n}\nexport default exportMap; ","import Values from './utils/values';\r\n\r\nconst DEBUG_ALPHA = 0;\r\nconst TRIGGER_DIMS = {\r\n  width: 25,\r\n  height: 100\r\n};\r\n\r\nlet sceneContext;\r\n\r\nexport const setContext = (context) => {\r\n  sceneContext = context;\r\n}\r\n\r\nexport const preload = () => {\r\n  sceneContext.load.image('bg-yard', './assets/yard-bg.jpg');\r\n  sceneContext.load.image('fg-yard', './assets/yard-fg.png');\r\n  sceneContext.load.image('lane4-yard', './assets/yard-lane4.png');\r\n}\r\n\r\nexport const create = (levelData) => {\r\n\r\n  const platforms = sceneContext.physics.add.staticGroup();\r\n  const leftTrigger = sceneContext.physics.add.staticGroup();\r\n  const rightTrigger = sceneContext.physics.add.staticGroup();\r\n  // sceneContext.make.sprite(50, 50, 'bg-yard');\r\n  \r\n  sceneContext.add.image(0, 0, 'bg-yard').setOrigin(0).setScale(1).setDepth(Values.zindex.BACKGROUND);\r\n  sceneContext.add.image(0, 0, 'fg-yard').setOrigin(0).setScale(1).setDepth(Values.zindex.FOREGROUND);\r\n  sceneContext.add.image(0, 0, 'lane4-yard').setOrigin(0).setScale(1).setDepth(Values.zindex.LANE_4);\r\n  const GAME_WIDTH = 900;\r\n\r\n  levelData.lanes.forEach(pO => {\r\n    const triggerY = pO.y - TRIGGER_DIMS.height;\r\n    // lets animals keep walkin past trigger, otherwise keep it at pO.width\r\n    const platformWidth = GAME_WIDTH - pO.x;\r\n\r\n    platforms.create(pO.x, pO.y, 'platform-floor').setDisplaySize(platformWidth, pO.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n    leftTrigger.create(pO.x, triggerY, 'trigger-spawn').setDisplaySize(TRIGGER_DIMS.width, TRIGGER_DIMS.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n    rightTrigger.create(pO.x + pO.width - TRIGGER_DIMS.width, triggerY, 'trigger-end').setDisplaySize(TRIGGER_DIMS.width, TRIGGER_DIMS.height).setOrigin(0,0).setAlpha(DEBUG_ALPHA).refreshBody();\r\n  });\r\n\r\n  return {\r\n    platforms,\r\n    leftTrigger,\r\n    rightTrigger\r\n  }\r\n}\r\n\r\nconst exportMap = {\r\n  setContext,\r\n  preload,\r\n  create\r\n}\r\nexport default exportMap; ","import Phaser from 'phaser';\r\n\r\nimport gameData from './data.json';\r\nimport { STATUS as STATUS_ENEMY } from './entities/raccoon-simple';\r\nimport { STATUS as STATUS_PLAYER } from './entities/player';\r\nimport Events from '../event-emitter';\r\nimport SpawnController from './spawn.js';\r\nimport LevelController from './level.js';\r\n\r\nlet game;\r\nlet levelGroups;\r\nlet emitter;\r\nlet sceneContext;\r\n\r\nlet points = {\r\n  bowls: 0,\r\n  hugs: 0,\r\n  bites: 0,\r\n  captures: 0,\r\n  escapes: 0\r\n}\r\n\r\nglobal.gameData = {\r\n  curLevel: 0\r\n}\r\n\r\nexport const killGame = () => {\r\n  global.stopGame();\r\n}\r\n\r\nexport const createGame = () =>{\r\n  const config = {\r\n    type: Phaser.AUTO,\r\n    parent: 'game-container',\r\n    width: 900,\r\n    height: 500,\r\n    physics: {\r\n      default: 'arcade',\r\n      arcade: {\r\n        gravity: { y: 800 },\r\n        debug: false\r\n      }\r\n    },\r\n    scene: {\r\n      preload: preload,\r\n      create: create,\r\n      update: update\r\n    }\r\n  };\r\n\r\n  game = new Phaser.Game(config);\r\n  global.game = game;\r\n  global.gameActive = true;\r\n}\r\n\r\nglobal.stopGame = () => {\r\n  // if not, hasnt been loaded yet\r\n  if(sceneContext){\r\n    global.gameActive = false;\r\n    sceneContext.scene.stop();\r\n  }\r\n}\r\n\r\nglobal.startGame = () => {\r\n  global.gameActive = true;\r\n  sceneContext.scene.start();\r\n}\r\n\r\nglobal.setLevel = (levelIdx) => {\r\n  global.stopGame();\r\n  global.gameData.curLevel = levelIdx;\r\n  global.startGame();\r\n}\r\n\r\nfunction setSceneContext(context){\r\n  sceneContext = context;\r\n  global.scene = sceneContext;\r\n  LevelController.setContext(context);\r\n  SpawnController.setContext(context);\r\n}\r\n\r\nfunction preload() {\r\n  this.load.audioSprite('sfx', './assets/sfx/mixdown.json', [ 'assets/sfx/splat.ogg', 'assets/sfx/splat.mp3'] );\r\n  setSceneContext(this);\r\n  this.load.image('blood', './assets/blood.png');\r\n  LevelController.preload();\r\n  SpawnController.preload();\r\n}\r\n\r\nfunction getLevel() {\r\n  return gameData.levels[global.gameData.curLevel];\r\n}\r\n\r\nfunction getScene(){\r\n  const level = gameData.levels[global.gameData.curLevel];\r\n  return gameData.scenes[level.sceneKey];\r\n}\r\n\r\nfunction create() {\r\n  //- make the level\r\n  levelGroups = LevelController.create(getScene());\r\n  Events.on('interface', onInterface, this);\r\n  // var spritemap = this.cache.json.get('sfx').spritemap;\r\n\r\n  let spawnGroups = SpawnController.create(gameData.entities, getLevel(), getScene());\r\n\r\n  this.physics.add.collider(spawnGroups.enemies, levelGroups.platforms, null, collider_enemyAndPlatform, this);\r\n  this.physics.add.collider(spawnGroups.bowls, levelGroups.platforms);\r\n  this.physics.add.overlap(spawnGroups.enemies, spawnGroups.bowls, trigger_enemyAndBowl, null, this);\r\n  this.physics.add.overlap(spawnGroups.bowls, levelGroups.leftTrigger, trigger_itemAtStart, null, this);\r\n  this.physics.add.overlap(spawnGroups.enemies, levelGroups.rightTrigger, trigger_enemyAtEnd, null, this);\r\n  this.physics.add.overlap(spawnGroups.enemies, spawnGroups.player, trigger_enemyAndPlayer, null, this);\r\n\r\n  this.input.on('gameobjectdown', onObjectClicked);\r\n  this.input.keyboard.on('keydown', onKeyDown);\r\n\r\n  setupMouseEmitter();\r\n}\r\nfunction update (){\r\n  SpawnController.update();\r\n}\r\n\r\nfunction onInterface(event, data){\r\n  // console.log('onInterface', event, data);\r\n  global.gameInterface && global.gameInterface(event, data)\r\n}\r\n\r\nfunction trigger_enemyAtEnd(enemy, trigger){\r\n  switch(enemy.status){\r\n    case STATUS_ENEMY.ROAMING_TAME:\r\n      setPoints('captures', 1);\r\n      enemy.captured();\r\n      break;\r\n    case STATUS_ENEMY.ROAMING_ANGRY:\r\n      setPoints('escapes', 1);\r\n      enemy.escaped();\r\n      break;\r\n    case STATUS_ENEMY.ROAMING:\r\n      setPoints('escapes', 1);\r\n      enemy.escaped();\r\n      break;\r\n    default: break;\r\n  }\r\n}\r\n\r\nfunction trigger_itemAtStart(item, trigger){\r\n  item.destroy();\r\n  setPoints('bowls', 1);\r\n}\r\n\r\nfunction trigger_enemyAndBowl(enemy, bowl){\r\n  if(enemy.canEat() && bowl.canBeEaten){\r\n    enemy.eatAtBowl(bowl.body);\r\n    bowl.eatenBy(enemy);\r\n  }\r\n}\r\n\r\nfunction collider_enemyAndPlatform(enemy, platform){\r\n  return true;\r\n}\r\n\r\nfunction trigger_enemyAndPlayer(enemy, player){\r\n  if(enemy.isAlive()){\r\n    // if player has arms open for a hug\r\n    if(player.checkStatus(STATUS_PLAYER.HUGGING)){\r\n        // hug happy raccoons that havent been hugged yet\r\n      if(enemy.isFull){\r\n        if(!enemy.checkStatus(STATUS_ENEMY.HUGGING)){\r\n          enemy.hug();\r\n          player.onHugEnemy();\r\n          setPoints('hugs', 1);\r\n        }\r\n        // already got your hug lil dude, move along\r\n      }else{\r\n        // get bitten by mean boys. shouldnt trigger twice cause player moves out of hugging state\r\n        player.onAttackedByEnemy();\r\n        setPoints('bites', 1);\r\n      }\r\n    }else if(player.checkStatus(STATUS_PLAYER.KICK_PREP)){\r\n      // enemy.punt ? enemy.punt() : enemy.kill();\r\n    }else if(player.checkStatus(STATUS_PLAYER.KICK) && player.getKickStrength() > 0){\r\n      if(enemy.punt){\r\n        const wasKilled = enemy.punt(player.getKickStrength());\r\n        if(wasKilled){\r\n          showBlood(enemy.body.x, enemy.body.y);\r\n        }\r\n      }else{\r\n        enemy.kill();\r\n        showBlood(enemy.body.x, enemy.body.y);\r\n      }\r\n    }\r\n  }\r\n\r\n  //- anything else, just walk on by\r\n}\r\nfunction onObjectClicked(pointer, gameObject){\r\n  showBlood(pointer.worldX, pointer.worldY);\r\n}\r\n\r\nfunction showBlood(x, y){\r\n  emitter.setPosition(x, y);\r\n  emitter.explode(20);\r\n  emitter.visible = true;\r\n  game.sound.playAudioSprite('sfx', 'splat1');\r\n}\r\n\r\n// function onSceneClicked(pointer){\r\n//   SpawnController.spawnBowl(pointer.x, pointer.y);\r\n// }\r\n\r\nfunction setupMouseEmitter(){\r\n  let particles = sceneContext.add.particles('blood');\r\n\r\n  emitter = particles.createEmitter({\r\n    visible: false,\r\n    blendMode: 'SCREEN',\r\n    speed: { min: -400, max: 400 },\r\n    angle: { min: 0, max: 360 },\r\n    scale: { start: 1, end: 0 },\r\n    lifespan: 500,\r\n    gravityY: 1000\r\n  });\r\n}\r\n\r\n\r\nconst onKeyDown = (e) => {\r\n  switch(e.code){\r\n    case 'Space': SpawnController.slingBowl();\r\n      break;\r\n    default: break;\r\n  }\r\n}\r\n\r\nconst setPoints = (key, change) => {\r\n  points[key] += change;\r\n\r\n  updateScoreboard(key, points[key]);\r\n}\r\n\r\nconst updateScoreboard = (key, value) => {\r\n  Events.emit('interface', 'setStat', { 'key': key, 'value': value });\r\n}\r\n\r\n\r\nexport const externalCommand = (event, payload) => {\r\n  console.log('externalCommand:', event, payload);\r\n}","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { createGame, killGame } from '../../phaser/trapper';\r\nimport { selectGameStatus } from '../ui/ui-slice';\r\nimport { setStat } from '../ui/stats-slice';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { getColor } from '../../themes';\r\n\r\nexport const Container = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  bottom:0;\r\n  right:0;\r\n  background-color: ${getColor('black')};\r\n  z-index:-1;\r\n  padding-top:10rem;\r\n  text-align:center;\r\n`\r\n\r\nexport const createGameInterface = dispatch => {\r\n  if(!(global as any).gameInterface){\r\n    (global as any).gameInterface = (event, payload) => {\r\n      switch(event){\r\n        case 'setStat': \r\n          dispatch(setStat(payload))\r\n          break;\r\n        default: console.error('invalid interface command', event);\r\n      }\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\nexport function PhaserContainer() {\r\n  const gameStatus = useAppSelector(selectGameStatus);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if(gameStatus){\r\n      console.log('gameStatus true, creating game!');\r\n      createGameInterface(dispatch);\r\n      createGame();\r\n    }else{\r\n      console.log('gameStatus false, stopping game!');\r\n      killGame();\r\n    }\r\n  }, [ gameStatus, dispatch ]);\r\n\r\n  return (\r\n    <Container id=\"game-container\">\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { MouseEventHandler } from 'hoist-non-react-statics/node_modules/@types/react';\r\n\r\nimport { getColor } from '../themes';\r\n\r\nexport const ScButton = styled.div`\r\n  display: inline-block;\r\n  padding: 2rem;\r\n  border: .5rem solid ${getColor('brown')};\r\n  border-radius: 1rem;\r\n  background-color: ${getColor('brown_beige')};\r\n  width:auto;\r\n\r\n  cursor:pointer;\r\n  &:hover{\r\n    background-color: ${getColor('brown_light')};\r\n  }\r\n\r\n  span{\r\n    font-size:3rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\ninterface LBType {\r\n  onClick: MouseEventHandler,\r\n  text: string\r\n}\r\n\r\nexport function Button({ onClick, text }: LBType) {\r\n  return (\r\n    <ScButton onClick={onClick}><span>{text}</span></ScButton>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\r\n\r\nimport { getColor } from '../../themes';\r\nimport { Button } from '../button';\r\n\r\n\r\nexport const ScSplash = styled.div`\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  min-width: 25%;\r\n  min-height: 25%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 4rem;\r\n`;\r\n\r\nexport const ScBg = styled.div`\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:100%;\r\n  background-color: ${getColor('brown_dark')};\r\n  border: 1rem solid ${getColor('brown')};\r\n  border-radius: 5rem;\r\n\r\n  z-index:-1;\r\n`;\r\n\r\nexport const ScBody = styled.div`\r\n`;\r\nexport const ScTitle = styled.h1`\r\n  text-align:center;\r\n  font-size:8rem;\r\n  color: ${getColor('brown_beige')};\r\n`;\r\nexport const ScButtons = styled.div`\r\n  margin-top:1rem;\r\n  text-align:center;\r\n\r\n\r\n`;\r\n\r\nconst onGameClick = (navigate: NavigateFunction) => {\r\n  // dispatch(startGame())\r\n  navigate('/game');\r\n}\r\n\r\nexport function Splash() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <ScSplash>\r\n      <ScBody>\r\n        <ScTitle>{'RACCOON TRAPPER'}</ScTitle>\r\n      </ScBody>\r\n      <ScButtons>\r\n        <Button onClick={(e) => onGameClick(navigate)} text={'NEW GAME'} />;\r\n      </ScButtons>\r\n      <ScBg />\r\n    </ScSplash>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { selectStats, selectScore } from '../stats-slice';\r\n\r\nconst ScStats = styled.div`\r\n`;\r\n\r\nconst ScStat = styled.div`\r\n`\r\n\r\nconst ScScore = styled.div`\r\n  span{\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nfunction Stats() {\r\n  const stats = useAppSelector(selectStats);\r\n  const score = useAppSelector(selectScore);\r\n\r\n  return (\r\n    <ScStats>\r\n      {stats.map((s, idx) => (\r\n        <ScStat key={idx}>\r\n          <span>{`${s.key}:`}</span><span>{s.value}</span>\r\n        </ScStat>\r\n      ))}\r\n      <ScScore>\r\n        <span>{'Score:'}</span>\r\n        <span>{score}</span>\r\n      </ScScore>\r\n    </ScStats>\r\n  )\r\n}\r\n\r\nexport default Stats;\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { selectActiveEnemies } from '../stats-slice';\r\nimport { external_setSpawnFrequency } from '../../../phaser/trapper/spawn';\r\n\r\nconst ScControls = styled.div`\r\n`;\r\n\r\nconst ScEnemies = styled.div`\r\n`;\r\n\r\nfunction Controls() {\r\n  const activeEnemies = useAppSelector(selectActiveEnemies);\r\n  const [ spawnSpeed, setSpawnSpeed ] = useState(20);\r\n\r\n  useEffect(() => {\r\n    external_setSpawnFrequency(spawnSpeed);\r\n  }, [ spawnSpeed ])\r\n\r\n  return (\r\n    <ScControls>\r\n  {/* <button className=\"level-button\" onClick=\"setLevel(0);\">Set Level 1</button>\r\n      <button className=\"level-button\" onClick=\"setLevel(1);\">Set Level 2</button> */}\r\n      <p>{'spawn speed'}</p>\r\n      \r\n      <input id=\"spawn-slider\" className=\"slider\" type=\"range\" min=\"0\" max=\"100\" value={spawnSpeed} onChange={e => setSpawnSpeed(e.target.value)}/>\r\n      <p>{`spawn rate: ${spawnSpeed}%`}</p>\r\n      <ScEnemies>\r\n        <span>{'Enemies:'}</span>\r\n        <span>{activeEnemies}</span>\r\n      </ScEnemies>\r\n    </ScControls>\r\n  )\r\n}\r\n\r\nexport default Controls;\r\n\r\n/*\r\n<div className=\"control-group\">\r\n<p>Spawn speed</p>\r\n<input id=\"spawn-slider\" className=\"slider\" type=\"range\" min=\"0\" max=\"100\" value=\"20\" onChange={() => {}}/>\r\n<span id=\"spawn-display\">20%</span>\r\n<div id=\"spawn-counter\"><span>Spawned:</span><span id=\"spawn-count\">0</span></div>\r\n</div>\r\n*/","import { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { getColor } from '../../themes/';\r\nimport { useAppDispatch } from '../../app/hooks';\r\nimport { startGame, exitGame } from './ui-slice';\r\nimport Stats from './components/stats';\r\nimport Controls from './components/controls';\r\n\r\nconst ScHeader = styled.div`\r\n  position:fixed;\r\n  top:0;\r\n  left:0;\r\n  transition:left .5s ease-in-out;\r\n\r\n  width:40rem;\r\n  height:100%;\r\n  margin:0;\r\n  color:white;\r\n  z-index:1;\r\n\r\n  &.collapsed{\r\n    left:-40rem;\r\n    transition:left .5s ease-in-out;\r\n  }\r\n\r\n  >.link-button{\r\n    color:white;\r\n    display:inline-block;\r\n    vertical-align:middle;\r\n    margin:0rem 1.8rem;\r\n    margin-top:1.5rem;\r\n    transition:color .5s ease-in;\r\n    color:${getColor('brown_beige')};\r\n    \r\n    h4{\r\n      font-size:2.5rem;\r\n    }\r\n    &:hover{\r\n      color: ${getColor('green_light')};\r\n      transition:color .2s ease-out;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ScBg = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  right:0;\r\n  top:0;\r\n  bottom:0;\r\n  z-index:-1;\r\n  \r\n  background-color: ${getColor('brown_dark')};\r\n  border-right: .5rem solid ${getColor('brown')};\r\n`\r\n\r\nconst ScTab = styled.div`\r\n  width:5rem;\r\n  height:calc(100% + .5rem);\r\n  position:absolute;\r\n  top:0rem;\r\n  left:calc(100% - 1rem);\r\n  background-color:${getColor('brown_dark')};\r\n  border:.5rem solid ${getColor('brown')};\r\n  border-radius: 0 0 1rem 0;\r\n  border-left:0;\r\n  border-top:0;\r\n  transition:background-color .2s ease-out;\r\n\r\n  z-index:1;\r\n\r\n  &:hover{\r\n    background-color: ${getColor('brown')};\r\n  }\r\n  \r\n`;\r\n\r\nconst ScBody = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  height:100%;\r\n`\r\n\r\nconst ScTop = styled.div`\r\n  min-height:20rem;\r\n  position:relative;\r\n  cursor:pointer;\r\n  border-bottom:.5rem solid ${getColor('brown')};\r\n  padding:1rem;\r\n`\r\n\r\nconst ScBottom = styled.div`\r\n  flex-grow:1;\r\n  padding:1rem;\r\n`\r\n\r\nconst ScLink = styled(Link)`\r\n  color:${getColor('brown_beige')};\r\n  margin:2rem;\r\n  font-size:2rem;\r\n\r\n  &:hover{\r\n    color:white;\r\n  }\r\n`\r\n\r\nconst ScHelp = styled.div`\r\n  \r\n`\r\n\r\nconst HelpList = () => {\r\n  const instructions = [\r\n    'Feed the raccoons and give them hugs!',\r\n    'Kick the ones who don\\'t love you!',\r\n    'Arrow Up/Down: Change langes',\r\n    'Arrow Left: Hug',\r\n    'Arrow Right: Charge kick',\r\n    'Space: Throw food',\r\n    '... you can\\'t win or lose right now'\r\n  ];\r\n  return (\r\n    <ScHelp>\r\n      <ul>\r\n        {instructions.map((i, idx) => (\r\n          <li key={idx}>${i}</li>\r\n        ))}\r\n      </ul>\r\n    </ScHelp>\r\n  )\r\n}\r\n\r\nfunction Header( { pages }) {\r\n  const [ collapsed, setCollapsed ] = useState(false);\r\n  let location = useLocation();\r\n  const dispatch = useAppDispatch();\r\n  \r\n  useEffect(() => {\r\n    if(location.pathname.indexOf('game') > -1){\r\n      dispatch(startGame())\r\n    }else{\r\n      dispatch(exitGame())\r\n    }\r\n  }, [ location, dispatch ]);\r\n\r\n  return (\r\n    <ScHeader className={ collapsed ? 'collapsed' : ''} >\r\n      <ScBody>\r\n        <ScTop>\r\n          <h2>{'RACCOON TRAPPER'}</h2>\r\n          <ScLink to={'/'} >\r\n            {'menu'}\r\n          </ScLink>\r\n          <HelpList />\r\n          <ScTab onClick={() => setCollapsed(!collapsed)} />\r\n        </ScTop>\r\n        <ScBottom>\r\n          <Controls/>\r\n          <hr/>\r\n          <Stats/>\r\n        </ScBottom>\r\n      </ScBody>\r\n      <ScBg />\r\n    </ScHeader>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import { useEffect } from 'react';\r\nimport { HashRouter, Route, Routes, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { PhaserContainer } from './components/phasercontainer';\r\nimport { Splash } from './components/ui/splash';\r\nimport { useAppDispatch } from './app/hooks';\r\nimport { startGame, exitGame } from './components/ui/ui-slice';\r\nimport Sidebar from './components/ui/sidebar';\r\n\r\nexport const ScStage = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  padding-top:1rem;\r\n`\r\n\r\nexport const RouteReader = () => {\r\n  let location = useLocation();\r\n  const dispatch = useAppDispatch();\r\n  \r\n  useEffect(() => {\r\n    if(location.pathname.indexOf('game') > -1){\r\n      dispatch(startGame())\r\n    }else{\r\n      dispatch(exitGame())\r\n    }\r\n  }, [ location, dispatch ]);\r\n\r\n  return null;\r\n}\r\n\r\nfunction App() {\r\n  const pages = [\r\n    {\r\n      route: '',\r\n      text: 'SPLASH',\r\n      element: <Splash />\r\n    },\r\n    {\r\n      route: '/game',\r\n      text: 'RACCOON TRAPPER',\r\n      element: <PhaserContainer/>\r\n    }\r\n  ]\r\n  \r\n  return (\r\n    <HashRouter>\r\n      <RouteReader />\r\n      <Sidebar pages={pages} />\r\n      <ScStage>\r\n        <Routes>\r\n          {pages.map((p, i) => (\r\n            <Route key={i} path={p.route} element={p.element} />\r\n          ))}\r\n        </Routes>\r\n      </ScStage>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport uiReducer from '../components/ui/ui-slice';\r\nimport statsReducer from '../components/ui/stats-slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    ui: uiReducer,\r\n    stats: statsReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './themes/fonts.css';\r\nimport GlobalStyle from './themes/';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n      <GlobalStyle />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}